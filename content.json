{"meta":{"title":"rango's note","subtitle":"note of life","description":null,"author":"rango","url":"http://blog.scavenger.top"},"pages":[{"title":"About","date":"2018-06-15T12:07:41.167Z","updated":"2018-06-15T12:07:41.167Z","comments":true,"path":"about/index.html","permalink":"http://blog.scavenger.top/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2018-06-15T12:07:41.167Z","updated":"2018-06-15T12:07:41.167Z","comments":true,"path":"categories/index.html","permalink":"http://blog.scavenger.top/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2018-06-15T12:07:41.167Z","updated":"2018-06-15T12:07:41.167Z","comments":true,"path":"tags/index.html","permalink":"http://blog.scavenger.top/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"coding/TIPS/after_linux_install","date":"2018-06-17T12:26:24.810Z","updated":"2018-06-17T12:25:34.756Z","comments":true,"path":"2018/06/17/coding/TIPS/after_linux_install/","link":"","permalink":"http://blog.scavenger.top/2018/06/17/coding/TIPS/after_linux_install/","excerpt":"","text":"title: after_linux_installdate: 2018/1/1 12:12:12123456789101112131415161718192021222324252627生成源文件sudo pacman-mirrors -i -c China -m rankifconfig：找不到命令pacman -S net-tools dnsutils inetutils iproute2修改 mac addresssudo ifconfig wlp2s0 downsudo ifconfig wlp2s0 hw ether a6:b7:00:a6:a7:a8sudo ifconfig wlp2s0 up中文输入法 fcitx-im fcitx-configtool fcitx-googlepinyin 如果你使用的是较新版本的GNOME，使用 Wayland 显示管理器，则请在/etc/environment中加入： export GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=@im=fcitx解决pyenv依赖https://github.com/pyenv/pyenv/wiki/Common-build-problemssudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev \\libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \\xz-utils tk-dev","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"黑帽seo技术总结","slug":"make_money方法/黑帽SEO技术总结","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.773Z","comments":true,"path":"2018/01/01/make_money方法/黑帽SEO技术总结/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/黑帽SEO技术总结/","excerpt":"","text":"链接：https://www.zhihu.com/question/22307591/answer/137005627 黑帽seo技术大解析 什么是黑帽SEO技术?笼统的说，所有使用作弊手段或可疑手段的，都可以称为黑帽SEO。比如说垃圾链接，隐藏网页，桥页，关键词堆砌等等。黑帽seo手法不符合主流搜索引擎发行方针规定。黑帽SEO获利主要的特点就是短平快，为了短期内的利益而采用的作弊方法。同时随时因为搜索引擎算法的改变而面临惩罚。 很多新手SEO在做SEO的时候不明白黑帽SEO技术，但是却在无意中使用了相关的SEO手法，从而使网站在几天或几星期后被百度搜索引擎K掉了。所以，想要防止网站因为使用黑帽SEO技术被K，就需要先去了解黑帽SEO技术。下面就来介绍下黑帽SEO技术。 1、博客作弊 BLOG，是一种交互性很强的工具。这几年，博客的兴起，成为了黑帽子SEO一个新的制造链接的福地。让别人来spam你。安装一个WordPress，不要启用Akismet反spam措施。然后比如发表些关于Mesothelioma的文章(高价关键字)。让spammer进行博客评论spam。最后分析那些评论，看看关键词和导出链接。如果评论里包含你的关键词(Mesothelioma)，那么就通过这条评论，当然先要把链接给去掉。这也算是一个UGC。 a.BLOG群发作弊：在国内常见的一些BLOG程序如：wordpress、 ZBLOG、PJBLOG、Bo-blog。早期的ZBLOG，PJBLOG因为开发者缺乏对SEO的认识。ZBLOG和PJBLOG，一度成为黑帽子SEO们经常光顾的地方。而Bo-blog博客程序，似乎还是可以给黑帽子SEO有机可乘的地方。 b.BLOG群作弊：BLOG群建作弊，就是通过程序或者人为的手段，大量申请BLOG帐户。然后，通过发表一些带有关键词链接的文章，通过这些链接来推动关键词的搜索引擎排名。 c.BLOG隐藏链接作弊：作弊者通过提供免费的博客风格(Free Template)，在风格文件里增加隐藏链接(Hide Links)以增加网站隐藏链接，达到提供搜索引擎排名。 2、页面跳转 利用Javascript或者其他技术，使用户在到达页面之后迅速跳转到另一个页面。 3、偷换页面 这是为SEO设计的高度优化的网页，当网站在获得理想排名后，用普通页面来替换优化过的页面。 4、桥页 桥页(doorway pages)是通常是用软件自动生成大量包含关键词的网页，然后从这些网页做自动转向到主页。目的是希望这些以不同关键词为目标的桥页在搜索引擎中得到好的排名。有效的桥页可以称之为着落页面(landing page)。唯一的区别是通常的桥页都是垃圾无价值的内容，而landing page是为了简化网站为己所用。他们的共同点是他们都是为了从搜索引擎获取流量而优化的。当用户点击搜索结果的时候，会自动转到主页。有的时候是在桥页上放上一个通往主页的链接，而不自动转向。 5、留言本群发 使用留言本群发软件可以自动发布自己的关键词URL,在短时间内迅速提高外部链接。 6、链接工厂 “链接工厂”(亦称“大量链接机制”)指由大量网页交叉链接而构成的一个网络系统。这些网页可能来自同一个域或多个不同的域，甚至可能来自不同的服务器。一个站点加入这样一个“链接工厂”后，一方面它可得到来自该系统中所有网页的链接，同时作为交换它需要“奉献”自己的链接，籍此方法来提升链接得分，从而达到干预链接得分的目的。 7、隐藏链接 大部分免费统计工具都会使用隐藏链接。statcounter就是一个例子。当你从它那获取统计代码并嵌入到你的网页时，你就算是使用了隐藏链接。 8、隐藏联署链接 联署链接，特别是带有id形式的(http://example.com/ref?id=123\\)是最坏的情况。我们唯一能做的事就是自己申明这是一个联署链接。比如\\[ad\\]，或者\\[partner-link\\]，这样得锚文字既可避免直接显示id，又能最大情况的做出了申明。 9、假链接 将链接添加到JS代码、框架或者是表单里面。这种方式的链接，对搜索引擎的蜘蛛来说，根本无法读取出来。因此，链接只是做给人看的，搜索引擎根本无法识别。 10、网页劫持 网页劫持也就是我们经常所说的Page Jacking，是将别人的网站内容或者整个网站全面复制下来，偷梁换柱放在自己的网站上。这个黑帽SEO方法是对网页内容极其匮乏的站长有吸引力的。但是，这个做法是相当冒险的，更是不耻的。搜索引擎的专利技术能从多个因素上来判断这个被复制的网页或者网站不是原创，而不予以收录。 11、网站镜像 通过复制整个网站或部分网页内容并分配以不同域名和服务器，以此欺骗搜索引擎对同一站点或同一页面进行多次索引的行为，这既是为什么有的网站注明禁止未授权不得做网站镜像的原因了，两个网站的完全一样，相似度过高必然会导致自己的网站受到影响。 12、地址重定向 302 redirect: 302代表暂时性转移(Temporarily Moved )，在前些年，不少Black Hat SEO曾广泛应用这项技术作弊，各大主要搜索引擎均加强了打击力度。即使网站客观上不是spam，也很容易被搜寻引擎容易误判为spam而遭到惩罚。大家肯定有这样的经历，搜索到某个网站的时候进去就变成另一个网站了，这种主要是通过跳转技术实现的，往往跳转到一个赢利性页面。 301跳转—把过期不用的或者删除的页面地址利用301跳转永久重定向到新的地址。当启用新域名时也可以用到这个技巧。 13、挂黑链 扫描FTP或者服务器的弱口令、漏洞，然后黑掉网站，把链接挂进去。这是不合法的手段，这些SEOer也是我鄙视的，国内大有这样的人存在。这些是可以通过SeoQuake插件辅助发现的。 14、斗蓬法 斗蓬法(cloaking)简单来讲就是网站站长用了两版不同的网页来达到最佳化的效果。一个版本只给搜索引擎看，一个版本给自己看。搜索引擎说这类做法是违规的，如果提供给搜索引擎的网站版本不能如实反映网页所包含的真实内容。如被发现，该网站会永久从搜索引擎名单中被剔除。 15、关键词堆积 很多站长在优化关键字的时候，堆积了大量关键字，让搜索引擎以为网页具有相关性，关键词堆积技术利用一长串重复性的关键词来蒙混搜索引擎。而实际上，这些关键词有时候与网页内容相关，有时候则与网页内容无关。这类办法很少奏效，而且，也不太可能在或长或短的时间内将一个网站的排名哄抬至很高。 16、自动生成关键字页面 有些购物搜索引擎会根据每次Google的来访查询自动生成相关关键词页面，并往这个页面里分配填充相关的合适产品。如果你的站有足够的内容，你也可以这么做。 17、PR劫持 PR劫持的方法是利用跳转。一般搜索引擎在处理301和302转向的时候，都是把目标URL当作实际应该收录的URL。当然也有特例，不过在大部分情况下是这样处理的。所以如果你从域名A做301或302跳转到域名B，而域名B的PR值比较高，域名A在PR更新后，也会显示域名B的PR值。最简单的就是先做301或 302跳转到高PR的域名B，等PR更新过后，立刻取消转向，同时也获得了和B站相同的PR值。这个做假的PR显示值至少维持到下一次PR更新。 18、细微文字 许多做搜索引擎优化的人士明白隐藏文字可能会遭到惩罚，所以就将本来隐藏的文字以细微的字体暴露出来。细微文字即使是使用微小的字体在网页不显眼的地方书写带有关键词的句子。一般这些文字是放在网页的最顶端或者最底部。这些文字的色彩虽然不是和隐藏文字那样与背景使用相同颜色，但是经常也以非常相近的颜色出现。 19、隐藏文字 隐藏文字(hidden text)是在网页的HTML文件中放上含有关键词的文字，但这些字不能被用户所看到，只能被搜索引擎看到。可以有几种形式，比如说超小字号的文字，与背景同样颜色的文字，放在评论标签当中的文字，放在表格input标签里面的文字，通过样式表把文字放在不可见的层上面等等。 20、隐藏页面 隐藏页面(cloaked page)是有的网页使用程序或脚本来检测来访问的是搜索引擎还是普通用户。如果是搜索引擎，网页就返回经过优化的网页版本。如果来访的是普通人，返回的是另外一个版本。这种作弊方式，通常用户无法发现。因为一旦你的浏览器去看这个网页，无论是在页面上还是在HTML源文件中，你所得到的都已经是与搜索引擎看到的不同的版本。检测的方法是，看一下这个网页的快照。 21、域名轰炸。 刚做seo的新手往往认为,注册很多个域名,同时连到主站,以提高主站的PR!如果这些域名有各自的网站,则没有问题!但如果这些域名都只有很少的内容,或指向主站的某个页面,这样,搜索引擎会认为这是一种作弊形为! 22、 购置域名 购买那些老的有权重的域名，拿来重新建设站点。 23、短期域名行为 为那些当下流行的关键词购买完全匹配的域名，并建立小型niche站。当这个流行趋势过去后即可遗弃掉这个域名。 24、多个子域名 想想blogspot，WordPress这些能通过UGC创建多个子域名的站。这种情况下针对某个查询他们可以出现多次排名。你也可以为你的用户提供二级域名。 25、不同域名下的重复内容 根据创意公用授权条款(Creative Commons License)提供你的内容。 26、Scraping 为热门网站创建镜像，并提供给知名站长。大部分都会很乐意这样少付出的事。 27、IP传送 根据访客的IP地址来给予其显示合适的当地化的内容。但是同时也为用户提供一种选择方式(比如Shopping澳洲站/英国站)。http://Shopping.Com这方面做的很好。 28、Cloaking Cloaking是这样一种黑帽SEO技巧，利用它你可以向用户和Google等搜索引擎展示不同的内容。比如有些Flash运用过多的网站，就可以利用Cloaking来为用户展示Flash的版本，而给Google展示一个只有文字的完全优化好了的网站。 29、付费链接 给慈善机构，软件程序开发者等捐款。很多人会给予捐款者做一个链接。 30、错拼 定义，校正错误拼写的词，并将其转移到正确词的版本。 31、Ad only pages 在用户获取实际内容前跳出广告。(比如弹窗，比如页面切换过程中的广告) 32、 虚假新闻 在那些模仿官网的站为真实的事件创建真实的新闻。 33、新的开发 查找新事物，报道他们并用博客记录下来。你最先发表的故事，因为你将会得到关注和链接。 34、Brand jacking 对某个品牌写一个差评比如说这个品牌的产品让你很失望，或者是建立一个“brand x sucks”的页面，这样可以受到消费者的关注。 35、Rogue bots 索引爬行其他网站，并让站长知道他们网站的问题(比如有坏链)。有些人会心存感激的给你做个反链。 36、Twitter自动化 只要你做的不过分，Twitter的自动化是完全可行的。计划你的tweets，甚至是通过其他博客的rss来自动发tweets都可以。只要你能表现出你的这个Twitter账号是在进行“手动”的操作。即使是机器人账户，只要他对别人也有用那么他也是可行的。 37、标题党 小报经常使用的招数，黑帽SEO也这么做。虽然有时这种欺骗性的标题有违道德。但是可以用讽刺或者是幽默的方法来表达。比如这篇文章，我可以只列出25条，而标题却说是50条。 38、给予搜索引擎不同的信息 你用WordPress么?那么你可以给你的评论链接加上个nofollow标签，这样搜索引擎将会和用户得到不同的信息。用户看到并点击一个链接，而搜索机器人则看到的是一个不要跟随的信号。 39、黑站 不管是黑客黑站还是安全专家给站长提出警告，两者都是同样的事。比如最近，我就收到一封邮件，这位朋友提醒我该升级我的WordPress了。 40、 链接诱饵 比如“SEO就是狗屎”这样的标题在最近很常见。为什么不换种方式呢?反SEO之类的事件现在不怎么奏效了，除非你很知名。相反的，发表一篇“100个理由让我爱上SEO专家”也许更能引起共鸣。 41、Map Spam 与其制造众多的假地址以使得自己能在google地图中出现，为什么不在现实中创建个联署网络呢?给那些小生意者(上班族)一点钱，让他们在地图上来代表你。他们需要做的就是帮你搜集Google的来信和潜在的客户。 42、论坛签名外链 我想很多SEO都应该了解论坛签名对推动排名有一定的作用，而在论坛发帖也是可以达到一样的效果，所以有专门的程序员开发了一种论坛群发工具，再通过几十个博客地址互相交叉链接，从而领导搜寻引擎蜘蛛强行抓取网站，很多人说什么一分钟能收录新站，其实就是应用了这种伎俩。任何加快搜索引擎收录和更新的手段都是有一定的风险的，我们应该让其更自然，即使是人为的外链操作，也应该尽量的自然化，如此才可以取得长足的发展。 43、站群黑帽SEO技术 当你在搜索某一个关键词时，发现第一页的前几个站公司名称都是一样的，而且这些网站互相链接，那么这就是黑帽seo技术的站群。通常来讲，构建站群是需要成本的，并且，一般站群网站被K，通常域名就会很难再起死回生，而且做站群实施成本高、后期管理和效果监测也比较麻烦的一种。站群在灰色产品和行业做的比较多，因为这方面的产品和服务都是互联网禁止的比较严的，常规的优化方法不适用，只能另辟稀径。 44、过多的虚假关键字 很多的站点会把许多与本站并不相关的关键字加入到自己网站中，通过在META中设置与网站内容根本不相关的关键字，以骗取搜索引擎的收录与用户的点击，在这里算是一个不太正规的优化方式，但笔者说的是过多的虚假关键字，还有经常为了增加此关键字更改网页titile, 这样两种方式都极有可能受到处罚降低排名(后者更为严重)。 45、重复注册 这个是违反网站提交纪律的一种比较卑鄙的作弊手段。他突破时间的限制，将一个网页在短时间内反复提交给同一个搜索引擎。 46、垃圾连接 加入大量链接机制，大量链接机制的意思是由大量网页交叉链接构成的一个网络系统这些作弊手段，一旦被搜索引擎发觉马上就有被K站的可能，希望seoer们在平时做优化时有意的无意的都要注意一下有没触犯到这些作弊手段，为提高搜索排行，吸引人点击，重复堆砌关键字，在博客和论坛大量发布与无关内容的链接，同称为垃圾链接。 47、权重转移 相信大家也看过一个新站权重5的站，其实这就是黑帽中的权重转移，权重转移是通过hack手法拿到权重高的webshell，比如“站长网”，通过拿到站长网的权限，在首页加一段黑帽301权重转移代码，从而把权重转移到新站。大家都知道301是永久重定向，黑帽seo中的权重转移就是利用这个原理作弊。 48、快照劫持 快照劫持是利用hack技术拿到了你的网站权限，相当ftp，趁你不注意、蜘蛛正抓取你网站的时候把数据换掉(通常是晚上操作)，等蜘蛛抓取完你的快照后再把数据换回来，这样你的网站快照就被劫持了，而且你检查代码也发现不了问题，由于修改主站标题、关键词、描述导致快照停留时间长。然后快照就是你劫持的快照，标题，关键字，描述都是你的，从而达到快速排名。一般都向高权重网站劫持快照。并且牛逼的技术在于，百度打开网站跳转到劫持站，正常打开不会跳转，不会被发现劫持，还可以按地区跳转，按IP段跳转，区分管理员地区跳转，管理员地区不跳转。 49、二级域名泛站群 泛站群程序使用域名泛站群，然后自动生成一些二级域名的单页网站。算是SEO黑帽的一种。通过不断的修改，现在的二级泛站群已经支持一个顶级域名如:abc.com,通过这个域名生成超过一千万的二级域名，关键字http://1.abc.com、关键字http://2.abc.com等等.每个域名下面生成不同的文章和标题关键字，也就是同时有千万个二级域名出现。达到快速排名的目的。 50、JS框架欺诈 本来框架结构是搜索引擎不喜欢的，但相对于垃圾广告而言，搜索引擎肯定更喜欢框架结构了，但是对于框架结构而言，搜索引擎是可以爬行的，并且也可以识别框架结构的内容，但搜索引擎并不能识别JS内容，所以我们利用JS包装这个框架结构，在搜索引擎抓取的时候，碰到是JS文件自然是无法识别，也无法抓取JS里面的框架结构内容。 最后建议，在底部留点空位，伪装正规网站的内容，比如文章列表就是一个很好的办法，如果搜索引擎抓取的时候就一个JS而没有其他内容的话，自然会判断为一个空白网站，而在底部添加一点文章内容，那搜索引擎判断的结果也就不一样了，在抓取不到框架结构的内容，在判断底部内容，那自然是一个正规网站的内容，所以我们表面上打开一个类似传奇SF的黑帽网站发现全是广告，并且网站广告的内容全是链接到站外排名还在首页。而搜索引擎可能到的却全是正规内容。 既然是做黑帽SEO优化的，那么最忌讳的就是不要把你的信息提供给百度了，比如：不建议做百度广告联盟、百度统计之类的。 51、新闻源劫持 如果利用代码获得了新闻源网站的权限，就可以做新闻源劫持。 52、目录轮链 轮链是一种现在比较流行SEO做外链的方法，SEO通过发布文章到A(文章—–A页面)，A网站发布的文章转载到B页面留下A页面URL(A— B+a)，B站发布的文章转载到C页面留下AB页面URL(B—C+ab)，依此类推，最后：E页面发布的文章转载到F页面留ABCDE页面的 URL(E—F+abcde)，这样形成了一个在B,C,D,E4个页面上都留下了a链接(a链接的最终页面指向A页面)，从而极大的提升了A页面的权重，这就是轮链的概念。 53、搜索引擎流量劫持 这种劫持比快照劫持简单，直接在首页添加，判断访问来路是搜索引擎还是其它的JS代码，当来路是搜索引擎的时候就跳转到目标站。 54、“安全岛”技术 “安全岛”是一套理论，就是一种传播中的暂停理论，即通过人为或自然的设施，使某种形式的传播暂时得以缓冲，缓冲之后能使危险性极具减小。 我们可以利用软文或者辅助网站为主站引导权重，然后通过优化软文和辅助站点，来提升主站的权重和排名。这么做的好处是，即使我们在操作中出现无意识的作弊现象，或者百度算法改变带来的风险，可以通过安全岛进行缓冲，保证主站的安全。 注：部分黑帽SEO技术是外文翻译过来的，有些词汇也没接触过， 难免翻译会有错漏，欢迎大家指出来。当然小编能力也有限，不会都知道所有的黑帽SEO技术，也欢迎大家多多留言一起交流。 难免翻译会有错漏，欢迎大家指出来。当然小编能力也有限，不会都知道所有的黑帽SEO技术，也欢迎大家多多留言一起交流。","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"april","slug":"diary/4","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.753Z","comments":true,"path":"2018/01/01/diary/4/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/diary/4/","excerpt":"","text":"4.304.25命运石之门 ，刀剑神域 等等一系列番剧，剧情逻辑有些问题，看多了会傻的 掌握一定的知识后，去践行4.19还记得写出的hello,word吗？ 还记得弹出来的天空之城前奏吗？ 还记得花体写出来的L吗？ 何其的相似 学习 转眼快到五月了 真是太难了 一次又一次的打击，要是以前还是一个学生的时候 那该有多么好 但安逸意味着牢笼 安逸的同时你也失去了机会 没有方向 没有劝导 没有应付 只有我，只有目标 我长大了，真的跟以前不一样了 倒数 131天 4.15今天刷完了，某科学的电磁炮 莫名的感觉不错 那可是 橘里橘气的东西 know who you are know where you want go 80/20 理论 实际中经常应用到的知识只占总体的 20% 80%的利润由20%的客户产生，20%的利润往往由80%的人产生，——–精力是有限的，抓住主要的矛盾 The thing which without your thinking is not yours 价值体现在不可替代性 闪光点 信息的不对称 产生价值 The more ,the more —马太效应 If today is your finally day ,what you want to do . Now ,the thing which you are doing is imporant,your time is limit,so do not waste is on useless thing Do you know what made you who you are today? 1234567虚拟的的世界--------- overload分之的时间线 ----------- 平行世界f(x)=y 必然的一切 -----------Deeplearningnow you already know overload The person’ value,shows by story 人物性格的凸显，体现在故事中 what is good and evil? overload 在混乱中的求生吗？ 为了自己在意的的人的利益，而抢夺他人的利益？或是说这亦不过是自私的一种吧 倒数135天 4.13又迷路了 但看了部好番 少女终末旅行 4.8两次噩梦了，太悲伤不愿去想 4.4 * 我决定要退学，我觉得这是个正确的决定。不能否认，我当时确实非常的害怕。 * 我跟着我的直觉和好奇心走，遇到的很多东西，在后来被证明是无价之宝。 * 你必须相信一些东西—-勇气、命运、生命、缘分，随便什么。这种相信从不会使我倒下，反而使我的生命变得与众不同。 * 我很清楚，使我一直走下去的就是我爱我所做的。你需要去找到你所爱的东西。 * 只有爱你所做的，你才能成就伟大的事情。如果你没找到自己所爱的，继续找，别停下来。就像所有与你内心有关的事情，当你找到时你会知道的。 * 每天早晨，我都会在镜子中间看自己，并且问自己：”如果今天是我生命中的最后一天，你会不会完成你今天想做的事情呢 ？”当答案连续很多次是”NO”的时候，我知道我需要改变某些事情了。 * 你有时候会思考你将会失去某些东西，记住你就要死去是我知道的避免这些想法的最好办法。你已经赤身裸体了，你没有理由不去跟随你自己的心。 * 你们的时间很有限，所以不要将他们浪费在过其他人的生活上。不要被其他人的观点的噪声掩盖你真正的内心的声音。 * 你要有勇气去听从你直觉和心的指示。他们在某种程度上知道你想要成为什么样子，所有其他的事情都是其次的。 * 成为墓地里最有钱的人对我没什么吸引力。夜半上床时，对自己说：你做了些了不起的事情。这对我很重要。 4.3第一个梦，是你的永远都躲不掉。 第二个梦，命运是自己的，不要让别人替你掌控。 第三个梦，所有事情不要等到失去了才知道后悔。 ####","categories":[{"name":"diary","slug":"diary","permalink":"http://blog.scavenger.top/categories/diary/"}],"tags":[]},{"title":"deep","slug":"hack/deep","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.663Z","comments":true,"path":"2018/01/01/hack/deep/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/hack/deep/","excerpt":"","text":"没有恶意传播，扰乱网络环境，用于违法犯纪的后果自负 不要泄露任何个人信息 不要相信任何人 http://wiki5kauuihowqi5.onion/ hidden wiki html http://wikitjerrta4qgz4.onion/ hidden wiki white https://thehiddenwiki.org/ hidden wiki black http://lei6ezsexd4iq2tm.onion phpbb 中文论坛","categories":[{"name":"hack","slug":"hack","permalink":"http://blog.scavenger.top/categories/hack/"}],"tags":[]},{"title":"安心的写一篇CC整理帖_免得套路来套路去_想学的也就是真踏实学的","slug":"hack/安心的写一篇CC整理帖_免得套路来套路去_想学的也就是真踏实学的","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.680Z","comments":true,"path":"2018/01/01/hack/安心的写一篇CC整理帖_免得套路来套路去_想学的也就是真踏实学的/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/hack/安心的写一篇CC整理帖_免得套路来套路去_想学的也就是真踏实学的/","excerpt":"","text":"安心写一篇最详细的CVV入门帖，免得大家套路来套路去的，愿意学的也无非也就是愿意节省更多时间，获得更多细节经验了。 从介绍名词开始吧，跟着名词 一.CC类1.CVV—CVV其实是指信用卡背后的安全码，作为行业统称分为Carding（梳理），dump（转储）两类好听的就是使用未经授权的信用卡账户获取利益的过程（现在大家认识当中借记卡或者其他网络账户例如Paypal也算在里面了）Carding：简单解释就是网络操作dump：简单解释就是复制实体卡通过POS机进行操作2.CC（信用卡）3.风控：风险控制系统（一般通过大数据识别也就是说相同的行为出现次数就会被记录，这个一般应该没有人会说）4.Bin：银行识别码，卡的前六位，通过它可以识别卡的国家，发行银行，类型等等例如：4305875144651244 | 11 | 2020 | 662 |US| David Mechanic | 23 Stoney Brook Lane | Middleton | MA | 02049 |430587就是卡号的Bin4开头为visa5开头为万事达62开头为银联3开头多为美国运通和日本JBC深度了解可以去百科，通过Bin查询信息的网站也一搜一大堆，论坛规定不可以留任何站外链接，大家自行手动这点动力都没有也就该休息了 5.DOB：出生日期6.SSN：社保账号（在美国全民社保，所以社保号很重要，比重类似于身份证号）7.MMN：妈妈结婚前的姓8.OTP：一次性密码，一般就是短信验证码8.VBV：visa验证，额外的验证需要验证DOB,SSN,MMN，OTP9.Non VBV：跳过的上述额外visa验证，一般是某种类型的卡不需要10.MSC：美国运通额外验证机制类似VBV，Non MSC也就类似Non VBV11.卡类型：这里也不做介绍了，验证Bin之后你就知道了，出料的站点基本也都会标知道了卡类型，随便查一下就知道大概的额度了 12.测活的方法：cc live 谷歌会给你出来一堆网站，一般没人用，活卡经过网站测后很快会激活风控系统被冻结13.测余额的方法：只要你购买的料是详细的，发卡国家语言过关一个电话就解决了，也有收费的测余额往网站一般为1-5美元左右，个人基本不用，我只需要大概额度就可以，没必要的测试都有可能激活发卡银行的风控检测 安全操作类我只说大概，这个说明白几天也说不完1.VPN：这个就不用解释了，我只划分安全等级吧最安全，有安全的服务器自己搭建，其次deepdotweb的推荐，再次非国内没有日志为第一基础要求2.socks5：类VPN，也是一种网络传输协议和方式，比VPN更安全，不会追溯到本地DNSCC操作需要到大量的IP来匹配更精确的地址，所以操作的socks5是库类供应商几百到几千IP的3.ccleaner：清理软件。可以进行一些普通软件做不到的底层清楚，有兴趣的自己详细去了解4.RDP：简单的说就是一台远程电脑，作用就是用它进行操作，多加一层防护5.Mac：物理网卡地址，类似汽车的发动机号，通过IP可以追溯到，简单说可以知道你在哪里修改的软件TMac，Mac address change2.0等等 VPN断网保护：也就是VPN断连后自动断网的保护机制，一般是利用防火墙设置的，小众软件也有 写到这吧，愿意自己研究的就自己研究研究，我没求过也没主动舔过水让人家成为我的徒弟，平心而论也没吭过任何一个之前没有网站担保的时候跑学费的也有，无赖也碰上了想套路的无非也就套路这些，索性就写出来，愿意学的也就真多几分真心 价格：0.15比特币（在不低于RMB6888不高于10000的时候都有效，如果超出或低于这个范围不要直接购买，请私信我另开贴）投诉期：一般为我正式教学的当天吧，一般3-6个小时就带出来，极少数是临时有事儿，第二天继续的，那样我会通知管理 *在这里在重申一下带你的时间是一个月，并非一个流程，因为流程学会了你实际操作中有可能遇到一些细节问题，我告诉你其中的原理和解决办法，会节省你更多的时间，但不要懒到谷歌一下就可以解决的问题来问我，我不是把食物喂到你嘴里的保姆带你入门，有多大的成就和造化还是看你个人。","categories":[{"name":"hack","slug":"hack","permalink":"http://blog.scavenger.top/categories/hack/"}],"tags":[]},{"title":"老7临走前的笔记","slug":"hack/老7临走前的笔记","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.673Z","comments":true,"path":"2018/01/01/hack/老7临走前的笔记/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/hack/老7临走前的笔记/","excerpt":"","text":"此人月入万刀，分享了一些思路。不过老7已经要退出圈子了，趁他还没有删完他的贴我赶快备份了一下他的帖子 隔壁论坛会员老7分享自己个人网站利用python配合C++全自动采集内容站群算法做adsense月入万刀的实操方案。虽然不是教程的具体操作方式，但是他通过回答大家的问题让有基础的用户得到一些思路，受到一定启发，原帖已经被设置为最高权限，无法浏览了。 此算法为python配合C++，改进和训练人工智能历经两个月的时间，收入增加效果明显，当然最主要的还是新算法起作用了。7月份9000多美元，8月份稍微增加一点，本月13000美元。这只是他网站收益的一部分，google adsense收入则更超出这个。另外需要分享的是， paypal对于年收入超过50000美元的，受外汇管制的营销，用户可以直接打上海办事处电话，客服会告诉你一些提高限额的渠道。 思路跟某些人说的全自动采集内容做站群，利用自己算法迷惑google思路比较接近，但具体细节摸索很多才能有点成效，主要靠大数据和机器深度学习完成。而且工作并没有很多人想象的那般轻松，采集会根据源做相应的调整。另外目前针对百度的效果还是有限，很多关键词搜索结果，百度中都不是匹配，不是百度不懂而是百度自私。Google则把最正确的用户需要的结果第一时间呈现给用户。 他也是个人单干，以前5人小团队因为长大后各自结婚生子而各奔东西，自己也是利用github上开源的人工智能加深度学习组件了机器群，其实也就是几台强悍点的服务器。按照AlphaGo的思路，让其在网络里自行学习和运算，在某些（你懂得）搜索引擎和能获得优势的网站上给出最佳途径和对比方式。例如站群这一面，自行列出单价和浏览访问量，再自行搜集数据建立相应的网站（这个用python实现）。这样的好处就是能不会被Google或者其他反作弊系统识别，可以长期稳定来做。 关于有些人对全自动采集站可读性的质疑，他试图清晰的解释下其中一种最见效的方式。“比如说一段时期，“风油精”这个关键词很火——全智能大数据分析的，你也可以建立这样的一个大数据分析链，也可以使用某些机构的成果,github上有，我就是直接提取结果的。之后利用这个关键词，迅速的创建与之相关的域名和网站（这一部是程序员都能实现，我用的是python,大赞python），整个流程就是以接近病毒式扫描和创建关键词，以web形式呈现，引来的流量是非常可怕的，所以我有很多小vps负责负载。这就是google的一方面，还有某些细节属于个人核心技术了，等你到了那一步其实自然就能懂了。” “再透露一点，关键问题点到为止哈。多想想自然就明白，机会是给有准备的人。比如“风油精”这个关键词，不管是围绕这个词的网站也好，论坛版块也好，单页文章也罢，所有信息数据均智能采集网络（有开源的程序判断文字的流畅性和可读性的，这点不用担心），接下来把采集来的数据如何排列起来才是亮点，就模拟那种回帖方式的啊，紧凑的那种，明白了吗？用户以为还真是人在回帖呢，比如这个风油精的使用感受之类的，PV会爆，我的小vps承受不了怎么办呢？github pages啊，无限的啊，小vps+github不用担心任何问题。关于检测那个语句的流畅和可读性，我的程序里里是去掉了的，太影响速度和效率了，以为要去其他平台逐句逐句的对比。索性去掉，反正收集的信息基本都是流畅完整的，到时候按照一定的方式（算法）打乱拼接就可以了，力争做到网络重复率极低便可。” 关于adsense垃圾采集站被K账号的问题，老7则分享说：“首先，不说站垃圾不垃圾，任何公司包括google都不会去定义一个网站是否垃圾或者歧视采集来的文章，更不会认为低人一等。例如很多人复制shadowsocks的文章，现在百度屏蔽了shadowsocks 关键词，这个文章的某些技术和知识就是适合自己本人，你就让其在你的小站上存在，天经地义。搜索引擎注重的是转换率和价值（复制的文章也是有价值的，高低而已，原创的价值最高）。你被k是否有某些不正当的流量，不要去购买那些所谓的几万十几万的ip流量，我可以告诉你，还不如不买（触犯某些人的利润，抱歉）原理和原因就不解释了，码字麻烦，而且得罪人。其次就是莫名其妙的点击和跳转后停留的时间等等等等因数。我的g帐号很多，近两年都没有K过。可以借鉴，最后祝网赚愉快。” 同时也声明，本人绝非炫耀显摆，我能力和精力有限，不想把自己推入漫天口水的是非之地，如果你怀着质疑和寻找任何瑕疵的目的点开这个帖子，再看下去就显得很不明智了。首先，我是个非常普通的小程序员，能使用QT+C++ 和python+pycharm平台。跟CSDN里面那些真正的高手比起来，他们几乎完全可以碾压我。若想致力与网络上生存，学一门语言真的非常必要，现在python几乎能完成任何你能想象的网络工作，从那么多语言走过来，力顶python，它简单，语法清晰，应该在语言难度系数里最低了，功能却超乎寻常的强大，可以说能静心下来看书的人一定能学会。也可以说这个时代的我们能接触到python是种莫大的荣幸，有朋友私信问我哪本书适合？在此统一回答，买第3版本，越厚越好，因为详细和例子多。还有就是算法，我很惊讶有些朋友说网赚还需要算法？我不敢正面回答，保持缄默，不想意见相左，因为大家都知道在论坛里很容易把这样的冲突上升到问候对方先人的惨烈程度。其实算法在我们身边无处不在，就连最基本的一个最新帖子的发出，都使用到了算法来排序。能解决任何问题的方法都是算法，搜索剪枝，A*寻径，博弈树和遗传算法等等最基本的算法就是构** 算法的定义就是解决问题的方式和途径，方式和途径不一样，效率和效果也不一样，程序=代码+算法。算法才是程序的灵魂。github上集合了太多人类的智慧和思路，有时间可以多看看。做网赚，再怎么说也要会门语言，讲究效率的时代，哪能拼人力。祝网赚愉快","categories":[{"name":"hack","slug":"hack","permalink":"http://blog.scavenger.top/categories/hack/"}],"tags":[]},{"title":"黑客团队的十大职务","slug":"hack/黑客团队的十大职务","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.676Z","comments":true,"path":"2018/01/01/hack/黑客团队的十大职务/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/hack/黑客团队的十大职务/","excerpt":"","text":"如今，黑客已经不单纯是个人行为的表现，联网黑客组织的运作模式正日益向企业化靠拢，并且已经有越来越多的专家级技术人员加入了这些组织。从业务角度来看，由于世界各地有大量组织成员愿意每日每夜的为这些网络黑客团伙工作，因此这些犯罪集团的产量是相当高的，他说：当这些组织找到可以下手的机会时，有关的组织成员可以在几小时内便开始策划攻击。 这些地下网络黑客团伙目前多数由对相关的黑客技术非常熟悉的专家组成，他 们正在没日没夜的疯狂改善自己的攻击技术，不断为其“客户”推出更新更好的“服务”。 网络黑客团伙犯罪组织内部10大职务探秘 1、程序员(Coders/programmers)：负责编写黑客组织用来发动攻击的软件工具。 2、派送员(Distributors)：负责将偷来的数据转手卖给其它人。 3、技术专家(Tech experts)：负责维护网络黑客团伙组织的内部IT架构，工作包括服务器的维护、密码技术的开发、数据库的维护等。 4、黑客(Hackers)：负责搜索各类应用程序、系统和网络的漏洞和弱点。 5、忽悠专员(Fraudster)：负责各种与网络社交场合有关的诈骗行动，比如在网上散布钓鱼攻击用的“鱼钩”或者发送垃圾邮件等。 6、主机系统提供者(Hosted systems providers)：为需要在网上架设内含非法内容服务器的客户和网站提供服务。 7、出纳员(Cashiers)：手上控制了被成功黑到的银行账户，并会将这些账户的账户名和密码告诉网络黑客团伙的其它组员，以便他们从中领取报酬。 8、运钞员(Money mules)：负责在各个银行账户间转钱，他们还经常以赴美留学学生或者工作者的身份持签证入境美国，然后负责把存在美国银行里的被黑账户的钱拿走。 9、洗钱员(Tellers)：负责利用网银等现金服务系统，使用不同国家的货币将集团非法所得的财物进行洗钱操作。 10、组织头目(Organization Leaders)：通常并没有什么黑客技术，不过他们善于管理团队，并需要负责寻找可以下手的目标。","categories":[{"name":"hack","slug":"hack","permalink":"http://blog.scavenger.top/categories/hack/"}],"tags":[]},{"title":"躲避摄像头","slug":"hack/躲避摄像头","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.676Z","comments":true,"path":"2018/01/01/hack/躲避摄像头/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/hack/躲避摄像头/","excerpt":"","text":"现在，大家最头疼的就是城市遍布的摄像头。大家都想知道怎么躲。躲摄像头根本不要考虑。没法躲。我们躲的目的不是不让摄像头拍到，而是即便拍到你也无法确定你，更无法定位你从哪里来，到哪里去。达到这个目标，摄像头就没有了意义。1 怎么让摄像头无法确定你？不能拍到你的脸，或者身上的明显特征，比如纹身，耳环，伤疤，发型。夏天用墨镜，粘胡子，帽子，假发，内增高鞋等乔装，冬天带口罩。现在雾霾天，夏天也可戴口罩，没人会觉得奇怪。通过乔装实现无法通过视频辨别你是谁。2 无法定位你从哪里来，到哪里去。这就要选择换装地点。一般要偏远郊区，大型城中村，大型老小区，选择的原则，人流量大，摄像头密度没那么高的地方，在这些地方完成换装，注意离开的间隔时间。如果用车，要选择车流量大的地方。比如，有车接应的情况。在某一繁华地段，在没有摄像头的路段，搭上同伙的车离开也是一种办法。这里注意，时间间隔，你从摄像头里消失的1个小时，所有的车辆都会被调查，所以不能急着上车，要是你能等2小时再上车就非常安全。其次，此路段车流要相当大。1小时几千辆车，这就没法查了。其次，搭车速度要快，虽然当场没有摄像头，别的车通过两个摄像头间只要3分钟，你要5分钟，那准被怀疑。所以，上下车要快，这样不会被怀疑。没车接应的情况。要换装，然后选择没有摄像头的线路离开换装地点越远越好。换装的衣服一定要选最普通的，穿的人最多的。 大家一般都以为用车比没车好。但实际上，不用车比用车好。汽车目标太大，很容易被锁定。即便几千块辆车，每辆车都能迅速锁定到人。而路上即便只要几百人，也搞不清都是谁。还有，一定要带走所有东西，不能遗留在换装地点。哪怕带走后在安全地点销毁。","categories":[{"name":"hack","slug":"hack","permalink":"http://blog.scavenger.top/categories/hack/"}],"tags":[]},{"title":"make-money","slug":"make_money方法/make_money","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.773Z","comments":true,"path":"2018/01/01/make_money方法/make_money/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/make_money/","excerpt":"","text":"这是一个很大的需求点首先晒下2张图 嗯，全世界所有网站中，wordpress占比25%以上，已经有七千五百万多的网站使用这套系统。 这个是历年的趋势。 总之，老农民以前就推送过，说过，WORDPRESS是世界上最好的CMS程序。 wordrpess我经常用，所以会产生一个主题，插件的搜索，还有付费主题，付费插件的破解等。 国内的wordpress主题插件网站我随便举例2个 国内对这块的需求也不错。 做的好的网站，日IP也是可以过万的，国内这类的网站的流量兑现方式主要有以下几个方法。 1 挂百度的广告， 2 卖主题 3 卖网站会员 4 卖广告位 当然，我不是说要做国内的，因为百度我不喜欢，我还是喜欢谷歌。 国外的wordpress主题插件网站我们直接以themeforest的一款wp主题，直接查看谷歌的搜索结果 除了第一名，其他的基本都是免费分享的，我们点进去看一下那些网站的流量 各个都牛逼哄哄的是不是，流量都是挺可观的，毕竟这是全世界大部分站长的一个刚需啊。 下面我们选取这里面流量从无到有的网站进行分析。 http://thememaniacs.com 老套路 网站长什么样 满屏的ADSENSE，当然，我浏览器记录刚刚访问过米课，所以有了米课的广告。 （好像无形当中透露了ADSENSE引导高价关键字的一个思路） 文章页面 标注原收费主题的来源，然后下载地址。 similerweb分析 流量趋势一直在上升。 刚上次那个国外大人站一样，流量源国家也是来自世界各地。 92.86%的来自搜素引擎 关键词，485个，这个是新站，本来想用semrush查看，不过怕semrush更新不及时。 （similarweb比semrush反应比较迅速，这个我测试过） 我们来看这几个是什么关键词 wordfence premium nulled skadate download free nulled generatepress premium download digital paybox nulled 所以，我们知道我们可以做什么类型的关键词了吧。 没错，就是各大主题，插件的名称，加上download, nulled,或者cracked 这类的关键词，一般竞争度很少。 我这里附上semrush的关键字排名 这个新站有830个关键词排名被SEMRUSH统计到 这些我稍后会上传到我的小密圈内。 最后说下 http://nulltheme.net，这个alexa日均20万IP。 15年的时候曾经入侵过，不过昨天本来想上去放个统计，发现后门丢了，漏洞也补了~ 哎，所以只能简单的分析一下 最后简单说下做法1 wordpress搭建一个这样的网站 2 采集themeforest等各大知名wordpress主题插件销售的站点 3 采集的主题，插件等，标题加上null或者crack 或者download 4 文章的内容直接采集themeforest等各大知名wordpress主题插件销售的站点里的介绍即可。 5 文章尾部附上下载地址 （下载地址可以做content lock，当然 下载地址是假的）6 有能力的话，第5条改成收集主题，插件的下载地址，上传到自己的国外网赚网盘上面，这样，访客下载的时候，就顺便给你带来了盈利。 7 优化的话简单，GSA RANKER设置链轮即可。也可以自己配合其他的群发工具。 锚文本多样性，等等，这很好推，主要你的关键词以主题插件的名称为主，这类的竞争度很小。 8 会代码的话，主题的footer.php加上你的友情链接，比如远程读取txt，然后挂上链接的代码。 这样无形当中，给你的网站增加了很多的高质量外链。后期排名简直不要不要的。 以下进入广告时间段。 码字好累就到这里了。也许下一篇我会教你们怎么撸一个主题破解的网站。 码字不易，您的转发和赞赏是我的一大动力之一。 编辑于 2017-05-17 ，您的转发和赞赏是我的一大动力之一。 编辑于 2017-05-17","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"WordPress收费主题_老农破解下载","slug":"make_money方法/wordpress主题_老农","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.776Z","comments":true,"path":"2018/01/01/make_money方法/wordpress主题_老农/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/wordpress主题_老农/","excerpt":"","text":"FOFA小技能 看我山里老农如何薅WordPress收费主题 冯意番 已关注 5 人赞了该文章 悲痛一下作为出身贫寒的山里老农民，昨晚被老外黑产团队薅了几千刀，哎。。 一夜久久不能入睡。恰巧王者荣耀昨晚更新，连人机发泄的机会都木有！ 人在江湖飘，哪有不挨刀。好在我淳朴，不会太偏激，不然肯定跟股票散户一起上楼顶排队等着跳了！ 所谓事物都有两面性，这也引发了我一个想法，打算介绍一下这个国外黑产团队的操作手法。 当然，这个不是今天的主题，今天主要介绍Fofa使用的一个小技能。 Fofa是啥FOFA是白帽汇推出的一款网络空间资产搜索引擎。 它能够帮助用户迅速进行网络资产匹配、加快后续工作进程。 例如进行漏洞影响范围分析、应用分布统计、应用流行度排名统计等。 在我心里的Fofa大道理我看不懂，什么网络资产，资产匹配，我一个乡下人，怎么看的懂。 简单说，Fofa就是一个大数据平台，通过一个网站，或者一个IP，不停的往外爬，记录网站的各种信息，比如title,keyword,description，body，当然也把服务器的端口也扫一个够，然后在记录到数据库里，按用户的搜素进行查询输出。 这需要非常庞大的服务器群体去抓取，对于小公司或者个人，工作量很庞大。 所以，我这里充值了VIP，这样，我就可以用他们的数据，来进行对我竞争对手的一些查询等等。 铛铛铛铛。会员！！！ 感觉我上天了有木有。什么QQ红钻黄钻蓝钻绿钻裸钻，在我眼里都是蛋啊。你们有Fofa会员吗？？？ 看我小技能，薅社会羊毛 这是一个收费的WORDPRESS主题。 嗯 国产的，还不错。。 但是收费啊，咱没钱。 于是我就想到了Fofa，大数据平台。 先普及FOFA的搜素姿势 这里我们只用到一个 body=”abc” 从html正文中搜索abc。 我们查看下原来主题的DEMO网站源码： 可以看出，主题的关键搜素词 /wp-content/themes/mimelove/ 直接FOFA搜索 我们可以看到，FOFA列出了16条这样的网站，我们可以采集下来，当然，不会写脚本的，可以手动复制出来，或者自己想起他的办法。 这里我用一款软件直接弄（不说啦，广告只打一个就好） 然后我们导出到一个TXT里，再批量针对敏感性的文件进行扫描 什么是敏感性文件？1 总所周知，wordpress上传主题，或者插件的时候是zip格式，早期通过后台上传，会到wp-content/uploads这个文件夹里面 2 站长的习惯zip上传到对应的文件夹，再解压。 3 默认打包的压缩包 所以，这里我们直接编辑软件的扫描配置 看下扫描结果 我下载验证了一下 收费的主题就这样被我轻而易举的薅到了？ 没错！！！ 这是世界的一个大难题很多国外的收费主题，也基本可以靠着fofa进行大数据找出网站后，再进行路径配置匹对扫描获得。 这个是全世界站长的一个安全意识，短期内是很难解决的。 在这里，也建议主题的作者留个心吧，卖主题的时候，顺便对买家发一份主题如何保护的操作说明。 伸手必备抓！善意的提醒！遵纪守法，涉及到黑产的，灰产的赚钱项目，请最好远离，很多人在知乎上，微信公众号后台留言要找我合作，这样的留言我基本不回复，来自山里的老农民，是不会做非法的事情。也希望大家能够注意，不要做犯法的事情。 分享到这里本期与互联网赚钱没啥关系，纯粹投个懒，介绍一下一个我比较喜欢的大数据平台的使用小技巧。 发布于 2017-04-26","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"2018红利","slug":"make_money方法/2018红利","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.770Z","comments":true,"path":"2018/01/01/make_money方法/2018红利/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/2018红利/","excerpt":"","text":"链接：https://www.zhihu.com/question/59066436/answer/280033712 在机会的世界里，没有太多机会可以争取， 如果你真想成功，要设法抢夺别人的机会。 ——《洛克菲勒留给儿子的三十八封信》 那么， 到哪找别人的赚钱红利？ 以及你自己的赚钱红利？ 一、别信别人说的（包括楼上楼下与我） 玩投资的，说他投的项目赚，为了卖给下轮， 骗代理的，说他做的品牌赚，为了压给下线， 做服务的，说他代的运营赚，为了推给下家。 不信你看2017年的投资事件， 就属saas与电商获得投资多， 因为淘金路上卖铲稳赚不赔： 加郎咸平这样被收买的专家， 收了卖牛肉的钱，就鼓励你往印度出口牛肉， 收了卖冲浪板的钱，鼓励你往蒙古出口冲浪板， 收了卖酱肘子的钱，鼓励你往阿富汗出口酱肘子， 堪称， 每一个男人都是猎手， 每一个女人都是陷阱。 ——《三体》 二、找自己能干的 营销这业内太多人，总爱操些没用的心，却操不到喜欢的人。 曾鸣·未来十年商业发展三条主线 想想你那破出身， 再想想你那破资源， 这冬天是不是更冷了？ 所以未来十年商业主线， 1、别想主攻智能化，你我的才华不够。 2、别想主攻在线化，你我的资源不够。 3、只配主攻网络化，迎合风口做协同网络，毕竟风口要周边业态…… 比如十年前电商风口的协同网络 千万别像我那些倒霉同行，张口BAT闭口小米一贫如洗…… 都知道知识付费是风口，他们明明可以做自己的社群； 都知道智能化是风口，他们明明可以卖智能化自动赚钱机； 都知道共享经济是风口，他们明明可以开共享健身房收押金； 都知道VR是风口，他们明明可以卖送不可描述片源的VR眼镜； 都知道区块链是风口，他们明明可以开挖坑社群然后推算力加速器； 都知道新零售是风口，他们明明可以代理小猪智慧店铺然后推给当地商家； 都知道AR是风口，他们明明可以安排员工学习准备提供AR外包并准备卖网课； 虽说这么说显得我不倒霉似的……是的我不倒霉，BAT小米我才不管，这些风口让我赚了个爽。 以上只是我2017的小复盘， 当然也可当作2018的红利…… 三、学别人在赚的为啥自己创业之后我日渐暴戾乖张， 对人不尊师长，对事不信经验？ 因为现在是2018不是2008， 师长与经验还有个屁用啊， 都快要智能化时代了， 有太多大数据工具， 挖掘别人咋赚钱—— 1、 比如高转化的亚文化 用卖家网-直通车选词： http://www.taosj.com/tool/ztc.htm#wordPrecise 比如我要做招财猫摆件， A、那就直接搜招财猫摆件： B、然后我就能看到这玩意， 每天24309人次搜索， 是块不小的市场嘞…… C、按转化率排序， 然后你就知道， 招财猫摆件的大亚文化下， 分开业党、开车党、日本党三个小亚文化。 他们的共同特点就是有钱，且都舍得花钱—— 开业要讨吉利不在乎钱、 有车起码有个十万块钱、 日本党太挑剔所以绕过…… D、只要做极致化开业用招财猫、车用招财猫， 多半就有钱赚。 2、 比如高手在做的灰产 用他们在猪八戒高价求推广啥： http://task.zbj.com/xuqiu 看他们在互站网高价求啥源码： https://demand.huzhan.com/code 高价求购背后一定有高价灰产。 3、 比如资本在投的风口 频繁看IT桔子的新闻列表页， https://www.itjuzi.com/dailynews 研究那些创业公司骗到融资， 跟着风就能看到近期的风口。 4、 比如哪些网站在上升 站长之家的行业上升排名， 能找到十二大行业中， 那些网站增长迅猛， 背后对应着需求。 http://top.chinaz.com/hangyetop/index.html 5、 比如哪些APP在上升 TalkingDate的app排名， 看新起了那些应用， 背后对应着需求。 http://mi.talkingdata.com/appstore-rank.html 6、 比如哪些品类在上升 淘宝的关注上升与热门， 看新起了哪些品类， 背后对应着需求。 https://top.taobao.com/index.php 7、 比如海外的热销产品 Amazon海外搜索排行， 可以看海外什么热销， 有没可能移植到中国。 http://amz.moojing.com/dashboard 如果你在2018， 能把以上这7条， 每周做1遍， 坚持做1年， 到年底还不赚钱…… 那你先买咪蒙的课， 让她代我赔你智商税。 总之， 别问2018的红利，问自己能干什么； 别问2018咋赚钱，学别人在赚什么； 因为与其信别人说的：猎手与陷阱， 不如信你自己一双铁拳，一对鹰眼。 让她代我赔你智商税。 总之， 别问2018的红利，问自己能干什么； 别问2018咋赚钱，学别人在赚什么； 因为与其信别人说的：猎手与陷阱， 不如信你自己一双铁拳，一对鹰眼。","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"匿名的知乎","slug":"make_money方法/匿名的知乎","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.776Z","comments":true,"path":"2018/01/01/make_money方法/匿名的知乎/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/匿名的知乎/","excerpt":"","text":"链接：https://www.zhihu.com/question/30758136/answer/263013519 是人都知道钱难赚，屎难吃，看到这里诸多炫耀型水帖，不请自来的感慨几句。 赚钱如此容易？这本身就是个伪命题。在社会上打拼也有15年，或许是我见闻有限，林林总总，五颜六色的人也结识过不少，无论是个人经历还是遇到过的人，从挣扎在生存边缘的穷苦人群到亿万身家挥金如土的大富豪，还没有遇到一个觉得“赚钱如此容易”的。 就赚钱本身来说，是要赚小钱，还是赚大钱？ 赚大钱的方法，众所周知，几乎都写在“刑法”里。大部分人估计又不看重小钱，试问发现地上有一分钱，一角钱，能有几个人舍去所谓的面子去捡？ 一命二运三风水，四积阴德五读书，最多教你磨练智商，你没有富二代的命，没有中头彩的运，没有马云马化腾这类人的眼光，但你起码还可以广积阴德，多读书投资自己，想赚钱，不要当块软趴趴的肉，也别做块硬邦邦的骨头，需要有韧带般的精神，隐忍和坚毅，长此以往，滴水石穿，就能赚到一些钱。当然同时你也会发现赚钱最多是不太难，但绝非“容易”二字。 能不能赚到钱，终归是一个考验情商的问题，需要智商到情商的巧妙转换。 佛陀曾被人问起如何能赚钱，佛陀的回答就是要学会布施。正所谓小富靠勤奋，中富靠机遇，大富靠眼光。世人却大多愿意一蹴而就，没有勤奋，哪来的机遇，机遇抓住的次数少了，又何来眼光？ 谈到“容易”的大多答主，无外乎博人眼球，或另有索图。不少甚至是在炫耀如何“骗”钱骗的“如此容易”，和良心赚钱是两码事。 歪门邪道，千万不要沾，折损福报不说，还会严重削减人的气质和气场，人没有了正气，财神也不会眷顾你，就算勉强赚到点，也会很快失去。 真正赚到一些钱的人，绝不是每天早上必须端着一杯星巴克，在电梯里侃侃而谈什么”赚有钱人的钱“”赚女人和孩子的钱“”目标定位“”业态“””理念“等等诸如此类的狗屁辞藻的人。这些人的局限使得他们只懂得意淫，根本不明白商场竞争的残酷性，复杂性和多变性。 没有花里胡哨的配图，没有慷慨激昂的说辞，奉劝提问者还是能抛掉幻想，脚踏实地的开创或打拼出自己的一番天地。","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"利用google分析赚钱","slug":"make_money方法/利用google分析赚钱","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.770Z","comments":true,"path":"2018/01/01/make_money方法/利用google分析赚钱/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/利用google分析赚钱/","excerpt":"","text":"https://foofish.net/make-money-by-google.html 假期归来，不知大家玩得开心否，假期写了一篇非技术的文章，给自己放放电 身为程序员，如果学了一堆技术却没有用武之地，实在可惜，如何把自己积累的技术利用起来？通俗一点，程序员有哪些赚钱的门路？ 比较常见的一种方式是接私活，不过私活的复杂度不一，沟通成本会非常高，另一方面，私活的技术含量低，对程序员的技术成长没什么帮助，什么样的赚钱指导是理想选择，我想能够躺着把钱挣的路子应该是个好点子 你不是苍老师，能躺着把钱赚了？答案是肯定的，那些互联网巨头们现在无一不是躺着在赚钱，现在你差的不是一个程序员，而是缺一个 idea，如何找到靠谱的想法？ 那些曾经不起眼的网站、APP 最初都是从解决某个痛点做起的，比如 hao123，一个当初 “看起来”没技术含量的网址导航网站以上千万的现金股票被百度收购就是一个经典案例，它为什么这么值钱？因为它解决了互联网小白记不住网址，懒得输网址的这群用户的需求。hao123 创始人李兴平自己其实也是小白用户，他为了解决自己的痛点，于是就有了hao123 今天分享的一个思路源自于我写 Zhihu API 这个开源项目(https://github.com/lzjun567/zhihu-api\\) ，我们经常玩知乎、微信、豆瓣、还有国外的 Instagram、FaceBook、Twitter，这些APP都只支持用手机号码注册，但我们就一个手机号，有时难免用小号来发发消息、勾搭一下妹纸帅哥，去哪找手机号呢？移动运营商申请太繁琐，我们 Google 一下。 第一步：通过Google搜索解决方案手机号注册需要手机验证码，我们要是能从网上找一个可以免费在线接收短信验证码的手机号，就可以完成注册了。来搜索关键字「sms receive online」 发现这样的网站大大小小十几个，更加确定这种需求其实不只是某个人的需求，而是很多人都会遇到的，我们随便点击一个网站进去看看，下图是排在第一位的网站 第二步：竞品分析用 Chrome 插件 SimilarWeb 来分析一下排名最前面的网站 getfreesmsnumber.com ，月访问量接近90万，平均日PV有3万，盈利方式完全靠Google Adsense 广告，按照1000访问量2美刀的收入估算，一个月的收入60*30=1800 美元，一年15万收入，相当于普通小白领的年收入（收入估算参考亦仁的公众号：亦无所知）。面对这些网站，我们还能挖掘出哪些有价值的信息出来？ 大体上，这些网站的用户体验比较糟糕，国外的网站似乎都不太在意网站的体验，那么我们可以形成差异化竞争，面向国内市场，国内这方面的网站基本上是一片空白。 第三步：原型搭建基本情况摸清了之后就是考验你执行力的时候了，初步确定方案可行的情况下，你应该用最快速的时间最低成本把原型搭建出来，这样的试错成本也是最低的，无需自己购买手机号码，你需要做的是把这些网站数据通过爬虫整合在自己平台，制定一套方案即时从上述网站中拉去最新的验证码。另外，也可以基于微信公众号来开发，用户直接在微信中选择手机号，立即给他返回验证码，就这样，一个小号就可以在数秒内注册成功。 第四步：运营推广原型搭建出来之后，可以在小范围内传播看看市场反应如何，如果用户的需求很强烈，那么可以考虑进一步完善程序，同时开始对外推广了。至于如何运营一款产品，还真不是一两句话能说清，我也不太懂，不过可以推荐一本书《运营之光》 好了，说完了，不知道大家对此有何看法，欢迎留言一起探讨，如果你有什么好点子抑或是成功的案例，欢迎分享。创意不值钱，执行力才是根本","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"垃圾站","slug":"make_money方法/垃圾站","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.776Z","comments":true,"path":"2018/01/01/make_money方法/垃圾站/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/垃圾站/","excerpt":"","text":"链接：https://www.zhihu.com/question/19825065/answer/110391121 曾经做过一个网站，通过一些非常规推广手段，一周就达到了日 IP 几十万，虽然没达到年入百万，通过 Google Adsense 日入几百美刀。先占坑等，有电脑了详细写…… ———–2017年3月14日更新————- 转眼半年过去了，我回来填个坑。 这绝对是我的一部黑历史，那是 2013 年的事，时隔这么久，不匿名了。 那年发生了一件事想必大家都知道，如家汉庭等酒店共 2000 万条开房信息泄露。 俗话说的好：哪里有热点，哪里就有流量。要么创造热点，要么跟随热点。 我没有能力创造热点，那只能跟着热点了。但是热点的时间窗口很短，于是我第一时间做了一个网页：中间一个搜索框，右边一个搜索按钮。如果不知道什么样子，可以脑补一下 Google。唯一不同的是，我的页面上下左右都是广告，而且～不能搜索！不能搜索！——因为我没有下载到（买到）这2000W条数据。蜜汁尴尬～～～ 没有就没有吧。如果我不说，谁知道我没有呢。 于是我花了10分钟做了一个奇丑无比的网页，这个页面看起来大概是这样的：中间一个输入框被四周广告环绕，还有一个不能用的搜索按钮。 但是用户搜索时怎么办呢？干脆把搜索按钮去掉，当用户找不到搜索时，一般会有2种动作：一是按回车键，二是乱点页面的其他地方，但是我的页面其他地方除了广告，还是广告。 OK，把这个页面扩展名改成 PHP，给人一种动态网页的感觉，再把搜索关键词堆砌到页面里，开房查询系统1.0版本上线。 当用户访问到我的页面时，广告点击率肯定不低。 下一步的重点就是怎么让用户来我网站，说通俗点就是流量在哪里。 答案就在2.0版里。 （以下所有事都不是我干的，如有雷同，算你抄袭我） 1、获取2000万泄露信息。 2、推广。 既然网上找不到这2000万开房信息，那就得换个思路了。现在，肯定有人在买卖这些信息，而且肯定也有人在下载这些信息，那么在DHT网络中肯定有这些文件。所以，我可以直接从DHT网络上探测这个文件。 具体方式就不给出了，可以参见我的这个回答：有哪些「神奇」的数据获取方式？ - justjavac 的回答 - 知乎 解决了数据问题，剩下的就是最难的了：流量。 那就玩心理学吧～ 大部分人的使用习惯是，至少搜索2次，第一次搜自己，第二次搜对方。就算是单身狗，一般也会搜搜自己的女神。 于是我增加了注册功能。 想搜索吗？想。 不好意思，先注册。 注册时推荐他使用QQ邮箱。为什么？后面解释。 好，注册完了，搜索。吡，搜出结果了。再搜，系统提示，“积分不足”。 对，这就是套路，注册送积分，但是只够搜一次。怎么赚积分呢？分享。 但是分享完成后还要判断分享是否成功，需要接入第三方平台，开发难度是小事，但是接入周期太长，不能忍啊。 但是转念想，你在分享窗口弹出后点击过取消吗？ 所以，我把判断逻辑写在了JS里，只要用户点击了分享按钮，就等待10秒钟发Ajax请求，给用户加积分。 2.0上线后流量依然不高，日pv才几千。 继续开发套路3.0——不不不，说错了——是查开房3.0。 ～～～～～2017.03.15更～～～～ 在三一五这天更新，我的手都在抖～抖～抖～～～（以下主角换成我有一个朋友，机智.jpg） 我的这位朋友开发完2.0后，一刻不歇的着手开发3.0，从此打开了月入几万的大门。 如果2.0是套路版，那么3.0就是暗黑版。 依赖用户主动分享和诱导分享，效果还是太差。我的朋友突然冒出个想法：我来帮用户分享，而且我们做好事是从来不留名的，不用谢，我的朋友叫雷锋。 可是我们没有接入第三方平台，没有用户的openids，怎么分享呢。 一个歪主意就是：社工+钓鱼+撞库。 先说钓鱼，其实也算不上是钓鱼，因为这个网站是一个真实的网站。你也可以把“站”去了——这个网站是一个真实的网。我们不钓鱼，我们网鱼。 我们每个人都注册过几十个网站，但是我们一般使用的密码却只有三四个。根据爱因斯坦•门捷列夫的抽屉原理，你注册我朋友这个网站是所使用的密码很可能是你的QQ密码。 读到这是不是先把QQ密码改了再继续读。 ～～～～～～～～～～ 十五分钟过去了，你的密码改完了，我们继续。 哈哈哈，开个玩笑。其实QQ对于安全已经做的很好了。只要我们在其他设备上登录，或者异地登录都会有验证，要么需要手机扫码，要么需要发送短信。所以，即使我朋友知道了你的QQ号和密码也无法登录。 但是别忘了，腾讯家的QQ密码可以登录腾讯加的一切，而我朋友需要的只是：QQ空间、QQ分享、说说。 如果你注册网站时的密码是123456，可以断定这肯定不是QQ密码。所以需要写个代码根据密码复杂度进行筛选。 事实证明，分享到班级群、兴趣群的效果最佳，因为：这网站根本不是广告，而是一个很有用的工具。只要分享语写的好，你的朋友根本里不知道是别人在登录你的帐号。 没有人会反感这种垃圾网站的，就像那些页面只有广告没有下载链接的下载站一样，让用户觉得你的网站是有用的。 随着各大网站争相报道这次如家汉庭信息泄露事件，我朋友的网站一天之内平均要宕机三四次。流量堪比DDOS。 不到一周就冲到了百度首页，三个月之后热度就已经不在了。 如今网站已关，域名也不再续费。 ～～～～～～～～ 为了推广，我朋友还想写个软文，叫《2000W 开房她居然……》讲述了一个土豪花 2000万终于和女神开房，然后把女神抛弃，最后迎娶傻白甜的虐恋N角恋爱故事。 历史剧：在很久很久以前。。 神话剧：天上有一个仙女下凡（就是那个傻白甜） 武侠剧：土豪（男主）无意中得到一本秘籍 言情剧：而这本秘籍是女神（女二号）的传家之宝，于是二人醉入爱河 悬疑剧：没想到秘籍突然被盗，男主、女一、女二同时追赶盗贼 穿越剧：盗贼走投无路之时，打开了秘籍，一阵白光闪过，四人来到了一片陌生的地方 战争剧：。。。。。。。。。。。。。 12345678910111213以上就是我朋友的故事。知乎——与世界分享你刚编的故事。本故事纯属虚构，如要报警，请抓我朋友。---------------------------------最后是广告时间，我的知乎首场 live，欢迎上车：[前端工程师的入门与进阶 - 知乎 Live - 全新的实时问答](https://www.zhihu.com/lives/824618968198291456)。~~~~~~~~~~~~乎 Live - 全新的实时问答](https://www.zhihu.com/lives/824618968198291456)。","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"漏洞_老农民","slug":"make_money方法/漏洞_老农民","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.776Z","comments":true,"path":"2018/01/01/make_money方法/漏洞_老农民/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/漏洞_老农民/","excerpt":"","text":"黑客都很忙每一次新漏洞的公开，都会引发一群人彻夜无眠，他们忙着通过漏洞的EXP，批量攻击网站，然后进行各种转化。 所谓黑产，都是做刑法上面禁止的事情，但是高风险高利润啊。 在金钱面前，老农民我都把持不住。还好，我是山里淳朴的农民工，祖祖辈辈都教我，好好务农，种田能温饱！ （再次强调：不要犯法！不要犯法！不要犯法！） 好吧，有黑产牛肯定说我幼稚。他们有的是人脉，有的是关系。所以干违法，他们不怕。 反正老农民我是相当怕了。 以前有网监给我打电话，我吓的都尿尿了！ 下面我来普及一下这些黑阔晚上睡不着在做什么 呸。。老农民怎么可以有如此淫秽的思想！我可是农民的孩子！ 我们以一个挺新的国内漏洞为例 PHPCMS,相信如果是做国内这块的话，应该多少有听说过这个CMS程序，或者用过吧。 反正我就只知道WORDPRESS 第一到手是编写EXP 什么是EXP？ 说白了，就是代替人工操作的小脚本，小代码。 如果是WEB漏洞的话，一般就是模拟请求，http发包，或者socket发包。 然后根据漏洞的原理，一步一步的发包下去，判断完示范存在漏洞，再直接利用漏洞。 对于入门的黑卡，EXP就是神器啊。 工具批量化操作 有了代码，我们就可以批量写个工具搞了。 这里，我们可以用现成的BlackSpider软件，写个利用工具。 然后直接批量跑。 当然，也可以写个PY批量脚本批量跑。 目标哪里来？ 1 谷歌百度搜素引擎各种搜素语法，比如使用“Powered by PHPCMS v9” 当然，以上针对菜鸟 2 老鸟们用大数据平台进行目标罗列！ 比如 fofa.so，zoomeye,shadon,oshadan 大数据平台的利用 为了显示我的逼格，我这里用大数据fofa.so平台做为讲解 嗯 当然，语法还可以继续变，我这里就不继续深入了，不然 讲到猴年马月。 时间就是金钱嘛~可以来我小密圈一起交流！ 这里我用blackspider直接抓取 这样 我获取的目标就都是PHPCMS了 然后就是放在软件或者PYTHON脚本里面批量跑咯漏洞已经好几天了，效果可能一般搬咯。所以这也是黑客为什么通宵忙着一波流的原因了。 万一漏洞补了呢，哈哈 以上截图，来自某黑客论坛。毕竟老农民我遵纪守法！！ 批量EXP攻击有什么用 以下为我的猜测 1 脱裤（数据库很值钱，变现渠道很多） 2 网站整站打包，比如模板漂亮的，网站打包走。 3 挂黑链，做黑帽SEO。 4 做攻击资源。比如PHPDDOS，CC攻击等待。 5 服务器提权卖肉鸡啥的 还有很多种，每一种产业的用途都不一样。 故事说到这，码字不易 码字不易，您的点赞是我的一大动力之一。 欢迎关注我的公众号，请爱护我，不要抄袭我。","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"知乎","slug":"make_money方法/知乎","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.770Z","comments":true,"path":"2018/01/01/make_money方法/知乎/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/知乎/","excerpt":"","text":"灰色产业链四大定理： 1、小孩怕笨，各种补脑灵药助学加分； 2、女人怕丑，各种美容神器层出不穷； 3、男人怕软，各种春药毒药直播果聊； 4、老人怕死，各种养生仙方长生不老。 至于哪个更暴利，主要看需求和消费能力了。","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"规划","slug":"make_money方法/规划","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.766Z","comments":true,"path":"2018/01/01/make_money方法/规划/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/规划/","excerpt":"","text":"链接：https://www.zhihu.com/question/22307591/answer/104184277 无论黑帽还是白帽，你要跟着搜索引擎的套路去走，而搜索引擎不停的变化会让你本认为合理的事情变成作弊（如发外链），所以教程都是有时效性的，不要纠结，更不要攻击谁的教程没有用。seo是没有固定套路的。 白帽就不说咯，黑帽seo更多的充斥于黑产，如博彩，代开发票等。恰恰能够在黑帽领域取得成就的人更不可能去分享方法，行内人都知道，黑帽大牛的收入远远超出你的想象。所以很难在网上找到能够让你有很大提升的东西。 我既然回答了，也不能全说废话，我告诉你学习黑帽最好的秘诀：实践。 当然，在这之前你要先熟悉搜索引擎的工作原理，并且熟悉简单的web服务器技巧及前后端代码（懂前端有利于分析对手的优化手法等，但别纠结，他这么做行你不一定；后端更重要，欺骗搜索引擎必会），然后要准备一笔学费来实践。 举个例子，黑帽优化中比较典型的建网站群，方式多种多样，有楼上朋友提到的泛站群，二级目录站群等等。而尝试的方式包括：网站间链接的方式，网站模板对所在行业的适应程度，更新文章的频率等等，经过多组实验后应该自己能够得出诸如：什么品相域名更适合做这行业，链接域名间注册日期身份资料怎样更合理，单ip内放置多少网站是合适的等结论。 并不建议去买站群软件并按照教程照本宣科，先自己摸索技巧，总结出适合自己行业的套路了再去选择合适的站群软件或者找个易语言程序员开发一套，工具只是工具，莫执着。 如果你看了我说的这些还打算在这条路去探索，并且愿意承担可能随之浪费的金钱成本，时间成本，以及未来做黑帽带来的法律风险，相信你一定会成功的。","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"software","slug":"plan/software","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.746Z","comments":true,"path":"2018/01/01/plan/software/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/software/","excerpt":"","text":"语言合成 言和 初音 深度学习 音调图语言合成 言和 初音 深度学习 音调图 网页视频 代理 图片拼大图片","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"}],"tags":[]},{"title":"职业的建议","slug":"plan/职业的建议","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.746Z","comments":true,"path":"2018/01/01/plan/职业的建议/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/职业的建议/","excerpt":"","text":"一、不要别人点什么，就做什么我的第一份工作，只干了8个月，那家公司就倒闭了。我问经理，接下来我该怎么办，他说： “小伙子，千万不要当一个被人点菜的厨师，别人点什么，你就烧什么。不要接受那样一份工作，别人下命令你该干什么，以及怎么干。你要去一个地方，那里的人肯定你对产品的想法，相信你的能力，放手让你去做。” 我从此明白，单单实现一个产品是不够的，你还必须参与决定怎么实现。好的工程师并不仅仅服从命令，而且还给出反馈，帮助产品的拥有者改进它。 二、推销自己我进入雅虎公司以后，经理有一天跟我谈话，他觉得我还做得不够。 “你工作得很好，代码看上去不错，很少出Bug。但是，问题是别人都没看到这一点。为了让其他人相信你，你必须首先让别人知道你做了什么。你需要推销自己，引起别人的注意。” 我这才意识到，即使做出了很好的工作，别人都不知道，也没用。做一个角落里静静编码的工程师，并不可取。你的主管会支持你，但是他没法替你宣传。公司的其他人需要明白你的价值，最好的办法就是告诉别人你做了什么。一封简单的Email：”嗨，我完成了XXX，欢迎将你的想法告诉我”，就很管用。 三、学会带领团队工作几年后，已经没人怀疑我的技术能力了，大家知道我能写出高质量的可靠代码。有一次，我问主管，怎么才能得到提升，他说： “当你的技术能力过关以后，就要考验你与他人相处的能力了。” 于是，我看到了，自己缺乏的是领导能力，如何带领一个团队，有效地与其他人协同工作，取到更大的成果。 四、生活才是最重要的有一段时间，我在雅虎公司很有挫折感，对公司的一些做法不认同，经常会对别人发火。我问一个同事，他怎么能对这种事情保持平静，他回答： “你要想通，这一切并不重要。有人提交了烂代码，网站下线了，又怎么样？工作并不是你的整个生活。它们不是真正的问题，只是工作上的问题。真正重要的事情都发生在工作以外。我回到家，家里人正在等我，这才重要啊。” 从此，我就把工作和生活分开了，只把它当作”工作问题”看待。这样一来，我对工作就总能心平气和，与人交流也更顺利了。 五、自己找到道路我被提升为主管以后，不知道该怎么做。我请教了上级，他回答： “以前都是我们告诉你做什么，从现在开始，你必须自己回答这个问题了，我期待你来告诉我，什么事情需要做。” 很多工程师都没有完成这个转变，如果能够做到，可能就说明你成熟了，学会了取舍。你不可能把时间花在所有事情上面，必须找到一个重点。 六、把自己当成主人我每天要开很多会，有些会议我根本无话可说。我对一个朋友说，我不知道自己为什么要参加这个会，也没有什么可以贡献，他说： “不要再去开这样的会了。你参加一个会，那是因为你参与了某件事。如果不确定自己为什么要在场，就停下来问。如果这件事不需要你，就离开。不要从头到尾都静静地参加一个会，要把自己当成负责人，大家会相信你的。” 从那时起，我从没有一声不发地参加会议。我确保只参加那些需要我参加的会议。 七、找到水平更高的人最后，让我从自己的经历出发，给我的读者一个建议。 “找到那些比你水平更高、更聪明的人，尽量和他们在一起，吃饭或者喝咖啡，向他们讨教，了解他们拥有的知识。你的职业，甚至你的生活，都会因此变得更好。” 阮一峰的网络日志 http://www.ruanyifeng.com/blog/2015/09/career-advice.html","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"}],"tags":[]},{"title":"旅行计划","slug":"plan/旅行计划","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.743Z","comments":true,"path":"2018/01/01/plan/旅行计划/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/旅行计划/","excerpt":"","text":"日本 单人 行程 | 行程 | 价格 | 备注 || ————- | ————————- | ——– || 郑州 — 广州 | 200-300 CNY | 火车票 || 香港 — 东京 | 800 -1200 CNY | 特价机票 || | 往返总计： 2000 - 3000CNY | | 住宿 胶囊旅店 100-200 CNY 总计 1500 - 3000 吃饭 每日100 -200 CNY 总计 1500 - 3000 交通 每日100-200 CNY 总计 1500 - 3000 | 停留天数 | 最大总计 | 最小总计 | 食宿交通min | 食宿交通man || ——– | ——– | ——– | ———– | ———– ||1| 2300| 3600| 300| 600||2| 2600| 4200| 600| 1200||3| 2900| 4800| 900| 1800||4| 3200| 5400| 1200| 2400||5| 3500| 6000| 1500| 3000||6| 3800| 6600| 1800| 3600||7| 4100| 7200| 2100| 4200||8| 4400| 7800| 2400| 4800||9| 4700| 8400| 2700| 5400||10| 5000| 9000| 3000| 6000||11| 5300| 9600| 3300| 6600||12| 5600| 10200| 3600| 7200||13| 5900| 10800| 3900| 7800||14| 6200| 11400| 4200| 8400||15| 6500| 12000| 4500| 9000||16| 6800| 12600| 4800| 9600| 123456for i in range(16): a = 100*3*(i+1)+2000 b = 200*3*(i+1)+3000 c = 100*3*(i+1) d = 200*3*(i+1) print(\"|\"+str(i+1)+\"|\",str(a)+\"|\",str(b)+\"|\",str(c)+\"|\",str(d)+\"|\") 双人 | 停留天数 | total_min | total_max | total_mid | p_min | P_max | p_mid || —- | —- | —- | —- | —- | —- | —- ||1| 4300| 6600| 5450.0| 300| 600| 450.0||2| 4600| 7200| 5900.0| 600| 1200| 900.0||3| 4900| 7800| 6350.0| 900| 1800| 1350.0||4| 5200| 8400| 6800.0| 1200| 2400| 1800.0||5| 5500| 9000| 7250.0| 1500| 3000| 2250.0||6| 5800| 9600| 7700.0| 1800| 3600| 2700.0||7| 6100| 10200| 8150.0| 2100| 4200| 3150.0||8| 6400| 10800| 8600.0| 2400| 4800| 3600.0||9| 6700| 11400| 9050.0| 2700| 5400| 4050.0||10| 7000| 12000| 9500.0| 3000| 6000| 4500.0||11| 7300| 12600| 9950.0| 3300| 6600| 4950.0||12| 7600| 13200| 10400.0| 3600| 7200| 5400.0||13| 7900| 13800| 10850.0| 3900| 7800| 5850.0||14| 8200| 14400| 11300.0| 4200| 8400| 6300.0||15| 8500| 15000| 11750.0| 4500| 9000| 6750.0||16| 8800| 15600| 12200.0| 4800| 9600| 7200.0| 123456for i in range(16): a = 100*3*(i+1)+4000 b = 200*3*(i+1)+6000 c = 100*3*(i+1) d = 200*3*(i+1) print(\"|\"+str(i+1)+\"|\",str(a)+\"|\",str(b)+\"|\",str((a+b)/2)+\"|\",str(c)+\"|\",str(d)+\"|\",str((c+d)/2)+\"|\",)","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"}],"tags":[]},{"title":"要玩的game","slug":"plan/要玩的game","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.746Z","comments":true,"path":"2018/01/01/plan/要玩的game/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/要玩的game/","excerpt":"","text":"ever17","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"}],"tags":[]},{"title":"赚钱计划","slug":"plan/赚钱计划","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.743Z","comments":true,"path":"2018/01/01/plan/赚钱计划/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/赚钱计划/","excerpt":"","text":"可能会创立一个小公司分析需求 各种指数 市场调研信息的不对称 例如：股票 买卖东西 也就是中国人常说的 闷声发大财 江主席 意林上的一本 creat a system主动与被动收入 what is 主动收入what is 被动收入 国家的税收 作品的的版权参考 fly with lily 提高核心竞争力Be focus 乔布斯人们是会为功能丰富的产品买单 还是会为能解决痛点问题的的产品买单 迅雷 有道词典 我自己感触较深的是两个产品，一个是迅雷，一个是有道词典，初期都特别好用，一个用来下载电影，一个用来查单词。但是越到后面越难用，甚至频频卡顿，铺天盖地的广告，糟糕的体验，臃肿的安装包，现在有道词典是很少用了，迅雷的话找到了一个精简版，其他什么毛线都没有，就简简单单的下载，很干净很好用。现实中很多产品，往往一开始起步很不错，能解决用户的核心痛点，但是经常性的越到后面越发难用，核心的东西做不深，倒是周边工具做了一大堆。明明用户只想要一台 12 缸的发动机，偏偏要把拖拉机的马达搭配富丽堂皇的车壳，再加个各种牛皮混杂的坐垫，各种宝石镶嵌的方向盘，只能说是本末倒置了吧。 参考http://litaotao.github.io/thinkings-about-life-work-family-part-3]马太效应参考 好叶无意间发现，竟然与马太效应重合 还有 深度学习 平行宇宙 the more the more 像一个指数函数 超越宇宙第二速度参考 李笑来 新生或许 会是一个穷光蛋 抱着吉他 世界流浪 去要饭 乔布斯 自传","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"}],"tags":[]},{"title":"部落格构思","slug":"plan/部落格构思","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.743Z","comments":true,"path":"2018/01/01/plan/部落格构思/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/部落格构思/","excerpt":"","text":"技术支持 flask python 外观 背景 页面中间渐变 字体阴影 素锦动态背景 功能实现 感悟 Green note 1为人 。社交。 人生。 日记 书籍 转载 图库 歌单 技术文章 那集猫和老鼠","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"}],"tags":[]},{"title":"no_sadly_story","slug":"杂谈/no_sadly_story","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.703Z","comments":true,"path":"2018/01/01/杂谈/no_sadly_story/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/no_sadly_story/","excerpt":"","text":"所有的悲情叙事，都是因为你的基础体能不够 我举一个例子，我自己是一个其实除了对商业在研究，我有自己的管理咨询公司在帮助很多大型企业做战略顾问之外，我是一个特别爱旅行的人。我去过不少地方，我去过南极、去过北极，2015年的时候我还跟我的10位朋友，一起去了非洲爬乞力马扎罗。 爬乞力马扎罗是要爬七天的，近山是在海拔1800米，第二天到了2800，第三天到了3800，第四天先冲到4600，中午，然后到晚上再下来，为什么要下来？就是适应一下4600的高度，然后再3900，第四天3900，第五天3900，横切两天让你适应海拔，到第六天的时候早上冲到4600的冲锋营，中午就开始睡觉，到晚上11点半开始冲顶，冲那个5895米，将近6000米。 我记得我在那个晚上心率已经到了140，我觉得我要死在山上了，那个时候我说我要下去，不行，我一定要下去。我的向导跟我说，对不起，乞力马扎罗只能往前不能往后，只有到最后一天，到冲锋营才能下去，可是你只要到了冲锋营你还会想下去吗？都到最后一天了，到冲锋营咬着牙都得向上，最后好不容易登了顶到了5895，我真是泪如雨下，觉得真是太不容易了。 当时我们11个人10个人登顶了，这10个人全部都泪如雨下。但是我们的旁边还站了62个黑人，他们是陪着我们爬山的，每天早上我们背着自己的包轻装上阵，那些黑人就把帐篷一收，厨具一收，桌子一收，把所有东西一收，往头上一顶，然后就走到第二天的营地了。 等到我们到下午都快不行了，到营地的时候他们连饭都做好了，所以到了我们最后登顶的时候那些黑人就跟玩一样的，他们一年登二三十次，每次登山看着我们在那哭得一塌糊涂，他们就看着很好笑。当时我也特别感触，哭完之后我的感受是什么呢？就是所有的那些悲情叙事，最后都是因为你的基础体能不够。 http://www.cnblogs.com/alex3714/p/8536729.html","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"her","slug":"杂谈/her","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.710Z","comments":true,"path":"2018/01/01/杂谈/her/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/her/","excerpt":"","text":"关于她 也许她是我的那个唯一 我无法割舍 希望会是一个好的结局 开始我只是很尊敬 很佩服 孤独 对于她的感情在不知不觉中在变化 是爱吗 也许 在某些时候 如果 定义的那些条件成立 那么我愿意为她付出我的全部 包括我的生命 但我总是会把事情搞砸 我感觉不到她在想什么 是我不够了解她 还是我太笨了 爱你直到永远 私が戻ってくるのを待つ 尽使崩坏的时间 Date 2017.08.28","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"一切都是必然的","slug":"杂谈/一切都是必然的","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.723Z","comments":true,"path":"2018/01/01/杂谈/一切都是必然的/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/一切都是必然的/","excerpt":"","text":"一切都已经书写好 Everything was programed already. 开始的条件即意味着结局 但未来对于你是未知的 所以才会如此精彩","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"不可替代的东西","slug":"杂谈/不可替代的东西","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.716Z","comments":true,"path":"2018/01/01/杂谈/不可替代的东西/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/不可替代的东西/","excerpt":"","text":"野生的有了狼性圈养的都是狗我知道有一帆风顺的方向但我不知道 方向的尽头是否是 唯一的 但… 而是另外一个方向如果不幸我死了 在方向的尽头 那里的人是 多数的有幸如果我存活下来野性的思维会重构我的精神 另外一个方向的我","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"为什么会产生爱","slug":"杂谈/为什么会产生爱","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.710Z","comments":true,"path":"2018/01/01/杂谈/为什么会产生爱/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/为什么会产生爱/","excerpt":"","text":"达尔文 沙耶之歌 两个哺乳动物肉体的相互吸引 what is love假如是在动物的世界，为了生存的话，那么爱就成为了一种羁绊，在热恋中，还会无时不刻的想念对方，会对自己的生存产生消极影响。 爱在某种方面，可以说是一种欲望。欲望得不到满足，会产生空虚感。可能会对精神产生负面影响。 爱是在什么时候产生的呢？也许可以研究一下历史 还有结合知识概念论，关系相对坐标系法 “‘世界是我的表象’：这是一个真理，是对于任何一个生活着和认识着的生物都有效的真理：不过只有人能够将它纳入反省的、抽象的意识罢了。并且，要是人们真的这样做了，那么，在他那儿就出现了哲学的思考 。于是，他就会清楚而确切地明白，他不认识什么太阳，什么地球，而永远只是眼睛，是眼睛望见太阳；永远只是手，是手感触着地球；就会明白围绕着他的这世界只是作为表象而存在着的；也就是说这世界的存在完全只是就它对一个其他事物的，一个进行‘表象者’的关系来说的。而这个表象者正是我们自己。”德国哲学家 叔本华 在《作为意志和表象的世界》开篇就直言不讳地说道。达尔文的进化学说主张适者生存。凭著智慧，人类现在正可说是站在生物系谱的顶峰。大多数生物为了在严苛的环境中生存，都进化成便于存续繁衍的型态，而人类站在这个顶峰，身处于由自身所创造的、最适合人类属 人类种生物生存的环境中，要生存，要繁衍，真是太轻易了。 拥有束缚的人类，其生存的意义究竟是什么？宇宙究竟是为什么？我们何故存在于此时此地？又何至于此？ 沙耶之歌揭示了这些基本的命题，颠覆了与我们的生活息息相关的、人类的先天认识。或许大吃一惊才是正常反应。至于答案是什么，希望读者可以自己找到。 《沙耶之歌》所揭示的问题，并非是凭空捏造，而是确确实实与我们的生活息息相关的，关系到我们每个人对世界的抉择和看法。玩家们不应该抱着单纯的猎奇心态把这部作品当作单纯的娱乐之作，并一笑了之；最好是能够去想一想在表面之后那隐藏着的、真正永恒的事物：我们的宇宙。而并不只是被表象蒙蔽了双眼。艺术只是表现形式，而道是永恒的。或许只要是还抱着一颗追求真理之心的人，那他就不会再犹豫、再害怕改变他对于这个世界的既成看法。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"为什么的意义","slug":"杂谈/为什么的意义","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.740Z","comments":true,"path":"2018/01/01/杂谈/为什么的意义/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/为什么的意义/","excerpt":"","text":"为什么也称 原因 因为 起因 目标 意义 递归分析 词组 定义","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"书籍","slug":"杂谈/书籍","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.726Z","comments":true,"path":"2018/01/01/杂谈/书籍/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/书籍/","excerpt":"","text":"《穷忙》 《电车学》 我的奋斗 人类简史 未来简史 把时间当做朋友 新生 黑客与画家 瓦尔登湖 分析心理学 梦的解析 康奈尔最经典的思考逻辑课康奈尔最经典的思考逻辑课 魔鬼数学 凯文凯利 乔布斯","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"什么是战友_朋友","slug":"杂谈/什么是战友_朋友","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.733Z","comments":true,"path":"2018/01/01/杂谈/什么是战友_朋友/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/什么是战友_朋友/","excerpt":"","text":"战友很小的时候，大约十四五岁，有一天我父亲给我讲了个故事，然后问了我一个特别简单朴素直接的问题，他说： 笑来啊，你现在认识的人也不少了，你说他们都是你的朋友。我问问你，如果万一哪一天你出事儿了，比如有人追杀你，他们当中哪一个是能冒着生命危险把你藏在他家地窖里坚决不交出去的？ 这个问题很严肃啊。这你又没办法当面直接问，“我要是出事儿了你会把我藏到你家地窖里打死也不交出去吗？” 这种问题问了也白问啊！所以我想了很多办法去观察、去判断、去思考……结果呢？结论是，那时我身边一个这样的朋友都没有…… 现在回头想，这个简单朴素直接的问题当然改变了我一生。 这世上绝大多数人是没有战友的 —— 甚至他们连真正的朋友都没有。没有朋友的人，是不会幸福的，因为他与这个世界没有真实有效的连接，有了好东西，没地方去分享，也没有人跟他分享什么……进而，没有战友的人呢，是很难有所成就的，因为一切的追求，最终都是战斗啊！ 除了自身成长之外，我觉得“寻找战友”是一生中最重要的任务，因为我们都是有追求有梦想要去实现的人啊，我们都是为了追求和梦想必定要去战斗的人啊！ 不能做朋友的人，是不可能成为战友的。所以，有潜力可以成为战友的人，和有潜力能作为朋友的人是一样的，需要起码三个特征： 一技之长 追求进步 真诚热情 朋友不会自动变为战友。要满足以下几个条件或者经过以下几个阶段，朋友才可能转变成战友： 共同目标 并肩战斗 共享成果 References 新生","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"何为孤单","slug":"杂谈/何为孤单","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/何为孤单/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/何为孤单/","excerpt":"","text":"一种心理反应，独自一人时、有很多人在周围时都可能会有这种感觉。孤单常被视为是人类痛苦最普遍的来源之一，每个人隔一段时期就会被孤单的感觉包围，并会持续一段时间. 人的一生就是逃离孤单的过程，但孤单不是寂寞,只是一种由外界所形成的感慨，不源自于内心。它是一种对立，是一种对于喧嚣的厌恶，是一种不含感情的字眼，因为没有其他的注意力值得分散，所以我们会觉得孤单。 寂寞,就是这样一种无形的东西，挥之不去，叫之也不会来，却在你思想毫无遮拦的时候悄然而至，侵袭着你的心灵，躲之不及，无法回避，来了，就丝丝缕缕占据着你的心灵，必须用了全心去应对。寂寞就是一种毒,一无解药的毒寂寞是个人的内部感受，无法由人的外在表现加以判断。 孤单，是一个人的狂欢。狂欢，是一群人的孤单。如果是孤单，比较好办，实在不行就找别人，那样就能摆脱孤单。但是寂寞就麻烦了，在一群人里仍然感到内心的空虚． 每个人的内心都是孤独的，只不过大多时候我们不去想，或没法去想 感觉跟别人缺乏有意义的接触，它是一种内在的空虚，有时掺杂有悲哀、灰心、被孤立、不安、焦虑、被拒绝 一种强烈想被某人需要的感觉。 孤单： 人常感到自己被排斥在外、不被需要、或被人拒绝，有时即使是在人群之中也觉孤单。 许多人也会觉得自己没有价值。 是一种心理需要，对自己现在阶段的心理感受的自我体会。 是被人抛弃后的一种感觉。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"关于最低生活保障政策","slug":"杂谈/关于最低生活保障政策","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.740Z","comments":true,"path":"2018/01/01/杂谈/关于最低生活保障政策/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/关于最低生活保障政策/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"关于社交软件使用者的心理分析","slug":"杂谈/关于社交软件使用者的心理分析","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.716Z","comments":true,"path":"2018/01/01/杂谈/关于社交软件使用者的心理分析/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/关于社交软件使用者的心理分析/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"动心的几句话_番剧","slug":"杂谈/动心的几句话_番剧","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.683Z","comments":true,"path":"2018/01/01/杂谈/动心的几句话_番剧/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/动心的几句话_番剧/","excerpt":"","text":"突然消失总会让人很伤感如果结局还是伤感那么还是不要更深的羁绊来的好适当的附和一下就行了 织女和牛郎不管下多少年的雨都不会忘记对方如果连续下多少年的雨 士道同学也不会忘了我吗? 织女和牛郎被银河分隔，一年只能见一次是吧？ 恩，是啊。 可是如果7月7日下雨的话，这个一年一次的机会也将失去了。嘛，确实经常这么讲。如果，我是说如果。如果一年又一年又一年的，7月7日一直下雨，一直持续着不能相见的日子，他们还能继续思念着对方吗？ 为什么，会这么问？ 时间比什么都温柔，就连两人失去了每年仅有一次的机会的悲伤，总有一天也会被治愈的吧？时间比什么都残酷，就连两人起誓过永恒的爱情，总有一天也会被风化吧？持续地错过确认彼此心意的机会的两个人的心中，还会互相存在（于彼此的思念中）多久呢？","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"同情","slug":"杂谈/同情","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.696Z","comments":true,"path":"2018/01/01/杂谈/同情/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/同情/","excerpt":"","text":"相似度 可以勾起人的同情 猜想 当人看到能触发同情的事件的时候，会不自觉的，在自身上进行想象，如果是我会怎么样？ 无情 生命只不过是，一堆粒子 例如 对于植物 的同情 并不是人人都有（同情产生可能与经历有关） 而去大多数人都会对动物 抱有同情 及相似度 几乎没人会对一个石头“等 没有生命的东西”产生同情的感觉","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"学习吉他_类比","slug":"杂谈/学习吉他_类比","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.723Z","comments":true,"path":"2018/01/01/杂谈/学习吉他_类比/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/学习吉他_类比/","excerpt":"","text":"学习吉他大概要多久才能达到你想要的水平？ Dmitry Kaminsky/Shutterstock.com 每个人刚开始学习一门新技术的时候总会想：要学多长时间？在1个月里我能学到多少？即使这些问题的答案因人而异，但是我们还是尝试呈现给大家一个清晰的模式来理解你大概能在多少时间的努力后能得到怎样的结果。 小时累计：唯一值得参考的测量方法永远永远只用小时数的累计来量化你在吉他上取得的进步，记住，其他的方法全都是没有意义的。 _不要_这样思考：“我弹吉他弹了10年” 或者 “在1年以后我能弹的怎么样？” 尽管你可以把小时转换成年数，但是你不应该以此标准来衡量自己，这是没有意义的。有些学生在6个月内花的精力比另一些学生4年的还要多，所以我们应该考虑你总共花费的小时数。6个月内每一天花上4个小时，那就是720小时，这当然足以让大多数学习者取得令人震惊的进步。而每天30小时的话，你要花上4年的时间才能取得这样的进步。 不出名的“10,000”小时理论关于10,000小时理论，先了解下面两点： 这是一个非常武断的结论，并且没有原理。 在你的练习计划中非常有效。 根据对人类自身成就的研究表示，10,000小时的学习时间是一个人能获得卓越技能的衡量标准。当然，这条原则没有说我们到底是在累计了10,000个小时后融会贯通的还是怎样，但我们应该接受这样一个有用的指导方针。一个人每个星期玩2次俄罗斯轮盘，最后这个人_相当有可能以这种方式死去；一个人每个星期在办公室里呆55个小时多少应该比从不来公司的人升职的快些。我们知道概率上来说，可能会产生不同结果，但我们也应该都接受这个概念：一个人如果花10000小时练习乐器，那么这个人相当_有可能比其他人更高的水平。 成功的吉他手都知道，不管你的目标是什么，有总比没有好，因为没有目标的人，什么事都做不成。 一个武断的熟练度的等级评定以下是我编写的另一个指引。你大概不会选择“mastery”作为你的目标，这完全没问题，你只需要达到一个足够实现你的个人目标的水平就可以了。 Level Hours Needed Daily Practice Investment Summary 30m 1h 2h 4h Introductory 156.25 10 months 156 days 78 days 39 days Can play simple musical parts and accompaniments. Basic 312.5 1.8 years 10 months 156 days 78 days Has basic grasp and can perform complete songs. Beginning 625 3.5 years 1.8 years 10 months 156 days Can play most simple songs. Intermediate 1250 6.9 years 3.5 years 1.8 years 10 months Can improvise some or play in a band. Can play several pieces of repertoire. Advanced 2500 13.9 years 6.9 years 3.5 years 1.8 years Can play more repertoire and shows musical awareness. Most never reach this point. Expert 5000 27.8 years 13.9 years 6.9 years 3.5 years Can start to teach others; guitar skills are quite serviceable for writing music or performing. Professional 10000 55.6 years 27.8 years 13.9 years 6.9 years Can teach or perform comfortably in many situations. Quick thinking and broad repertoire. Master 20000 111.1 years 55.6 years 27.8 years 13.9 years World-class musician 所以，根据上面这个表格，我们可以预测出，若想要达到吉他能力的入门级（弹奏简单的旋律或歌曲）需要大约150个小时的练习。如果你是一个在校大学生可以仅用暑假的时间就完成这个目标，但如果是一个忙碌的专业人士每天只练习30分钟的话，需要10个月才能达到同样的目标。 一个警告一只行走很稳定而又缓慢的乌龟可以完成的东西是有限的。尽管说一个人好像只要每天花30分钟练习，55年后他也可以变成专业级的音乐家，但是更可能的是，他最后进入增长停滞期，因为有限的投入时间会被太多用在复习基本知识上而浪费，这些时间不够让你突破自己的极限。每次的练习通常有10-20分钟的“预热”时间。 与此相反，在一段时间内每天练习大量练习可以使你的技巧保持在“最好状态”，但是不要误认为这样的状态会永远保持下去。 这种表格只是为大家的思考和规划提供指导。任何模式都只能有限的对现状进行解释和描述。 The Takeaway滴水成河从这个表格中我们至少可以看到，你会需要持续不断的多年努力，才能达到高水平的吉他弹奏，这意味着，无论怎样的工作，学校或家庭，你都必须承诺每天或几乎每天练习。你要决定在你整个人生过程中，在这上面能有多少时间投入，不要只看眼前这两个月。 即使是以最快的速度，想要达到高水平还是需要一段时间如果你下定决心要成为吉他高手，那你应该准备好长期的努力。在很短的时间内一下子取得很大的进步是可能的，但是你要知道很难在5年里每天都坚持4小时练习。 甚至是每天练习8小时（大多数人都觉得难以长期坚持，而且即使是短期内这样练习效率也不高），你也很难在13.5年内达到最高水平。所以记住学习吉他是需要时间的。 过高关注天赋当你知道好的音乐家投入数以万计小时来练习的话，你就会发现你过于担心“天赋”的问题会让你懒惰，肤浅，没有想象力。在练习10,000小时以后再来探讨天赋的问题把。 关于音乐学习和掌握的更多阅读资源 Daniel Coyle,The Little Book of Talent[?] Geoffrey Colvin,Talent is Overrated[?] Malcolm Gladwell,Outliers: The Story of Success[?]","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"思想","slug":"杂谈/思想","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.720Z","comments":true,"path":"2018/01/01/杂谈/思想/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/思想/","excerpt":"","text":"数学思想函数与方程思想 数形结合思想 分类与整合思想 化归与转化思想 递归 换元 等量带换 特殊与一般思想 有限与无限思想 或然与必然思想隐含条件 思想类比 思想 核心素养数学抽象 逻辑推理 数学建模 直观想象 数学运算 数据分析","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"我是谁","slug":"杂谈/我是谁","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.740Z","comments":true,"path":"2018/01/01/杂谈/我是谁/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/我是谁/","excerpt":"","text":"神话 进化与不同 巫师帽 克隆 一个人的印象","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"我爱你背后的黑暗","slug":"杂谈/我爱你背后的黑暗","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.726Z","comments":true,"path":"2018/01/01/杂谈/我爱你背后的黑暗/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/我爱你背后的黑暗/","excerpt":"","text":"我爱你 背后的黑暗 情人节卡片上的【我很爱你】其实表示…有一部分的我把你误认为另一个更好的人我之后会责怪你不是我想象中的那个人却无心发现你其实就是我的梦中情人我会试着改变你我会试着…去占有你的身心然后反过来埋怨你…成为困住我的牢笼我会…在未来的某一天在做爱的时候想着其他人我会期望你去理解我的千头万绪虽然我从来没对你诉说过我会把我所有的快乐尤其是我的所有悲伤 归咎于你永远都是你的错我会利用你来假装不是所有人在本质上上并不是孤独的我会怪罪你是毁了我一生的凶手而你也会同样怪罪于我“请做我的情人吧”","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"爱_嫉妒","slug":"杂谈/爱_嫉妒","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.713Z","comments":true,"path":"2018/01/01/杂谈/爱_嫉妒/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/爱_嫉妒/","excerpt":"","text":"第一次见到你我就知道 我要毁了你 我要弄脏你的身体 我要让你余下一生只能和我在一起 这么深切翻滚着叫嚣着黑暗的欲望 才叫做爱 那些所谓祝你幸福 愿你找到爱人之类的话都是我放的屁话我就是想这一辈子占有你 连雨拍打在你身上 我都嫉妒 你对别人好的样子真丑","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"爱情_shit","slug":"杂谈/爱情_shit","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.713Z","comments":true,"path":"2018/01/01/杂谈/爱情_shit/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/爱情_shit/","excerpt":"","text":"转自佛弟子网，本文观点不代表本站站长观点，很敬佩有胆子写出这样文字的出家人。 讲一个生活中最尖锐的问题，最难以放下的东西：我们的情感。 对世间人来说，这个东西简直就是不可以放下的东西。有一个女演员曾经告诉我，她一生中最珍贵的东西是她保存的一箱子情书。那是她年轻时的爱情。 她曾让给她画一幅画，我给她画的是一个大妞蹲着瞅一棵牡丹，花败了一地。她问我是什么意思。我也没讲清楚，我的意思是，人不要执着过往的情感，那些东西都如花一样，再好看，也是无常，会败掉。 换现在，要是再给她画，一定画一坨屎。真的，不开玩笑，爱情吗，就是屎，人吃饱了、穿暖了，在一生中不同的阶段会与异性产生情感。每隔一个阶段就来一次，每一次都会觉得这是一辈子唯一的一次，最宝贵的一次。 我的那个保存了大箱情书的朋友如今早已离异，早就不过了，一拍两散伙了。 爱情这个东西，我觉得，究其根本，就是缘分而已，人们后来给它安立了一个叫爱情的名词，因为贪欲缘故，难以摆脱它，难以驾驭它，于是就讴歌它，夸张它，幻想它。 年轻人不知深浅，往往一出道就被这个东西伤了，跟出门就踩了一脚屎差不多。等到了中年，有了些感悟了，也晚了，其实，很多人，老了也没什么感悟，没觉醒，我就见过一个老人家都六十多了，还求这个东西，活的很麻烦。看着实在让人揪心。 不管是罗密欧与朱丽叶还是赵富贵和李翠花，最后都难逃一死，缘分一尽，什么都留不下。想不开，就粘在上面，傻了，一点智慧都没有，而且，很多人一沾这个，别说智慧了，连起码的理智都没了；能想开的，就能意识到，爱情这个东西，一过去，就跟拉进抽水马桶的屎一样，随着哗啦一声，啥都没了。 努力去回味、痛苦、找寻、为之不能自拔的人，就好比明明已经冲掉了，但还是不甘心要回头下手再掏回点什么。 很多人恐怕觉得这些不太好接受，其实，还有更让我难以接受的，佛法告诉我们人生轮回的真相，和你相爱的那个人前世极有可能是你各种各样辈分的亲人。 出家前，按规定要先离婚，离婚后有个佛门的专门名词称前妻叫“故二”。 我跟故二去民政局办理了离婚手续，好多人都以为还不得哭歪歪地办这个事，还有人误以为会有什么波折，其实都没有，高高兴兴地离了。 倒是有个小插曲，早上出了门，要进电梯时，故二忽然问，你会不会假借出家跟我离婚，然后再还俗娶一个年轻的女人。 我一听，马上就知道这绝对不是她的智慧，肯定是别人跟她讲的。你看，世间人的内心有多烦恼，这种事情都想的出来。 我说，不会的。 故二说，那好吧。 我说，刚才那话是谁教你的？ 故二说，是谁谁谁教的。 我说，以后你不要乱听别人的话，这个世界太复杂，烦恼太多，见解太多，听就一定要听佛陀的真理，听佛法的指引。 然后去办理了离婚手续。在民政局，还有一个小插曲，正在等待盖章等手续时，忽然走廊里传来歇斯底里的痛苦的叫骂声，有人劝，有人对骂，涉及到两个家庭，一听，主人翁是个女的，她来办理离婚手续，痛心地向周围的人哭诉，旁边有人问她，你不是四天前刚在这里办的结婚手续吗？ 她说，日子过不下去了。。。。。。 写上面的这些话，不是为了鼓励大家去离婚，而是觉得大家应该能够好好地过下去，一旦遇到情感危机，尽量能做到好聚好散，不要粘着，得放下且放下，没完没了地不放手百害而无一利。 就当成肚子里的一泡屎，拉掉了就不再去找。而且绝不可在婚外去找心理刺激，给枯燥的生活增加乐趣，那样给自己和他人带来的危害和痛苦太大，搞的不好，就是一屁股的屎擦不掉，身败名裂的大有人在。 能做到这一点，很了不起，我觉得还是要靠修行，否则，靠人那点自觉性，太难，况且，这个时代的人已不好再谈自觉性了。散伙了的，就散伙了吧，也别再苦苦地去找寻下一段情感了。找来了又能如何，到头来还是一样，苦不堪言外加莫名其妙。有条件的，还是要修行，才能从生命的真相中寻找到解脱之路，否则，人生已经如此痛苦了，再去轮回，我都想象不出如何承受恶道的痛苦。 这里并非否定世间的快乐和幸福，我自己也非常感激在世间时，所有给予过我快乐和幸福的人和事，感激我的所有的亲人，感谢那些我们相互搀扶着走过的那一幕幕如梦如幻的人生之路。感谢我们当年相互的爱护、争执、别离乃至抱怨。 乃至给予对方的伤害。 现在，我可以确定情感这个东西靠不住，它可以满足我们一时的内心需求，使我们暂时不孤独，但是，我们为之付出的代价太大了，现世可以看到的都是我们无法承受的，何况我们肉眼看不到的更长远的未来。 而且，每一段情感之后都让我们饱受折磨。 还是放下的好，我个人觉得，目标不是把情感泯灭掉，把人搞成木头，而是把情感转化成一种更高级的爱，没有后遗症的爱，没有过患的爱。 这个爱肯定不再是情爱的那个爱。 本文链接：http://www.maixj.net/misc/aiqing-shi-17350","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"番剧台词","slug":"杂谈/番剧台词","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.716Z","comments":true,"path":"2018/01/01/杂谈/番剧台词/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/番剧台词/","excerpt":"","text":"突然消失总会让人很伤感如果结局还是伤感那么还是不要更深的羁绊来的好适当的附和一下就行了 织女和牛郎不管下多少年的雨都不会忘记对方如果连续下多少年的雨 士道同学也不会忘了我吗? 织女和牛郎被银河分隔，一年只能见一次是吧？ 恩，是啊。 可是如果7月7日下雨的话，这个一年一次的机会也将失去了。嘛，确实经常这么讲。如果，我是说如果。如果一年又一年又一年的，7月7日一直下雨，一直持续着不能相见的日子，他们还能继续思念着对方吗？ 为什么，会这么问？ 时间比什么都温柔，就连两人失去了每年仅有一次的机会的悲伤，总有一天也会被治愈的吧？时间比什么都残酷，就连两人起誓过永恒的爱情，总有一天也会被风化吧？持续地错过确认彼此心意的机会的两个人的心中，还会互相存在（于彼此的思念中）多久呢？突然消失总会让人很伤感如果结局还是伤感那么还是不要更深的羁绊来的好适当的附和一下就行了 织女和牛郎不管下多少年的雨都不会忘记对方如果连续下多少年的雨 士道同学也不会忘了我吗? 织女和牛郎被银河分隔，一年只能见一次是吧？ 恩，是啊。 可是如果7月7日下雨的话，这个一年一次的机会也将失去了。嘛，确实经常这么讲。如果，我是说如果。如果一年又一年又一年的，7月7日一直下雨，一直持续着不能相见的日子，他们还能继续思念着对方吗？ 为什么，会这么问？ 时间比什么都温柔，就连两人失去了每年仅有一次的机会的悲伤，总有一天也会被治愈的吧？时间比什么都残酷，就连两人起誓过永恒的爱情，总有一天也会被风化吧？持续地错过确认彼此心意的机会的两个人的心中，还会互相存在（于彼此的思念中）多久呢？","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"看似近但遥远的东西","slug":"杂谈/看似近但遥远的东西","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.710Z","comments":true,"path":"2018/01/01/杂谈/看似近但遥远的东西/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/看似近但遥远的东西/","excerpt":"","text":"风筝 秋千","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"markdown语法","slug":"coding/markdown语法","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.753Z","comments":true,"path":"2018/01/01/coding/markdown语法/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/markdown语法/","excerpt":"","text":"欢迎使用 Cmd Markdown 编辑阅读器 我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，Cmd Markdown 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown： 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载： Windows/Mac/Linux 全平台客户端 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 新文稿 或者使用快捷键 Ctrl+Alt+N。 什么是 MarkdownMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，粗体 或者 斜体 某些文字，更棒的是，它还可以 1. 制作一份待办事宜 Todo 列表 支持以 PDF 格式导出文稿 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 新增 Todo 列表功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 2. 书写一个质能守恒公式[^LaTeX]$$E=mc^2$$ 3. 高亮一段代码[^code]1234567@requires_authorizationclass SomeClass: passif __name__ == '__main__': # A comment print 'hello world' 4. 高效绘制 流程图12345678st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 5. 高效绘制 序列图123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 6. 高效绘制 甘特图12345678910111213title 项目开发流程section 项目确定 需求分析 :a1, 2016-06-22, 3d 可行性报告 :after a1, 5d 概念验证 : 5dsection 项目实施 概要设计 :2016-07-05 , 5d 详细设计 :2016-07-08, 10d 编码 :2016-07-15, 10d 测试 :2016-07-22, 5dsection 发布验收 发布: 2d 验收: 3d 7. 绘制表格 项目 价格 数量 计算机 \\$1600 5 手机 \\$12 12 管线 \\$1 234 8. 更详细语法说明想要查看更详细的语法说明，可以参考我们准备的 Cmd Markdown 简明语法手册，进阶用户可以参考 Cmd Markdown 高阶语法手册 了解更多高级功能。 总而言之，不同于其它 所见即所得 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。 什么是 Cmd Markdown您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 编辑/发布/阅读 Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。 1. 实时同步预览我们将 Cmd Markdown 的主界面一分为二，左边为编辑区，右边为预览区，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！ 2. 编辑工具栏也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 编辑区 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。 3. 编辑模式完全心无旁骛的方式编辑文字：点击 编辑工具栏 最右侧的拉伸按钮或者按下 Ctrl + M，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！ 4. 实时的云端文稿为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 编辑工具栏 的最右侧提示 已保存 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。 5. 离线模式在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。 6. 管理工具栏为了便于管理您的文稿，在 预览区 的顶部放置了如下所示的 管理工具栏： 通过管理工具栏可以： 发布：将当前的文稿生成固定链接，在网络上发布，分享 新建：开始撰写一篇新的文稿 删除：删除当前的文稿 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地 列表：所有新增和过往的文稿都可以在这里查看、操作 模式：切换 普通/Vim/Emacs 编辑模式 7. 阅读工具栏 通过 预览区 右上角的 阅读工具栏，可以查看当前文稿的目录并增强阅读体验。 工具栏上的五个图标依次为： 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落 视图：互换左边编辑区和右边预览区的位置 主题：内置了黑白两种模式的主题，试试 黑色主题，超炫！ 阅读：心无旁骛的阅读模式提供超一流的阅读体验 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境 8. 阅读模式在 阅读工具栏 点击 或者按下 Ctrl+Alt+M 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。 9. 标签、分类和搜索在编辑区任意行首位置输入以下格式的文字可以标签当前文档： 标签： 未分类 标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示： 10. 文稿发布和分享在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 (Ctrl+Alt+P) 发布这份文档给好友吧！ 再一次感谢您花费时间阅读这份欢迎稿，点击 (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！ 作者 @ghosert2016 年 07月 07日 [^LaTeX]: 支持 LaTeX 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 MathJax 参考更多使用方法。 [^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，四十一种主流编程语言。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"}],"tags":[]},{"title":"march_18","slug":"diary/march_18","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.750Z","comments":true,"path":"2018/01/01/diary/march_18/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/diary/march_18/","excerpt":"","text":"Look Where are you going ? 18.03.29 可怜之人必有可恨之处 18.03.28 手指不痛啦！手指不痛啦！ 为什么呢？我的手指尖没知觉了。 早上练，左手一按琴弦就生疼，下午就一点都不疼了。摸了摸，好像肿了。/(ㄒoㄒ)/~~ 还是有不少收获的， EM–&gt;C–&gt;G–&gt;什么节奏–&gt;EM—&gt;可以比较顺的弹出来了，好高兴，好高兴，好有成就感。哈哈哈哈。 倒数153天 142天 18.03.27 我终于会切换和弦了,我成功的度过了从入门到放弃的阶段,哈哈哈 那啥,是哪三个和弦咧? OH,是 EM—&gt;C—&gt; G,前几天我还以为我笨的要死,马上就入门到放弃了. 几天一练,能把和弦按对了! 接下来就是和弦转换,那就练吧 先两个两个的练,熟练了就三个一起循环弹 我好像记得 要能熟练掌握两个和弦之间的转换,大概要练1000遍 那就练吧 15分钟后我才弹了100遍,这时左手指尖已经生疼了,1000遍下来手指就要废了,和弦转换不是一⑨而就的, 照这个速度,七夕节还有143天 那时一定可以练好吉他的,那时就可以弹吉他给她听了 想到这里,心里有头小鹿在扑通扑通的乱撞啊 ┗|｀O′|┛ 嗷~~ 倒数154天 143天 有些人让事情发生,有些人看着事情发生,而有些人甚至连发生了什么都不知道 ———–奥普拉的父亲#### 总有人会中奖，为什么不是你呢？————–尼古拉斯霍达克科比 1.相识 2.线上聊天 3.聊出好感 4.现实见面 5.确定关系 6长期相处 7谈婚论嫁 一个有狼性的的人不会放弃， 遇到困难就逃避，情绪化，不冷静 被女生拒绝一次 唉声叹气，郁闷，压抑，难受想哭，这些情绪有必要吗 有狼性的我就特别简单 冷血 这个女生我还搞不搞，搞就接着想办法 看看是哪步搞不定了，想办法搞定。 搞不定的话，下次还要死在死在这里，就这么简单 哪有哪些何事秋风悲画扇啊？ 18.03.26 圣堂四骑士——————牛叔 —–念头植入—- 自信 坚强 坚持 {在马拉松跑步的时候,会感到痛苦,有一个词叫极点,过了这个极点后就感觉不到疼痛} 开始 ——-痛苦 ——–快感来临 ——-享受 宽容 18.03.24 在这片钢铁丛林里 抬头望着 只剩下小小的一片天空 看不到月亮和星星 只有一份的寄托 在那里守望着 18.03.23 I lost one day again 18.03.21 早上四点半的时候我醒了,从梦中醒来.浑身有点热.说不出是什么感觉,是抑郁吗?听说抑郁的人都想了结自己的生命 梦中我梦到她了,已经说不出有几次梦到她了.我似乎是在一个学校,一个我经常梦到的学校,但是我从不知道有这么一个学校 她和她的几个朋友一起走着,我就在她们身边站着,朝着她看着.而她好像是没有看到我一样,就走了.留下一脸默然的我.为什么?为什么? 我在一个书店,我感觉到她在书店门口,我就跑出书店,果然我在书店门口看到了路过的她,她和她的几个朋友一起走着.我冲出店门,站在路中间,朝着她的背影挥手.她似乎感觉到了,转过身来.我高兴地笑了,但是她看着我面无表情似乎像没看到我一样有转过身去.然后我就醒了. 倒数160天 18.03.20闪瞎我的眼 还可以这么厉害,世界真是复杂而精彩 书又看了250几页,明天700多页的书就看完了 我真是太怠惰了,应该一天看完的 倒数161天 18.03.17早上再一次没有起来，昨天网上又熬夜了。起来后我做了一个梦，梦到丧尸，我和一群人被困在一个带有院子的房子里。丧尸已经爆发一段时间了，我似乎成了这帮人的头儿。直到一次外出寻找物资，回来时看到一个女的 引来一大群丧尸朝我带领的众人的房子，剩下的就记不起来了，看到那一群丧尸我是既愤怒又害怕，更多的是绝望。 晚上，又看了看爬虫的代码，前几日还看不懂，今通过这几日的学习总算是搞懂了，好开心。看到成果是让你坚持下去的动力，像前几天，看到代码就害怕，整个人都快崩掉了。 莫怠惰 再次装了黑苹果，因为我的审美洁癖太严重了。经过一上午的测试，续航3.5小时 晚上，切到linux,因为系统盘满了，进不去系统，吓得我以为还要重新部署系统，想想就头大。进入命令行，删了些东西，总算是进去系统了，充满电后，经过推算续航时间 6个多小时。开来还是白苹果好，以后买一个，17k也不贵 对了，还要60k去给眼睛做一个手术 加油吧，Be a eccellent man, To travel the world with her,in the future 倒数164天 18.03.18我真是太爱做白日梦了,线性的思维是不可取的. Oh 不 ,我也不知道我想要什么 黑夜中还有唯一的灯塔指引着我 我愿做一个港湾用一生守护灯塔 我的思想又炸了,太危险了 我这才发现我是一个渣,一无是处的渣 别人的进程与我的进程,回想去年,我真是渣,在无人的深空中徘徊, 羞愧的连死的心都有了,但我还不能死 要有敬畏之心,我却想干掉全世界 倒数 163天 18.03.19来在伤口上撒点阿莫西林,我真有点恨自己的脸. 看能不能治好,不然就毁容了 Head first html&amp;css 700来页,加把劲几天看完它 Python核心编程 JavaScript+DOM Oh 几千页,看来要爽飞我了!!!!!! 加把劲别人3个月,我要一个月. 呦呦呦,又在说大话了 还不错,今天250多页 倒数162天 这世界为什么会有“我想见你”这种人间疾苦。 I am a sily and stupid boy, I hurt her heart by myself I do not want to do like that but the lonely heart foce me have to do In July,the beautiful begining. then , I destoried the relationship between her and me Sadness Sorrow Pressure Ignorance I almost get mad I need Love , I need someone accompany me. Please by my side or I may die Lost in the darkness， hoping for a sign， Instead there is only silence， Can’t you hear my screams? Cause one thing is for sure， You’re always in my heart I always tell me Nothing, Nothing, Everything is OK. But ……… Maybe death is the best way to free my soul 吾今与汝无言矣。 吾居九泉之下遥闻汝哭声，当哭相合也。 吾平日不信有鬼，今则又望其真有。 今是人又言心电感应有道，吾亦望其言是实，则吾之死，吾灵尚依依旁汝也，汝不必以无侣悲。 我呢 经常会念旧的人 想到我与你之间的事 我想到了两只刺猬 如果心是近的，再远的路也会是短的。有两只困倦的刺猬，由于寒冷而拥在一起，可因为各自身上都长着刺，无奈只好分开，一会儿又冷的受不了，于是再次凑到一起，几经折腾，两只刺猬终於找到了一个距离 既可以保暖 又不至于刺伤对方的距离 我身上的刺 刺伤了你 我不想这样 但总会不由自主靠的太近 因为真是太冷了 真的对不起 真的真的对不起 我不知道我做什么才能弥补我的过失 真的想为你做点什么 但… 只有真诚的歉意 在此 希望得到你的原谅 而你并没有因为伤而离开我 感动真的是感动 幸福真的是幸福 表达不出的感觉 幸好你没有离我而去 也许再也找不到这样的灵魂了 与人相处的的过程 就是逐渐暴露彼此缺点的过程 需要两颗互相理解与包容的心 愿你天天开心 11月15日 感 前几月事 走过熟悉的街角，看到熟悉的背影，突然就想起一个人的脸。明明自己心里有很多话想要说，却不知道怎样表达。一次又一次地提醒着自己，不可以去触及。因为我明白，你和我的世界有着遥不可及的距离。这种距离，我无法逾越。你有你的生活，我有我的轨迹，命运偶然的交集，只是短暂而美丽的相遇 如果有来生， 要做一棵树， 站成永恒， 没有悲欢的姿势。 一半在土里安详， 一半在风里飞扬， 一半洒落阴凉， 一半沐浴阳光， 非常沉默非常骄傲， 从不依靠 从不寻找 我已经感觉到你已经开始厌烦了 我找你是因为想见你最后一面 可能下星期我就要退学了 背上行囊独自一人踏上他乡的路 因为没有了留恋的东西 如果见不到你可能就再也见不到了 我一直疑惑着生活是为了什么？ 五年之内如果见不到我本人 那时我已经死了 因为承受不住压力 自杀了 如果我们还有缘 五年后 待我make a difference 我会再回来 那时的我会是另外一番模样 是安于现状并学着享受庸常 还是甘冒着下坠的风险振翅飞向远方 在每一双翱翔云团的羽翼之下 都有无数累累白骨 它们没有阳光 只有遗忘 莫悲伤 亲爱的孩子 When no one else in the world believes in you When you do not even believe in yourself I will believe レム #### Trust me To feel Do not say even one words Put your hand into mine When you are dreamed about fires I would used to whisper it will be allright Standing at your side I am aways waiting for you ever and forever 2022.08.28I saw you smile today ,I almost forgot you faded away. 1234567891011 I will never give up again.“我再也不会放弃，Because if I die，因为如果我死去了，These memories of you die with me，关于你的所有记忆也会随着我的死去一同消逝。” ver 2022.08.28I saw you smile today ,I almost forgot you faded away. 1234567891011 I will never give up again.“我再也不会放弃，Because if I die，因为如果我死去了，These memories of you die with me，关于你的所有记忆也会随着我的死去一同消逝。”","categories":[{"name":"diary","slug":"diary","permalink":"http://blog.scavenger.top/categories/diary/"}],"tags":[]},{"title":"hack_road_map_知乎","slug":"hack/hack_road_map_知乎","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.673Z","comments":true,"path":"2018/01/01/hack/hack_road_map_知乎/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/hack/hack_road_map_知乎/","excerpt":"","text":"作者：坏蛋 链接：https://www.zhihu.com/question/20607351/answer/275661602 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 今天心血来潮给大家写个新手到黑客入门的路径图【附全部学习资料下载】！ 写在前面，这是我重新发布的一次，我的回答被举报删除了，不知道谁举报的，但是希望不要用恶意的心态去看待分享这件事情，我分享都是能够帮助到大家的，如果再被举报删除，那我也无话可说。 入门介绍： 说到黑客大家可能觉得很神秘，其实我们说的的黑客是白帽子黑客，就是去寻找网站、系统、软件等漏洞并帮助厂商修复的人，刚入门的黑客大部分从事渗透工作，而渗透大部分属于web安全方向，就是利用漏洞来取得一些数据或达到控制，让对方程序崩溃等效果。 一些常用的名词解释： 挖洞的话，就相当于在程序中查找漏洞，举一个不大恰当但容易理解的比喻，就像韩非子说所的那个自相矛盾的故事：楚国有个人自称自己的矛是世界上最锋利的矛，没有什么盾牌它刺不破，同时又说自己的盾是世界上最坚固的盾，没有什么矛能刺破它，虽然两句话在语法上并没有什么不妥，但却有个致命的逻辑漏洞，因为用他的矛刺他的盾，将导致“不可预知”的结果，当然了，在程序中这种“不可预知”的结果往往会导致各种问题，崩溃或执行非预期功能都有可能，这个就是漏洞了。 再来说说后门，这个很好比喻，就像是警匪片中的卧底或者是笑傲江湖中的岳不群，表面上做一套，背地里做另一套。在软件中就是这个软件提供给你了你需要的功能，但在背后它可能偷偷摸摸地干了一些你不想他干的事，例如窃取你电脑上的文件。 0day和挖洞是相关的，漏洞发布后，厂商一般不能说马上把漏洞填补了，那么这段时间这个漏洞是可利用的，久而久之，我们把那些刚发布的漏洞（或者说根本没发布自己偷偷用的漏洞）叫做0day，当然了，它的杀伤力较一些老的漏洞往往大的多。 肉鸡的话我们可以直接理解为已经中了木马受我们控制的傀儡计算机，我们可以控制傀儡机做一些我们不直接做的事情。Web安全必须要了解Web方面的一些基础知识做为铺垫的去的去学习这门技术，因为不是人人都可以直接先渗透在进行编程等方面学习的、所以为了更好的入门的Web安全必须要先掌握一些基础知识，相比对逆向方面的入门Web安全真的不难，逆向要是想了解一个简单的什么叫jmp esp溢出需要的基础知识不是一点点，如果是计算机专业的还好，不然通过自己去学习真的不是那么简单，不说太多，下面我就给大家推荐一个前期学习知识的路径和资源链接。 进入学习阶段：首先是我给大家推荐的是前端的html/css/js + php进行学习，前端的这些都是肯定需要学习的知识，至于后端的编程语言我建议还是php，主要是因为入门学习快、目的呢就是更快的接触到php+mysql开发，这样前前后后的知识加起来才能在知识链上完整构成一个网站，这样做的好处的就是快速了解一个网站如何开发，什么是前端和后端？什么是http？什么是数据库，网站的数据都存储在哪？ 当然不怕枯燥的话从C语言开始学起更佳，相比于C语言这种学习了半载一年还不一定有什么成果的玩意，直接用工具按照教程来达到目的会容易且有趣的多，但学习C语言在很多的时候，往往能够学习到C语言之外的东西，对程序的运行，内存的分配与管理，数据结构甚至是编程的书写习惯，都有非常大的好处，可以说，C语言学会后再学习其它大部分的语言都会快得多。 第一部分资源链接如下（解压密码在回答底部）： 这套PHP的教程包含了html/css/js和php+mysql保证一天看一课时的一个月就可以掌握，文件中的“就业班”的文件夹包括了一些后续的jquery+ajax+xml等等， 在前期的学习过程中这些后续知识可以选择性学习 链接: https://pan.baidu.com/s/1pMZqRaF 密码：st4m 下面这个链接是HTTP协议的教程来源自燕十八php教程中，我觉得这个http讲解的非常好 链接: https://pan.baidu.com/s/1pNgIyNp 密码：kfi7 在学习了上面教程恭喜你已经简单的入门了Web，接下来了就是进行安全的学习，这方面我给大家推荐一个教程就是我朋友黑无常的，网络上的教程个人觉得都不太适 合入门，除了个别的不错，大部分都是直入主题之家讲怎么利用，不适合学习！ 诚殷网络WEB渗透测试培训（基础篇） 链接:https://pan.baidu.com/s/1nwnrM2X 密码：uehm 作者本人也非常擅长做教学，大家有兴趣可以加他好友，黑无常QQ：974168625（注明来自知乎） 在学习完成以上知识后就可以在各大漏洞平台或SRC平台找一些目标来实际的挖洞一下，前期肯定是花大量的时间也不一定的够挖到，所以可以加i春秋的QQ群问问群里的管理们：556040588 两个重要的思维导图： 情报收集思维图 漏洞挖掘思维图 注释：SRC是各大互联网厂商的安全部门，负责审核你挖掘的漏洞并提供奖励。 挖洞时一定首要学习前期的信息收集，俗称：踩点 新手必看： 漫谈前期信息收集 信息收集系列之一–搜索引擎 信息收集系列之二–轻量级信息收集工具 信息收集系列之三-重量级信息收集工具 工具|手把手教你信息收集之子域名收集器 注：挖洞只为提交漏洞，维护网络安全，请勿做出违法行为，网络安全法规已出。 你是如何看待网络安全法的出台的？它会对你造成什么影响？ 谈网络安全法的一些想法 第二部分资源链接如下： 好了，在学习上面的教程中已经可以算是安全入门了，不过接下来还需要在一部进行学习 这部分是没有什么教程的，需要自己去百度学习，学习的内容就是2003、2008操作系统听着很简单对不对？ 我需要大家使用以上的操作系统使用网上的已有的CMS(如:discuz,WordPress,phpcms,dedecms等)大家一个站点，从在服务器上安装和配置php+apache+mysql等环 境开始，不要使用集成工具偷懒，去体会一个网站的搭建流程，知道是什么ftp，什么是空间，在网上买的虚拟主机和服务器，vps是个什么区别？什么是CMS目标站点？ 我建议是自行在空间商购买一个服务器，价格一个月在100以内就可以了！ 注：如果是不能购买那么请学习安装虚拟机本地使用镜像搭建服务器环境 以上的内容的最好通过百度自己完成，这些小问题都是百度都可以解决，要学会使用百度，不要什么问题都去问别人！！！ 接下来肯定是一部分的linux知识学习了 是一个在线的教程 http://study.163.com/course/courseMain.htm?courseId=983014 接着可以学习一门可以方便我们写exploit利用工具的编程语言，首选肯定是python 优点：入门快，网络编程拥有强大的各种库做支持，更易编写工具 一套的简易的在线教程，来自于中谷python，学习完毕后写一些简单的GET/POST型工具练练手不是问题 http://www.icoolxue.com/album/show/113 Python大法从入门到编写POC 注：第二部分的同样的很重要，了解网站的搭建构成，什么是CMS，对渗透很有帮助，现在大多数的网站基本上都是使用的CMS建站，因为安全，方便，模板样式也多，通常在渗透过程中我们对目标的信息收集就要着重关注这些程序的版本是不是最新的？如果不是有没有漏洞呢？ 第三部分资源链接如下： 这部分是一大块，我不打算在细分了，之前的内容几个月就可以完成，下面的内容能1年内完成都可以说是很不错的！ 这部分我认为应该需要掌握TCP/IP原理以及进一步的提升编程技术。 教主的TCP/IP教程 链接: https://pan.baidu.com/s/1dEMM8t7密码：ybmm 传智的前端的教程，非常推荐学习！ 链接: https://pan.baidu.com/s/1bqy18Ur 密码：hsyf 传智的的Java教程，选择性学习，如果感兴趣Java的可以学习。如果不学习也可以看看里面的oracle数据库教程！ 链接: https://pan.baidu.com/s/1mhQA4hM 密码：kx29 有两套Python的教程，都是系统的pythonWeb开发，选择一套学习即可 链接: https://pan.baidu.com/s/1jJJmbDc 密码: r7tb 完成基础的姿势学习后，一定要多看看其他白帽黑客的实战思路，对你的实践是非常有帮助的，知识是死的，思路是活的。 白帽子分享挖洞技术/思路的实战内容【建议收藏】 挖洞小帮手： AG安全团队2017大型工具包 进阶了解/学习： 汇编基础视频+天草逆向视频 逆向/破解/病毒分析实战分享【经常更新，建议收藏】 社会工程学也是必不可少的一项技能： 社工盒子 最全面的社会工程学工具 常见社工方法以及如何防社工 社工之经度纬度定位-50米以内 阐述网络上所有定位方法-超高精确定位 资源不够的话可以去这里搜一下 超级多的白帽黑客工具/源码类集合【经常更新，建议收藏】 超级多的白帽黑客视频/书籍教程集合【经常更新，建议收藏】 结语：其实在接触了Web安全1年之后大家都自己也能知道自己以后的学习目标，第三部分主要还是推荐些好的资源！ 学习过程中，尤其是前期学习千万不要放弃，三天两头的进行学习，同时学习的过程中要记录图文并茂的笔试，最重要的进行实践，实践，实践！ 在实践中发现问题，解决问题！安全非一朝一夕之事。 注：解密密码请看压缩包注释 【解压密码直接放出来吧：复制这个网址粘贴解密，www.lthack.com/php 不用点击，复制这个网址就行，非广告，无用的网址。】 最后的最后，这么多干货学习资源，别光顾着收藏啊，点个赞+关注合情合理吧 最后的最后，这么多干货学习资源，别光顾着收藏啊，点个赞+关注合情合理吧","categories":[{"name":"hack","slug":"hack","permalink":"http://blog.scavenger.top/categories/hack/"}],"tags":[]},{"title":"灰产分析.md","slug":"make_money方法/灰产分析.md","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.770Z","comments":true,"path":"2018/01/01/make_money方法/灰产分析.md/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/make_money方法/灰产分析.md/","excerpt":"","text":"链接：https://www.zhihu.com/question/59673200/answer/170191785 真的想喷喷那些张口就各种灰色行业的“大牛”，也想喷一下那些看了就信的人。 这个问题有很多人回答，我没有全部看完，所以我喷看到的，特别是做什么外围女的，色情的什么的 1.首先你要明白一点，现在这个社会，发现赚钱门路的他们会告诉你？嫌自己的行业竞争压力太小？真要那么赚钱还有时间带你入门？ 2.说做外围女的那个，不就是做搜索引擎的灰帽黑帽恶意排名接广告么，还这个不能说那个不能说的我真的服了，给你画个大饼你就信了啊？优化涉及到的行业千千万，你不能说啥？怕动别人蛋糕？我真想笑。 3.还有说色情的，那就是纯粹的违法，有钱赚你要有命花吧？你一个月赚几万几十万，被抓就是十几几十年，值得吗？别上脑，冷静下来分析分析，真要不要命的不管不顾的你做什么色情，你去做赌博网站好了，一年好几亿的流水利润，你做一年然后卷钱跑呗，反正你都不在乎违法不违法了。 4.还要针对下那个外围女的，你们真以为优化那么好做的？特别是这种灰色的词，记得去百度查下关键词指数，热门的词要么被封了，要么就有同行在花钱刷前三页甚至前五页排名，你抢的过？不要投入的？一个关键词你辛辛苦苦做到前五页不说投入多少钱，你还要找人刷到首页，随随便便一个三五百指数的词都要好几千，还不保证能不能上去，如果被发现作弊你辛苦做到第五页的网站直接给你k了，只看他在那说赚多少赚多少，告诉过你需要投入多少没？ 踏实一点，正规行业赚钱的路子多了去了，别信那些灰色的，不归路，能洗白的没几个，记住了，没人会平白无故告诉你发财路在哪。 上面的回复是昨天偶然看见这个问题，然后看到有人在就SEO排名的事情来钓鱼的那个回复一时气不过说的，针对评论里某人说的我急什么，纯粹就是因为看不惯这样忽悠人而已。我没说过不赚钱，但是首先那个回答遮遮掩掩的，不上头、了解这一行的人一看就知道是在忽悠，有回答也明确说了那个做外围女的回答是在拉下线，而且只是给你一个模糊的说这玩意赚钱，但是一点没提你要付出多少，所以才气愤。 话到这里了，我也说点，就我接触的一些灰色或者干脆就是黑色的行业，我不怕动谁蛋糕，因为我不做这些，我会告诉你什么灰色产业赚钱，但也会明确告诉你你付出的代价是什么，并且我没有公众号啥的，也不会取消匿名，你们就当看乐子玩。 ——————–1分——————– 首先，就外围女做优化的，他截图的那些很简单，用的方式基本是两种，一种是站群，批量搭建大量网站，以前通过外链，现在基本用蜘蛛池来引百度蜘蛛过来收录实现霸屏，这种方式也就能做做长尾词，指数上百或者过千的词基本是不可能有排名的；另外一种是站内寄生虫，去买/或者自己有能力去搞被黑阔入侵的高权重网站，放上寄生虫程序，配合自己上传到服务器预先设置的图片，标题，关键字，内容进行大批量的生成垃圾页面，因为高权重的网站本身就比普通站更容易收录和获得更高的排名，当然一旦被入侵的网站一定时间内没有发现的话，这种站以后就废掉了，也就是说，这种方式是拿着别人辛辛苦苦几年做出来的网站来短时间进行恶意操作，最终会导致高权重网站被废掉，幸运的是现在搜索引擎一直在完善这些。 还有有钱的去买新闻源网站，随便发几篇文章轻松就能占据首页，以前经常被搞的是凤凰资讯； 或者拿到新闻源或者Z…F 或者教育的域名解析权限，直接解析二级三级域名到国外服务器，依靠主站是大站的优势可以很快把一些灰色的词做到首页。 还有一些更深入的就更不好了，那么如果你通过我上述的说法去做的，根据国家法律明文规定，这是非法入侵和破坏，要判几年、要罚多少钱可以去查下。而且你要实现我上述说的，你要购买大量域名，一个com的就算50，批量可能便宜点，但是便宜不到哪去，你要购买国外高配置的服务器，几百块一个月的带不动，你要添加大量IP，一个IP就算放5个站，添加一个IP的价格大概20，你要自己会写代码还好，省去寄生虫的钱，不会写的去买，骗子或者拿着转了几万遍手的代码居多，拿来也没用，要是买新闻源，便宜的几千，贵的几万一条，而且你还不确定人家会不会骗你钱，会不会转手卖给别人，你也不确定管理员多久会发现你放的后门，很有可能你刚上了自己的后门，第二天就没了，这样你几万块就白搭了，还有搜索引擎是经常更改算法的，明面上说一年或者几年一次，但是基本上每个月都会有细微变动，所以如果你做了，没几万十几万学费你是玩不溜的。 ——————–2分——————– 色情站，前段时间有问类似问题的，有个匿名高赞的回答说的很明确他能赚多少钱，具体的你们可以自己搜，我就不说流程了，我来告诉你内幕。 现在基本上每个省都有网警，许多大城市都有很多安全公司，他们很多都是和Z….F合作的，大部分时间是打击一些做非法集资，互助，传销这些的，在业内有一句玩笑话，你是否自由，要看技术员缺不缺钱。为什么有时候会感觉抓色情站的比较少呢，因为他们重点没有放在这里，如果上面下来命令清扫了，那他们就会抓一批进去，特别是那些做收费会员的，死的老惨了，当你在沾沾自喜认为自己搞这个赚了不少的时候，其实只是人家有更有价值的目标没时间搭理你而已。 ——————–3分——————– 都快把这个事情忘了…… 再说点吧，估计离被删不远了。 前几年很火的，互助平台，当然不是那种一人几十块钱买疾病补助保平安的那种，是个人开的，充值多少钱到平台，每天给10%-20%的利息，然后每天站长在后台进行匹配，比如你冲了1000块到平台，每天可以得到100-200左右的利息，如果网站开始匹配了，而且你抢到了匹配的单子（匹配的意思是，有人在平台申请借钱），那么你直接转账给申请借钱的人，然后截图上传后台审核，确认之后从借出去那天开始算，每天30%-45%的利息，那么站长怎么赚钱呢？借钱的人可能是他的小号、用户充值到平台的钱是进了他的账户的，平台运营下去的方法就是拉人头（拉人头有钱赚，拉的人越多网站给的钱越多），等到给用户的利息抵不住进的钱了，那最后进来的就成了接盘侠，站长网站一关，等风头一过换个名字再开一个，玩这个东西的人心里都清楚网站随时会完蛋，所以那句话：早进早出早赚钱，晚进晚出胎盘侠。这个叫庞氏骗局的一种吧。 刚看了另外一个答主的回答，微信方面的，类似于赌红包，充值10块点击大转盘抽奖的，0.1-999元“随机”中的，当然随机这个东西，肯定是可控的啦，现在花式很多了已经，这种是赌博的一种了。 最近这两年比较流行的，现在还有公司模式在做的，虚拟果实，像以前的QQ农场，只不过你要施肥啊，浇水啊什么的都需要花钱去买，然后长出来的果子可以卖，这种东西算是虚拟货币的一种延伸，某些公司为了规避风险，把这些虚拟果实对接到购物平台，你种出来的果实可以在他们平台兑换一些实体产品，但说白了还是违法的。 说一个最近比较火的，云购，并不是那种一元云购，是另外一种云购，现在很出名的叫“螃蟹云购”，听说是某市的“重点扶持项目”，玩法呢，就是用户注册之后购买平台的一些产品，五花八门，价格会比官网的价格还要高，然后用户可以有两种付款方式，第一种，直接购买产品不收货，然后平台每天返钱给你，一直返到你购买商品价格*2算结束，另外一种是你购买产品收到货物之后，另外也每天按照一定比例返钱给你，一直返到你购买商品价格*1，意思就是你可以免费得到你购买的商品。这个玩意和我上面说的互助类似，等到没人进来的时候就是崩盘的时候，到时候又会出一批“接盘侠”。 笼统说了，要是一个一个说其中的猫咪够专栏了…… 吃饭去了，什么时候有空再写点…… 编辑于 2017-06-28 /answer/170191785)","categories":[{"name":"make_money方法","slug":"make-money方法","permalink":"http://blog.scavenger.top/categories/make-money方法/"}],"tags":[]},{"title":"改变感官的习惯","slug":"杂谈/改变感官的习惯","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.743Z","comments":true,"path":"2018/01/01/杂谈/改变感官的习惯/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/改变感官的习惯/","excerpt":"","text":"按照编曲的方式去听歌，马上就会听出另一个世界。 地摊心理学界有个“鸡尾酒”效应，你把注意力集中在某一点，就会忽略其他信息。 那么除了编舞和编曲工作的大多人，其实在听歌时，都很容易被歌词所吸引，而忽视了曲子的美妙。 废话不多说，可以尝试以下实验： 把一首歌粗略拆分成三层：人声是一层，动次大次的重鼓点是一层，其他的所有音效是一层。 尝试专注于人声外的部分，刻意不去听人声，集中注意力，仔细分辨出细微的音效，比如常见的各种乐器混响，流水声，响指声…像显微镜一样，暗示自己沉浸进去，把听到的一切音素都剖析出来。 如果听人声，试图屏蔽歌词的意思，不思考，仅仅沉浸在人嗓之中，仔细分辨这嗓音何时变大变小，如何起承转合，最好能听出换气、哽咽、自带的娇喘，音色雄厚雄厚在哪些音节，音色清扬体现在哪些咬字。 把音乐听“厚”，它不再是耳朵两端流淌的一条河，而是环绕在脑海的一片湖。尝试把所有声音同时包揽，去体会人声是如何夹带感情的，体会旋律和鼓点是在哪些地方会重合。 听循环体，很多人以为只有动次大次才会循环，事实上一首合格的曲子，所有音素都是有迹可循的，比如动次大次实际上去听，可能是动动次次动动大，动次动次动次大…最小的循环是以拍为单位，而更多的是以段为单位，比如说每隔四个八拍都会重复听到一声boom，比如每句歌词结束都会有个响指音，而每首歌的精髓就在于，你沉浸下去听，随时都会发现新的细节。 如果做到以上几点，大概几个八拍后就会明显感觉时间被拉回了当下，听到的一切会变得异常清晰，就像时间变慢了一样。 以上只是个引子，下面我来展开讲讲原理。 为了大家理解方便，可以打个比方。 首先，想象你的意念也就是注意力，是流淌在身体内的一滩水。 这潭水的总量恒定，沉积在大脑里的多一些，分给躯干的就少一些。 这潭水是流动的，而你就是水本身，你可以在短时间内控制这潭水的流向，但是大多时候水会停留在你长期习惯停留的地方。 当水分摊在体内，就像自动驾驶一样，你无需集中也能勉强应付日常生活，但如果你把水集中在大脑用于思考，那么集中的越多从别处汇集的就越多，思考的入迷，就会削弱了身体的感觉，乃至于废寝忘食。 也会有水自动沉积，你人走在路上，却总是杂念纷扰，引诱你持续思考。 其次，水聚积在不同部位，就会产生不同的效果，大致可以分为两类：感知，认知。 感知 视觉： 外视觉：事物的形状，颜色，光照强弱等。 内视觉：闭上眼睛能重现、重组，包括梦境和意淫在内的一切场景。 听觉 外听觉：你听到的一切人声，自然音等。 内听觉：脑海中重复响起的giligili eye… 触觉 本体触觉：酸疼麻痒爽 空间感觉 情绪知觉 嗅觉、味觉等 认知 逻辑思考 有意义的主动推演或摄取信息 杂乱无意义的意识闪现 回忆（即重现内感知）想象（即内感知的二次加工） 最后，一个重要的基本法，水停留在认知区域消耗的脑力远远大于感知区域。 俗称的心累，就在于水长期沉积在认知区域，反复回忆预期，思索想象，消耗了大量意志力，而感知区域如体力却依旧亢奋，这种身心的脱节就是疲惫感的根源。 好消息是，感知区域基本不会消耗，反而会补充大量意志力储备。 倘若人没有水流的集中，那么那个区域就不会进化，集中在想象回忆，意淫和脑洞就会变大，集中在思考，逻辑能力突飞猛进，这是人类区别于动物的本质所在。 而集中在感知区域，如集中在体感，体力和运动能力显著提升，集中在视觉听觉等，都会开发人的潜能。 就好比滴水穿石，每个人的容积不一样，有的人还是一潭死水，有的人却能在感知认知自由流淌，文艺和运动能力超常的同时大脑思考也异常清晰。 原理就是如此，每个领域背后都有其专注的脑区域，这是一个互相强化的过程，比如： 训练画画，视觉能力提升，于是更加擅长美术，比如在画画种积累了丰富的视觉感元，转行去学美妆，就显得潜力无穷。 比如跳舞锻炼了身体的触觉，转头去学滑板，就很容易保持平稳。 比如看了很多书，积累了很多奇思妙想，然后把这想象能力引入到视觉听觉，于是摄影作品就脑洞清奇。 总之，感知是第一手原料，而认知其实是再加工。 人类习惯了思考带来的快感之后，就很容易忽略了最原始的专注带来的愉悦。 无论是瑜伽，冥想，太极，乃至古典的气功和禅宗，本质上都是通过把注意力集中在感官上，换取大脑休息的空档。 所以搞艺术和爱运动的人看上去很有灵气，就是因为他们已经有了让自己大脑保持鲜活的途径。 而像我一开始所说的听力训练，其实就是让大多没有感知类爱好的人，提供一个除了睡觉以外能够休整大脑的方式。 好了，原理讲完了，其实以上都是废话，当今大多脑神经科学以及部分心理学和体育类书籍都会讲解。 这些知识早就烂大街却只有极少人受益，所以光讲道理并毫无卵用，讲原理也只是为我接下来要罗列的实践操作的铺垫而已。 那么，现在回到我们的修仙正题。 以下我来列举一些在实践中发现能够训练感官的思路： 左手x吃的艺术 吃饭时用非惯用手，有两个好处： 第一，当吃饭从本能反应变得有些费力，你就会情不自禁集中更多注意力在吃饭本身。 人对美食的最大糟蹋莫过于吃饭时思虑过多。 用左手扒饭，仔细体会肌肉的迟钝感和夹菜时全神贯注色感觉。 全！神！灌！注！的吃饭。你甚至可以菜放到嘴里闭上眼睛，用舌头去搅拌触摸，体会舌尖的酸甜麻辣，嚼得非常慢，试图去分辨薯片的辣和辣条的辣有什么区别，去分辨芝士的甜和燕麦的天，去体会米饭慢嚼后回味的淡香。 你会爱上一个人吃饭的。 薯片可以用门牙咬，嗑瓜子可以响得很有节奏感。 全神贯注的吃，仔细辨别食物的：温度、干湿、软硬、前调刺激，后调回味，是几种味道的糅合。 等你左手不能用于辅助专注的时候，恭喜你在无意间又解锁了新的神经元。 不经体会，你永远不会知道身体的灵敏对大脑的影响有多深远。 残缺的敏锐x逆天的触觉训练 各位有所不知，在身体训练领域有个潜在的原则，你想强化那个部位，就要对它进行限制。 比如练俯卧撑，从双手到单手，从水掌到三指。 感官的训练就是限制中的进化。 这个途径有无数种，我举几个思路： 比如如果你喜欢跑步，为何不尝试一下单腿跳，两跳一换腿到五跳一换腿，最后能单腿狂奔一百米，不但让训练有趣。也会在你回归一步一换腿的正常跑步时健步如飞。 比如你喜欢篮球，就先背住右手练左手，定住右脚练转身，在单位训练内给自己制定种种适合的障碍，比如，刻意去练一百次单腿站立跳投，提前把比赛中可能出现的临时反应都练成本能。 比如你就只喜欢散步，也可以体会一下，用膝盖发力提退和正常走路的区别，也可以尝试走路平移不发出一点声响，可以打直膝盖光靠脚踝走路。 而另一个触觉训练，可以称得上是黑科技。 你怕不怕痒，你怕不怕疼，你怕不怕冷，怕不怕热？ 如果你有足够的训练，对身体的控制能力会超乎常识。 当然这需要系统的渐进。 我们以痛觉为例，掐自己。 先正常的掐自己一下，体会轻微被掐的疼痛。捏住手臂，缓缓增加力度。重点来了！当你感觉到疼的瞬间，不要抗拒挣扎！也不要逃避和转移注意力！反而是仔细感知！ 放松呼吸，注意力集中在疼的部位，静静感知这种疼，把疼拆解开来：是不是有点麻，有种挤压的热，我们向来感到痛就逃避，可曾尝试过仔细分辨疼痛究竟是什么感觉呢？ 当你分辨和觉察出疼痛的细节，继续放送，深呼吸，想象把气吹到被掐的位置，静静的接纳这种痛感，然后它会慢慢变成一种异样的酸爽。 一旦不再抗拒，就增加力度，在新的力度下再次感知接纳，如此反复。 我曾尝试过让人慢慢来掐，最后平静的被把皮都抠破，却只觉得很爽。 当然这个练习只是举例，你可以尝试练习接受痒，可以用冰水泡手，可以用来压腿。 实不相瞒，惊人的意志力往往就起源于生理上的调控能力。 驾驭肢体的能力最终会扩散到心理上的抗压力。 原则就是，觉察分辨，接纳接纳，细细体会，感觉挺爽。 对了还有一个心法，心法的意思就是靠想象。 不知你们有没有玩过GTA5，里面老麦的子弹时间就是这种感觉。 或者说，龙族里昂热校长的言灵·时间零。 无论你现在身处何处，开始想象，周围时间突然变慢，你看到的景物变的明亮、精细、一句一动都被缓慢又清楚，听到的一切，就连欢呼中混合着的麻雀叫声都被你捕获，你能感觉到脚底的触觉，呼吸时气息流过鼻孔的感觉，像是能把你的情绪变成一团火光，像是打开了全身的毛孔，微风吹过，你在用全身上下的皮肤呼吸。 你真真切切的活在了当下这一瞬，这一秒，平静中流淌着喜悦。 清风拂山岗，明月照大江，便是如此。 （写完五分之一，剩下的技巧等考完再补） PS 有人看到自掐怀疑我有SM倾向，或者疑惑自己会不会掐出问题。 再次解释一下，由于我街舞都是自学的，所以训练方式比较残暴，倒立头砸地，空翻摔折腿，托马斯磨坏三双鞋，可以说酸痛是家常便饭。 而这些体悟都是在训练过程中为了激发身体潜能，反应速度还有忍耐能力而发现的，也能在扭伤的时候驾驭疼痛快速恢复。 就以柔韧性为例，按照传统的转移注意力压腿根本没什么用，而采取集中感知的方式，拉伸韧带的痛苦就会变成一件很爽的事。 若不是有绝妙的方法，你们当真以为那些超凡的体魄都是死磕出来的嘛？ 练习自掐就是训练这种驾驭痛苦的能力，把这能力延伸到生活中其他不可避免的痛苦之上。 如此而已。 PS: 有知友好奇理论来源，其实大部分是自己总结的，但非要说启蒙的话，大概是以下几本： 《真气运行法》《太极内功心法全书》《囚徒健身》系列第三本 以及我们这边中二风气比较旺，我爹作为一个体育老师却在研究针灸，我小叔刚从陈家沟拜师学了两年太极回来，这些心得体会主要就源于气功。 引用 ：https://www.zhihu.com/question/39910834/answer/178008668","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"自学编程_simon","slug":"coding/自学编程_simon","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.753Z","comments":true,"path":"2018/01/01/coding/自学编程_simon/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/自学编程_simon/","excerpt":"","text":"作者：赛门喵Simon 链接：https://www.zhihu.com/question/29138020/answer/141170242 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 我是真正零基础开始学Python的，从一开始的一窍不通，到3个月后成功搭建了一个动态网站（没有用任何框架）。相比于计算机大牛，我更加知道一个小白将会遇到什么坑，遇到哪些难点。我把我的学习过程写在下面，并附上在每个阶段的学习资料，希望对零基础的Python学习者有所帮助。 注：本文只做经历分享，不是技术探讨。 在知乎上常常看到想要转行IT，或者是想学习编程但不知如何开始的朋友。回答这类问题的人往往只是列出书单资源然后给出一个大致的方向。有些朋友一开始就扎入了理论学习的汪洋大海，从苦读类似《算法导论》开始，能够坚持读下来的寥寥无几，学习的积极性也被不断的挫败感消磨的所剩无几。 一直以来，编程对我而言是一种「黑魔法」般的存在。今年阿里月饼门，当很多人都参与到是非之争的时候，我更加着迷于程序员区区几行代码的脚本所展现出的威力，对于外行而言，这是超乎他们想象之外的某种能力——为什么我守在电脑面前盯着秒针然后拼命点击鼠标都不一定能抢到的礼物，程序员只需要提前花5分钟写3行代码就轻松搞定？ 所以，我的心底深处一直都想变成这样的一位魔法师。今年的8月，刚好工作上想要开发一个基于微信的英语学习网站，借此机会，我决定好好学习一下编程。在此之前，我所有关于程序的知识仅仅来源于两部分，一是本科时期的C语言必修课，现在已经忘的一干二净，不过好歹我从中明白编程是怎么回事；第二部分是大概两年前由于工作关系学的一些Python，不过只是皮毛，现在忘的七七八八。 简单说，我的目标是建立一个网站，不过这个网站是动态的，也就是说它能识别谁登陆，然后对不同的人显示不同的内容。而当时的现实是，我完全不明白网页是如何显示出来的？譬如每个人登陆知乎的时候看到的是定制化的页面，后台是如何基于每个ID来组织出不同的页面的？所有我们看到的问题，回答，参与的评论在背后的服务器上是以一种什么样的形式存在的？又比如为什么有些页面只能在微信端打开，在电脑上就会出错？（不知道你有没有发现这一点） 当时我的心中充满了无数个类似的问号？当然如果你也是小白，一定有着同样的疑问。 好处是一开始就明确了学习的目的：Web建站。所以我的学习方案基本就是通过做项目学习，哪里不懂就解决哪里，边做边学习，不断推进。另外，由于知道很多成功的网站在用Python做服务器开发，比如知乎，所以我就自然选择了Python。 于是我就开始了我充满着挫败感和成就感的编程之路…… 从8月到12月的四个月里，除去本来的工作，为了学习质量，我会保证平均每天4个小时的学习时间，周末也不例外。另外，所有的文档，问答都尽量看英文的，这可以帮你剩下大量的时间。12月13日，我做的网站上线了，3天时间大概有5000人访问了这个网站，我有时在后台看着日志，不免有些心潮喷涌，我想把自己的经验写下来，希望对于那些有心学习编程但无从下手的朋友提供一些帮助和鼓励。 1. 我的自学编程之路1）基础 刚开始的时候，我对搭建网站一无所知。为了给自己迅速建立一个框架，我在Google上面泡了整整一天，了解了HTML，CSS，JavaScript，Ajax，jQuery，React，SQL，服务器脚本等等知识，不求精通，只是了解每一项技术是干嘛的，另一方面建立起了一个学习的roadmap，这样大概知道做一个Web App需要哪些知识，分别学习的主次顺序。重点推荐两个资源： Python基础知识：Learn Python the Hard Way Web App基础知识：@张秋怡的答案写的通俗易懂，极力推荐。 有了这个roadmap，我明白了前端三大必须掌握技能HTML，CSS和JavaScript，花了大概10天左右把W3Schools上的教程全部过了一遍，然后试着写了几个网页，感觉自己写的很没有底气。于是根据知乎和豆瓣上的推荐，买了《JaveScript DOM》和《Head First HTML与CSS》，边看书边把例子过了一遍。 W3Schools: www.w3schools.com/ JavaScript：JavaScript DOM编程艺术 HTML &amp; CSS : Head First HTML与CSS（第2版） 前端是需要慢慢学习的，在看完上面的资料后，虽然能写出来一些挺漂亮的页面，但是我自己知道很多都是不符合标准的，更不要说代码风格什么的。这只能通过不断地积累和增加代码量来提高。由于明白服务器端需要耗费自己大量的时间，所以在发现自己能够按照构思勉强实现网页之后，我就把学习中心放到了服务器端上。不过每天还是会抽空写一写网页，避免手生。 2）服务器端 最先了解的是HTTP协议，也就是浏览器和服务器之间是如何通信的。也就是当你在浏览器里键入网址按下回车直到网页显示在你浏览器的这个过程中，浏览器和浏览器之间发生了什么事情。这是很有意思的内容，我是以读小说的心情了解了这部分内容。了解这部分后，你就会明白类似为什么有时候会有404页面？在百度搜索框里键入的搜索词是如何提交到百度服务器的？为什么重新登录知乎的时候就不用再输入密码了？之类的问题了。 HTTP协议学习资料：In Introduction to HTTP Basics @Vamei的博客：协议森林 了解了HTTP协议之后，我就多少有些入迷了。看似神秘难懂的现象其实原理并不复杂，你反而会被吸引。接下来就进入到我投入时间最多的部分了——后端开发。记得当时了解Web开发的MVC（Model-View-Controller）模式后，有一种心血喷涌的感觉，觉得太有意思了（程序员别喷，我就是这么没见过世面）。我们以知乎为例子来说明MVC是个啥： &lt; img src=”https://pic1.zhimg.com/50/v2-0f9a54678b79094188b7e281cc7ffd5e_hd.jpg“ data-rawwidth=”1029” data-rawheight=”623” class=”origin_image zh-lightbox-thumb” width=”1029” data-original=”https://pic1.zhimg.com/v2-0f9a54678b79094188b7e281cc7ffd5e_r.jpg“ &gt; 每个人的主页都是相同的布局和风格，例如最上面的菜单搜索栏，颜色分割，左边显示动态等，右边是个人信息等，然后具体的内容却因人而异——每个人的头像，名字，动态都是不一样的。那么知乎是如何保证每一个人看到的都是自己的主页呢？ 你可以把这个相同的布局想象成一个模板，里面有一个个空格子，当你用你的账户登陆页面时，想象你的电脑里有无数个小人根据你的账号从知乎后台的数据库里取出你的头像，动态，认证信息等等内容，然后对应着模板上规定好的位置，把对应的内容填进去。这些小人的动作实在是太快了，以至于你觉得这是在瞬间完成的。 上面所说的模板就是MVC中的V，是View的缩写，负责显示。这样做的好处在于，如果知乎有一天突然想改变一下个人主页的风格，那么只需要改变这一个模板，然后几千万注册用户的主页就相应的变化了，因为模板是公用的，是不是省了很多事情？（早期的Web开发可不是这样哟，你可能要一个个用户去改，非常麻烦。） 而这些小人除了摆放内容，它们真正负责的是业务逻辑，我们把他们叫做Controller，也就是MVC中的C。例如当你登陆的时候，这些小人要检查你的用户名是不是准确的，如果准确，它们要去数据库里取出你请求的信息等，如果用户名错误，它们要拦截住你的登陆。它们的职责还有很多，无法一一列举。在实际中，这些小人做的事情其实就是Python（或者其它脚本语言）做的事情。 最后，MVC中的Model其实就是传给View的数据，包括上面的头像，用户名，动态等因人而异的数据。这些数据在知乎服务器上是以数据库表格（table）的形式存在的，你可以把它们想象成很多不同的excel表格，不同的表格储存着不同的信息，有些记录着知乎用户的个人信息，有些记录着回答，有些记录着评论等等，而这些表格之间又彼此联系，当你在知乎的不同网页间跳转的时候，上面说的那些小人就根据你的要求，组合对应的表格取出对应的数据，然后把他们放到模板对应的空格里，发送给浏览器。然后浏览器根据你写的CSS，用不同的颜色，大小等等，将数据很漂亮的显示出来。 这样做的好处是什么呢？虽然你最终在浏览器里看到的是一个完整的页面，但是在后端逻辑上它们都是区分开的——模型（M），视图（V）和控制器（C）的区分就保证了较高的可维护性——我可以随时修改主页的显示并看到效果，同样我可以随时加入一些业务逻辑。 如果你的学习坚持到这里了，首先要恭喜你。其次你可能已经知道一些非常成熟的Python Web框架了，例如Django，Flask等等，并且你可能看到了很多小白教程教你直接使用，毕竟大部分人可能觉得没有必要重复造轮子。 本来为了省事，我也打算直接用框架。我是在设计数据库的时候，当时在看SQLAlchemy文档，觉得相对自己的项目SQLAlchemy太过复杂，所以我决定自己写自己的ORM（名词不懂没关系），这对于当时的我来说是一件难度非常大的事情。于是我投入了极大的精力每天都在看关于SQL和Python相关的教程和资料，Python核心编程（第二版） 给了我很大的启发。在自己完成了ORM后，又写了URL处理函数，同样没有用任何现成的Web框架。 现在回头看，我认为这一段时间的造轮子是提升编程能力最快的时候。比如为了写ORM，就必须去花很多时间学习SQL，去了解Python里面的metaclass，而如果用一个现成的框架，我很有可能偷懒不去关注某些细节。而不出问题还好，一旦出问题，我就只能跪。另外，造轮子迫使我在开始的时候就构思整个框架，因为我必须尽可能的考虑到所有的情况，于是就会不断的强迫自己完善知识体系，和别人的代码作对比从而改进自己的，这个过程充满了无尽的挫败感，但是得来的成就和快乐也是无可比拟的。 SQL书籍：Sams Teach Yourself MySQL in 21 Days Python：Python核心编程（第二版） Github上的优质Python资源：CodementorIO/Python-Learning-Resources 过程中还牵涉到部署，我的网站是跑在Linux上的。关于部署网上有非常多的优质教程，一搜一大把。这里就不再赘述。 这些是我学习大致路线，当然过程中充满着小的磕磕绊绊，虽然网站上线了，貌似运行还比较顺利，但是如果以一个程序员的标准来要求自己，自己依然非常菜鸟。不过我并没有以前那样惧怕技术了，就像你明白魔术的背后的原理后，会更多的思考原理本身。 2. 自学编程需要注意的问题很多人都推荐小白第一门语言选Python，因为语法简单。这句话只说了一半，Python确实容易上手，对初学者的门槛很低。但我发现，对于小白真正的门槛在于系统知识，这就和用什么语言完全没有任何关系了。例如很多人学完了Python的语法，觉得确实简单，但是转头去用Python标准库的时候，却发现自己连文档都看不懂。标准库提供了Python和其它系统功能的接口，最终实现了Python和系统之间的互动。读标准库需要系统知识，比如操作系统，数据库，进程和线程，socket编程，网络协议等等，这些对于编程小白来才构成很高的门槛，但是只有学会这些，才能真正发挥出Python的威力来。 这也是我觉得自己的经历对小白是有价值的一个原因。因为设计一个动态的网页是一个很不错的练手Project。建立网页（Web App）会逼迫你了解从你在浏览器里键入地址按下回车到网页显示在浏览器的过程中，浏览器，网络，服务器都干了些什么。具体到技术上面，你不得不去学习前端的HTML，CSS和JavaScript，后端的脚本，数据库，操作系统等。也就是说，这个过程能够促使你去主动学习上面提到的系统知识，如果你再做另外一个项目，你就不会像现在这样无从下手，而有能力去进行一些技术性的探讨，所以我认为这是一个非常好的练手项目。 1）一定要空出时间补充理论知识 很多人会强调learn by doing，边做项目边学习，这也是我自己采用的方式。在这种方式中，你不断犯错，改正……学习效率非常高。但是，很多人走了极端，最后的结果就是不注意理论知识的学习。你会发现自己Google的能力越来越高，但是真实的编程能力并没有得到提升。如果有这种情况，你需要反思一下。 一种可能是你太过于依赖各种成熟的框架，结果编程就变成了用「胶水」去粘合不同的框架完成需求。就好比你的Web App用了SQLAlchemy，虽然自己不太懂SQL，但是网站跑的也还不错。这时候如果数据库出现了问题，那你就只能跪了。 另外一种可能是你完全沉浸在做项目中，忽略了学习理论知识。做项目虽然充满困难，但回报是强烈的成就感，很容易沉浸其中。我觉得这是极其错误的。首先半路出家的程序员都没有经过系统的学习，没有形成自己的知识体系，如果你不懂数据结构，算法复杂度，操作系统这些理论，那么你能达到的高度就极其有限。所以，在每天做项目的同时，一定要保证抽出一定的时间，恶补理论知识。这部分的书单在豆瓣和知乎上都有很多总结，可以自行搜索。 2）不要太纠结于无意义的问题，比如什么框架好，XX语言比XX语言好啦这种问题。前期确定了练手项目，就去专心积累代码量，积累基础知识。那些你现在还看不懂的炫酷技术你慢慢也就能明白是怎么回事了，反而没有基础，再炫酷的框架对你而言都是天书。 3）学会发问。好问题是建立在你自己已经实践或者思考的基础上问出来的，这是对自己的负责，也是对别人的尊重。不要一遇到困难就喜欢直接上网搜索：「这个问题是怎么回事啊？」，「我不明白你能不能帮我看看……」。 4）学好英语。 THE END 最后，给自己打个广告，如果学英语，一定要关注我。 \\8A，如果学英语，一定要关注我。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"}],"tags":[]},{"title":"3k-5k","slug":"coding/3k-5k","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.753Z","comments":true,"path":"2018/01/01/coding/3k-5k/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/3k-5k/","excerpt":"","text":"1，python 语法+ 常用的标准库你要熟悉，比如，logging 2，python 常用的3方库你要熟悉，比如requests 3，linux 你要熟悉，大部分python程序都是在linux上跑的 4，根据你的业务，熟悉相关的框架，比如，数据分析，就pandas，numpy，web开发的话，flask，django，前端等等 5，数据结构+算法不能忘，常用的数据库，比如mysql","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"}],"tags":[]},{"title":"乔布斯","slug":"杂谈/乔布斯","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.693Z","comments":true,"path":"2018/01/01/杂谈/乔布斯/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/乔布斯/","excerpt":"","text":"This is the text of the Commencement address by Steve Jobs, CEO of Apple Computer and of Pixar Animation Studios, delivered on June 12, 2005. 以下为苹果公司和Pixar公司的CEO乔布斯于2005年6月12日在斯坦福大学发表的毕业演说。 I am honored to be with you today at your commencement from one of the finest universities in the world. I never graduated from college. Truth be told, this is the closest I’ve ever gotten to a college graduation. Today I want to tell you three stories from my life. That’s it. No big deal. Just three stories. 我今天很荣幸在这个世界上最好的大学之一的毕业典礼上和你们在一起.我从来没有从大学中毕业.说实话,今天也许是我在我的生命中离大学毕业最近的一天了. 今天我想向你们讲我生活中的三个故事. 不是什么大不了的事情,只是三个故事而已. The first story is about connecting the dots. 第一个故事是关于把生命中的点联系起来的. I dropped out of Reed College after the first 6 months, but then stayed around as a drop-in for another 18 months or so before I really quit. So why did I drop out? 我在Reed大学读了六个月之后就退学了,但是在十八个月以后我真正的作出决定退学之前,我还经常去学校.我为什么要退学呢? It started before I was born. My biological mother was a young, unwed college graduate student, and she decided to put me up for adoption. She felt very strongly that I should be adopted by college graduates, so everything was all set for me to be adopted at birth by a lawyer and his wife. Except that when I popped out they decided at the last minute that they really wanted a girl. So my parents, who were on a waiting list, got a call in the middle of the night asking: “We have an unexpected baby boy; do you want him?” They said: “Of course.” My biological mother later found out that my mother had never graduated from college and that my father had never graduated from high school. She refused to sign the final adoption papers. She only relented a few months later when my parents promised that I would someday go to college. 故事要从我出生的时候开始讲起.我的生物学意义上的母亲,那是一个年轻的, 没有结婚的大学毕业生. 她决定让别人收养我, 她十分想让我被大学毕业生收养. 所以在我出生的时候她已经为了我被一个律师和他的妻子收养做好了一切的准备工作. 但是她没有料到,当我被生出来的时候,律师夫妇突然决定他们想要一个女孩. 所以我的父母, 他们当时还在我的生物学意义上父母的候选名单上,突然在半夜接到了一个电话:”我们现在这儿有一个不小心生出来的男婴,你们想要他吗”他们回答道:”当然 “但是我的生物学意义上的母亲随后发现我的母亲从来没有从大学毕业,而我的父亲从来没有从高中毕业. 她拒绝签这个收养合同. 只是在几个月以后,我的父母答应她一定要让我上大学,那个时候她才同意. And 17 years later I did go to college. But I naively chose a college that was almost as expensive as Stanford, and all of my working-class parents’ savings were being spent on my college tuition. After six months, I couldn’t see the value in it. I had no idea what I wanted to do with my life and no idea how college was going to help me figure it out. And here I was spending all of the money my parents had saved their entire life. So I decided to drop out and trust that it would all work out OK. It was pretty scary at the time, but looking back it was one of the best decisions I ever made. The minute I dropped out I could stop taking the required classes that didn’t interest me, and begin dropping in on the ones that looked interesting. 在十七岁那年,我真的上了大学. 但是我很愚蠢的选了一个几乎和你们斯坦福大学一样贵的学校, 我的蓝领父母的所有积蓄都花在了我的学费上面. 在六个月后, 我已经看不到其中的价值. 我不知道我想要在我的生命中作甚么,我也不知道大学能怎么样帮助我找到这个问题的答案. 但是在这里我几乎花光了我父母这一辈子所有的积蓄. 所以我决定要退学,我觉对这是个正确的决定. 不能否认,我当时确实非常的害怕, 但是现在回头看看,那的确是我这一生中最棒的一个决定. 在我做出退学决定的那一刻, 我终于可以不必去上那些令我提不起丝毫兴趣的课程了. 然后我还可以去上上那些看起来有点意思的课程. It wasn’t all romantic. I didn’t have a dorm room, so I slept on the floor in friends’ rooms, I returned coke bottles for the 5¢ deposits to buy food with, and I would walk the 7 miles across town every Sunday night to get one good meal a week at the Hare Krishna temple. I loved it. And much of what I stumbled into by following my curiosity and intuition turned out to be priceless later on. Let me give you one example: 但是这并不是那么罗曼蒂克. 我失去了我的宿舍,所以我只能在朋友的房间的地板上面睡觉,我去捡5¢的可乐瓶子,仅仅为了吃饭, 在星期天的晚上,我可以走七英里穿过这个城市到Hare Krishna temple,只是为了在能吃上这个星期唯一一顿好一点的饭. 但是我喜欢. 我跟着我的直觉和好奇心走, 遇到的很多东西,在后来被证明是无价之宝. 让我给你们一个例子吧. Reed College at that time offered perhaps the best calligraphy instruction in the country. Throughout the campus every poster, every label on every drawer, was beautifully hand calligraphed. Because I had dropped out and didn’t have to take the normal classes, I decided to take a calligraphy class to learn how to do this. I learned about serif and san serif typefaces, about varying the amount of space between different letter combinations, about what makes great typography great. It was beautiful, historical, artistically subtle in a way that science can’t capture, and I found it fascinating. Reed大学在那时提供也许是全美最好的美术字课程. 在这个大学里面的每个海报, 每个抽屉的标签上面全都是漂亮的美术字. 因为我退学了, 没有受到正规的训练, 所以我决定去参加这个课程去学学怎么写出漂亮的美术字. 我学到了san serif 和serif字体, 我学会了怎么样在不同的字母组合之中改变空格的长度, 还有怎么样才能作出最棒的印刷式样 . 那是一种科学永远不能捕捉的美丽的,真实的,艺术的精妙, 我发现那实在是太美妙了. None of this had even a hope of any practical application in my life. But ten years later, when we were designing the first Macintosh computer, it all came back to me. And we designed it all into the Mac. It was the first computer with beautiful typography. If I had never dropped in on that single course in college, the Mac would have never had multiple typefaces or proportionally spaced fonts. And since Windows just copied the Mac, its likely that no personal computer would have them. If I had never dropped out, I would have never dropped in on this calligraphy class, and personal computers might not have the wonderful typography that they do. Of course it was impossible to connect the dots looking forward when I was in college. But it was very, very clear looking backwards ten years later. 当时看起来这些东西在我的生命中都好像没有什么实际应用的可能. 但是十年之后,当我们在设计第一台Macintosh电脑的时候,就不是那么回事了. 我把当时我学的那些家伙全都设计进了Mac. 那是第一台有着漂亮的印刷样式的电脑. 如果我当时没有退学, 就不会有机会去参加这个我感兴趣的美术字课程, Mac就不会有这么多的字体和字体中间适合的空间. 那么现在个人电脑就不会有现在这么美妙的印刷样式. 当然在我还在大学的时候是不可能向前看将这些点联系起来的,但是当我十年后回头看的时候, 真是非常,非常的清楚. Again, you can’t connect the dots looking forward; you can only connect them looking backwards. So you have to trust that the dots will somehow connect in your future. You have to trust in something — your gut, destiny, life, karma, whatever. This approach has never let me down, and it has made all the difference in my life. 再次要说的是,你在向前看的时候不可能将这些点联系起来;你只能在向后看的时候将这些点联系起来. 所以你必须相信这些点会在你的未来的某一天联系起来.你必须要相信某些东西, 你的勇气, 目的, 生命, 因缘. 这个过程永远不会让我倒下,只是让我的生命更加的与众不同而已. My second story is about love and loss. 我的第二个故事是关于爱和损失的. I was lucky — I found what I loved to do early in life. Woz and I started Apple in my parents garage when I was 20. We worked hard, and in 10 years Apple had grown from just the two of us in a garage into a $2 billion company with over 4000 employees. We had just released our finest creation — the Macintosh — a year earlier, and I had just turned 30. And then I got fired. How can you get fired from a company you started? Well, as Apple grew we hired someone who I thought was very talented to run the company with me, and for the first year or so things went well. But then our visions of the future began to diverge and eventually we had a falling out. When we did, our Board of Directors sided with him. So at 30 I was out. And very publicly out. What had been the focus of my entire adult life was gone, and it was devastating. 我非常幸运, 因为我在很早的时候就找到了我爱的东西. Woz和我在我二十岁的时候就在父母的车库里面开始了我们的苹果公司. 我们工作得很努力, 十年之后, 这个公司从只有在车库中的两个穷光蛋发展成了有超过四千雇员,价值超过二十亿的大公司. 在那时的前一年, 我们刚刚发布了我们最好的产品, 那就是Macintosh. 我也就要三十岁了. 在那个时候, 我被炒了鱿鱼. 你怎么可能会从你自己创立的公司被炒鱿鱼呢? 恩, 在苹果发展的时候我们雇了一个很有天分的家伙和我一起管理这个公司, 在最初的几年,公司运转的很好. 但是后来我们对未来的看法发生了分歧, 最终我们吵了起来. 当争吵发生的时候, 董事会站在了他那边. 所以在三十岁的时候, 我被炒了.在这么多人的眼皮下我被炒了.我整个成年之后生活的焦点离我而去, 这真是毁灭性的打击. I really didn’t know what to do for a few months. I felt that I had let the previous generation of entrepreneurs down - that I had dropped the baton as it was being passed to me. I met with David Packard and Bob Noyce and tried to apologize for screwing up so badly. I was a very public failure, and I even thought about running away from the valley. But something slowly began to dawn on me — I still loved what I did. The turn of events at Apple had not changed that one bit. I had been rejected, but I was still in love. And so I decided to start over 在最初的几个月里我真是不知道该做些什么. 我把之前创业者交给我的指挥棒给丢了, 我觉得我让那一代的创业者都很沮丧. 我和David Pack和Bob Boyce见面并试图向他们道歉. 我把事情弄得如此的糟糕. 但是我渐渐发现了曙光, 我仍然喜爱我作的这些东西. 苹果公司发生的这些事情丝毫的没有改变这些, 一个bit也没有. 我被驱逐了,但是我仍然在爱中. 所以我决定从头再来. I didn’t see it then, but it turned out that getting fired from Apple was the best thing that could have ever happened to me. The heaviness of being successful was replaced by the lightness of being a beginner again, less sure about everything. It freed me to enter one of the most creative periods of my life. 我当时没有看到, 但是事后证明, 从苹果公司被炒是我这辈子发生的最棒的事情. 作为一个成功者的极乐感觉被重新作为一个创业者的轻盈感觉所代替: 对任何事情都不那么肯定. 这让我觉得如此自由, 进入了我生命中最有创造力的一个阶段. During the next five years, I started a company named NeXT, another company named Pixar, and fell in love with an amazing woman who would become my wife. Pixar went on to create the worlds first computer animated feature film, Toy Story, and is now the most successful animation studio in the world. In a remarkable turn of events, Apple bought NeXT, I retuned to Apple, and the technology we developed at NeXT is at the heart of Apple’s current renaissance. And Laurene and I have a wonderful family together. 在接下来的五年里, 我创立了一个名叫NeXT的公司, 还有一个角Pixar的公司, 然后和一个将要成为我妻子的美妙的女人相识了. Pixar 制作了世界上第一个用电脑制作的动画电影 , “玩具总动员”, 现在是世界上最成功的工作室. 在后来的一系列转变中, Apple收购了NeXT, 然后我又回到了Apple. 我们在NeXT发展的技术在Apple的复兴之中发挥重要作用，我还和 Laurence 一起拥有了一个美妙的家庭. I’m pretty sure none of this would have happened if I hadn’t been fired from Apple. It was awful tasting medicine, but I guess the patient needed it. Sometimes life hits you in the head with a brick. Don’t lose faith. I’m convinced that the only thing that kept me going was that I loved what I did. You’ve got to find what you love. And that is as true for your work as it is for your lovers. Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it. And, like any great relationship, it just gets better and better as the years roll on. So keep looking until you find it. Don’t settle. 我可以非常肯定,如果我不从Apple被开除的话, 这些事情是一件也不会发生的. 这个药的味道实在是太苦了, 但是我想病人需要这个药. 有些时候, 生活会拿起一块转头向你的脑袋上猛拍一下. 不要失去信心. 我很清楚唯一使我一直走下去的就是我爱我所做的. 你需要去找到你所爱的东西. 对于工作是如此, 对于你的爱人也是如此. 你的工作将会在你的生活中占据很大的一部分. 你只有相信你所做的是伟大的工作, 你才能满足. 如果你现在还没有找到, 那么继续找. 不要停下来. 全心全意的去找, 当你找到的时候你会知道的. 就像任何伟大的关系一样, 随着岁月的流逝只会越来越好. 所以继续找直到你找到它. 不要停下来. My third story is about death. 我的第三个故事是相当于死亡的. When I was 17, I read a quote that went something like: “If you live each day as if it was your last, someday you’ll most certainly be right.” It made an impression on me, and since then, for the past 33 years, I have looked in the mirror every morning and asked myself: “If today were the last day of my life, would I want to do what I am about to do today?” And whenever the answer has been “No” for too many days in a row, I know I need to change something. 当我十七岁的时候, 我读到了一句像这样的话:”如果你把每天当作是你的最后一天去活的话,那么有一天你会发现你是正确的 .” 这句话给我留下了很深的印象. 从那是开始, 过了33年, 我在每天早晨都会在镜子中间看自己并且问自己:”如果今天是我生命中的最后一天, 你会不会完成你今天想做的事情呢 “. 当答案连续很多次是”不是”的时候, 我知道我需要改变某些事情了. Remembering that I’ll be dead soon is the most important tool I’ve ever encountered to help me make the big choices in life. Because almost everything — all external expectations, all pride, all fear of embarrassment or failure - these things just fall away in the face of death, leaving only what is truly important. Remembering that you are going to die is the best way I know to avoid the trap of thinking you have something to lose. You are already naked. There is no reason not to follow your heart. 记住我不久就将要死去是我遇到的最重要的工具. 他帮我组出生命中的重要的选择. 因为几乎所有的事情, 包括外部的期望, 所有的骄傲, 所有对难堪和失败的恐惧, 这些东西在死亡面前都会消失. 留下真正重要的东西让我看到.你有时候会思考你将会失去某些东西,记住你就要死去是我知道的避免这些想法的最好办法. 你已经赤身裸体了, 你没有理由不去跟随你自己的心. About a year ago I was diagnosed with cancer. I had a scan at 7:30 in the morning, and it clearly showed a tumor on my pancreas. I didn’t even know what a pancreas was. The doctors told me this was almost certainly a type of cancer that is incurable, and that I should expect to live no longer than three to six months. My doctor advised me to go home and get my affairs in order, which is doctor’s code for prepare to die. It means to try to tell your kids everything you thought you’d have the next 10 years to tell them in just a few months. It means to make sure everything is buttoned up so that it will be as easy as possible for your family. It means to say your goodbyes. 大概一年以前, 我被诊断有癌症. 我在早晨七点半做了一个检查, 检查清楚的显示在我的胰腺有一个肿瘤. 我当时都不知道胰腺是什么东西. 医生告诉我那很可能是一种无法治愈的癌症, 我还有三到六个月的时间活在这个世界上. 我的医生叫我回家, 然后整理好我的一切, 那就是医生准备死亡的程序. 那意味着你将要把未来十年对你小孩说的话在几个月里面说完. 那意味着把每件事情都搞定, 让你的家人会尽可能轻松的生活, 那意味着你要说byebye. I lived with that diagnosis all day. Later that evening I had a biopsy, where they stuck an endoscope down my throat, through my stomach and into my intestines, put a needle into my pancreas and got a few cells from the tumor. I was sedated, but my wife, who was there, told me that when they viewed the cells under a microscope the doctors started crying because it turned out to be a very rare form of pancreatic cancer that is curable with surgery. I had the surgery and I’m fine now. 我整天和那个诊断书一起生活. 后来有一天早上我作了一个活切片检查. 医生将一个内窥镜从我的喉咙,通过我的胃, 然后进入我的肠子, 用一根针在我的胰腺上的肿瘤上取了几个细胞. 我当时很镇静,因为我被服了镇定剂 但是我的妻子在那里, 后来告诉我当医生在显微镜地下观察这些细胞的时候他们开始尖叫, 因为这些细胞最后竟然是一种非常罕见的可以用手术治愈的胰腺癌症. 我做了这个手术, 现在我好了. This was the closest I’ve been to facing death, and I hope its the closest I get for a few more decades. Having lived through it, I can now say this to you with a bit more certainty than when death was a useful but purely intellectual concept: 那是我最接近死亡的时候, 我还希望这也是以后的几十年最接近的一次. 从中又活了过来, 我可以更肯定一点地的对你们说, 比死亡对我只是一个有用但是纯粹是知识上的概念地时候更加肯定一点地对你们说: No one wants to die. Even people who want to go to heaven don’t want to die to get there. And yet death is the destination we all share. No one has ever escaped it. And that is as it should be, because Death is very likely the single best invention of Life. It is Life’s change agent. It clears out the old to make way for the new. Right now the new is you, but someday not too long from now, you will gradually become the old and be cleared away. Sorry to be so dramatic, but it is quite true. 没有人愿意死, 即使人们想上天堂, 人们也不会为了去那里而死. 但是死亡是我们每个人都公有的终点. 从来没有人逃脱它. 也应该是这样. 因为死亡就是生命中最好的一个发明. 他将旧的清除以给新的让路. 你们现在是新的, 但是从现在开始之后不久, 你们将会逐渐的变成旧的然后被清除. 我很抱歉这很戏剧性, 但是这十分的真实. Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma — which is living with the results of other people’s thinking. Don’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary. 你们的时间很有限, 所以不要将他们浪费在过其他人的生活上. 不要被教条束缚,那意味着你和其他人思考的结果一起生活. 不要被其他人的观点的噪声掩盖你真正的内心的声音. 还有最重要的是, 你要有勇气去听从你直觉和心的指示. 他们在某种程度上知道你想要成为什么样子. 所有其他的事情都是其次的. When I was young, there was an amazing publication called The Whole Earth Catalog, which was one of the bibles of my generation. It was created by a fellow named Stewart Brand not far from here in Menlo Park, and he brought it to life with his poetic touch. This was in the late 1960’s, before personal computers and desktop publishing, so it was all made with typewriters, scissors, and polaroid cameras. It was sort of like Google in paperback form, 35 years before Google came along: it was idealistic, and overflowing with neat tools and great notions. 当我年轻的时候, 有一本惊人的出版物叫”整个地球的目录”, 是我们那一代人的圣经之一. 它是一个叫Stewart Brand 的家伙在离这里不远的Menlo Park弄的, 他诗一般地将这本书带到这个世界.那是在六十年代地后期, 在个人电脑出现之前, 所以这本书全是用打字机, 剪刀还有偏光镜制造地. 有点像用软皮包装地google, 在google出现三十五年之前: 这是理想主义地,, 其中有许多灵巧地工具和伟大的想法. Stewart and his team put out several issues of The Whole Earth Catalog, and then when it had run its course, they put out a final issue. It was the mid-1970s, and I was your age. On the back cover of their final issue was a photograph of an early morning country road, the kind you might find yourself hitchhiking on if you were so adventurous. Beneath it were the words: “Stay Hungry. Stay Foolish.” It was their farewell message as they signed off. Stay Hungry. Stay Foolish. And I have always wished that for myself. And now, as you graduate to begin anew, I wish that for you. Stewart和他的伙伴出版了几期的”整个地球的目录”, 当它完成了自己的使命的时候, 他们作出了最后一期的目录. 那是在七十年代的中期, 你们的时代. 在最后一期的封底上清晨乡村公路的照片, 如果你有冒险精神的话你可以自己找到这种路的. 在照片之下有这样一段话:”保持饥饿,保持愚蠢”.这是他们停止发行的告别语. 保持饥饿,保持愚蠢. 我总是希望自己能够那样,现在, 在你们将要毕业开始新的旅程的时候, 我也希望你们能这样. Stay Hungry. Stay Foolish. 保持饥饿,保持愚蠢. y Foolish. 保持饥饿,保持愚蠢.","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"index","slug":"index","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.683Z","comments":true,"path":"2018/01/01/index/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/index/","excerpt":"","text":"Note of Life请遵守相关法律法规，本人不承担技术滥用责任。 切记，不要违法，仅供技术交流。 世界上并没有路，走的人多了，便成了路 —鲁迅 如果你没有宗教信仰 ，那么你就需要有自己的哲学思考体系 否则，你无法生存 — scavenger 思考过的东西，才是你的 在这个时代我们接触到的大多数充其量只是信息，而不是知识 — 乔布斯 一个人, 如果极力宣扬他自己都不信的东西, 那他就是做好了干任何坏事的准备 — 托马斯潘恩 An idea must be simple enough to be incepted —盗梦空间 只有简单的念头才容易被植入 Heaven or hill depends on you 自学无疑是寂寞的。编程学习耗时较长，如何保证在这个阶段能坚持下去？ 我们知道很多人都能对游戏产生强烈的兴趣、愿意为之投入时间，这其中的秘密就是游戏的奖励规则。杀死一个怪物就能得到一些金币，通过完成任务获得满足感，通过关卡的设计产生持续吸引力，进而形成正向的反馈。 其实学习编程也一样，实现一小段程序并运行，足以让人感到成就感和满足，借鉴这个简单的心理学技巧，定期给自己设定一些有实际意义但是不太难的目标和任务。太难会让人失去耐心，太简单又很无聊，最好设定一个跳起来刚好摸得着的任务。每完成一个目标就给予自己奖励，可以是完成任务的成就感，也可以是其他的物质奖励。 Ideas worth spreading在这个信息爆炸的时代 我们要学会忽略一些东西","categories":[],"tags":[]},{"title":"chromium_socks","slug":"coding/TIPS/chromium_socks","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.756Z","comments":true,"path":"2018/01/01/coding/TIPS/chromium_socks/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/chromium_socks/","excerpt":"","text":"Configuring a SOCKS proxy server in ChromeTo configure chrome to proxy traffic through the SOCKS v5 proxy server *myproxy:8080*, launch chrome with these two command-line flags: 12--proxy-server=&quot;socks5://myproxy:8080&quot;--host-resolver-rules=&quot;MAP * ~NOTFOUND , EXCLUDE *myproxy*&quot; Explanation The –proxy-server=”socks5://myproxy:8080” flag tells Chrome to send all http:// and https:// URL requests through the SOCKS proxy server “myproxy:8080”, using version 5 of the SOCKS protocol. The hostname for these URLs will be resolved by the proxy server, and not locally by Chrome. NOTE: proxying of ftp:// URLs through a SOCKS proxy is not yet implemented. The –proxy-server flag applies to URL loads only. There are other components of Chrome which may issue DNS resolves directly and hence bypass this proxy server. The most notable such component is the “DNS prefetcher”.Hence if DNS prefetching is not disabled in Chrome then you will still see local DNS requests being issued by Chrome despite having specified a SOCKS v5 proxy server. Disabling DNS prefetching would solve this problem, however it is a fragile solution since once needs to be aware of all the areas in Chrome which issue raw DNS requests. To address this, the next flag, –host-resolver-rules=”MAP * ~NOTFOUND , EXCLUDE myproxy”, is a catch-all to prevent Chrome from sending any DNS requests over the network. It says that all DNS resolves are to be simply mapped to the (invalid) address 0.0.0.0. The “EXCLUDE” clause make an exception for “myproxy”, because otherwise Chrome would be unable to resolve the address of the SOCKS proxy server itself, and all requests would necessarily fail with PROXY_CONNECTION_FAILED. Debugging There are a lot of intricacies to configuring proxy settings as you intend: Different profiles can use different proxy settings Extensions can modify the proxy settings If using the system setting, other applications can change them, and there can be per-connection settings. The proxy settings might include fallbacks to other proxies, or direct connections Plugins (for instance Flash and Java applets) can bypass the Chrome proxy settings alltogether Other third-party components in Chrome might issue DNS resolves directly, or bypass Chrome’s proxy settings. The first thing to check when debugging is look at the Proxy tab on about:net-internals, and verify what the effective proxy settings are: chrome://net-internals/#proxy Next, take a look at the DNS tab of about:net-internals to make sure Chrome isn’t issuing local DNS resolves: chrome://net-internals/#dns Next, to trace the proxy logic for individual requests in Chrome take a look at the Events tab of about:net-internals: https://www.chromium.org/developers/design-documents/network-stack/socks-proxy","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"fix_virtualbox_Kernel_Driver_Not_Installed","slug":"coding/TIPS/fix_virtualbox_Kernel_Driver_Not_Installed","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/fix_virtualbox_Kernel_Driver_Not_Installed/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/fix_virtualbox_Kernel_Driver_Not_Installed/","excerpt":"","text":"After a fresh VirtualBox installation on Manjaro linux, you may run into this error message “Kernel driver not installed (rc=-1908) The VirtualBox Linux kernel driver (vboxdrv) is either not loaded or there is a permission problem with /dev/vboxdrv.” Run these commands to fix (First one gives you the precise version of the 2nd.. if you have linux kernel 4.16 then pacman linux416)uname -rsudo pacman -S linux414-virtualbox-host-modulessudo modprobe vboxdrv And finally restart virtualbox from https://www.youtube.com/watch?v=2_H62iUxVj8","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"arch安装mysql","slug":"coding/TIPS/arch安装mysql","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.763Z","comments":true,"path":"2018/01/01/coding/TIPS/arch安装mysql/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/arch安装mysql/","excerpt":"","text":"Archlinux 选择的 MySQL 实现被称为 MariaDB123456sudo pacman -S mariadb# 安装软件包后 必须运行下面的命令mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysqlsystemctl start mariadbmysql_secure_installationsystemctl restart mariadb https://wiki.archlinux.org/index.php/MySQL_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"linux_声音输出_HDMI","slug":"coding/TIPS/linux_声音输出_HDMI","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/linux_声音输出_HDMI/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/linux_声音输出_HDMI/","excerpt":"","text":"pulseaudiopavucontrol","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"markdown插入图片","slug":"coding/TIPS/markdown插入图片","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/markdown插入图片/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/markdown插入图片/","excerpt":"","text":"将图片嵌入Markdown文档中一直是一个比较麻烦的事情。通常的做法是将图片存入本地某个路径或者网络存储空间，使用URL链接的形式插入图片： 1![image][url_to_image] 这样做一个明显的麻烦之处在于处理图片与Markdown文档的一致性上。如果我们要拷贝文档，或者图片遭到误删/云端链接失效，就会变得不便。最让我们省心的方法便是将图片直接放到文档内部。 一个将图片嵌入文档中的方法是使用base64编码。步骤比较简单： 将图片或截图保存在本地； 使用在线工具将图片转码至base64编码；(link1,link2)； 在文档中插入编码： 1![image][data:image/png;base64, ......] 当然base64编码一般很长，直接将编码放入段落内部会影响正常编辑。通常的做法是将base64编码定义到一个中间变量中，将编码本体放到文档末： 123![image][tmp]your document here ...[tmp]:data:image/png;base64, ...... 使用该技巧的时候需要注意，并不是所有的Markdown编辑器都支持这种方法。而且一些Markdown编辑器只支持特定的图片格式。如有道云笔记只支持png格式的图片编码。需要在保存图片文件的时候加以注意。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"pycharm_注册","slug":"coding/TIPS/pycharm_注册","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.763Z","comments":true,"path":"2018/01/01/coding/TIPS/pycharm_注册/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/pycharm_注册/","excerpt":"","text":"windows hosts path 1c:\\windows\\system32\\drivers\\etc linux hosts path 1/etc/hosts 0.0.0.0 account.jetbrains.com 注册码 http://idea.lanyus.com/","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"pacman_常见命令","slug":"coding/TIPS/pacman_常见命令","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.763Z","comments":true,"path":"2018/01/01/coding/TIPS/pacman_常见命令/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/pacman_常见命令/","excerpt":"","text":"在 Archlinux 中，使用一条命令即可对整个系统进行更新：pacman -Syu如果你已经使用pacman -Sy将本地的包数据库与远程的仓库进行了同步，也可以只执行：pacman -Su安装包➔ pacman -S 包名：例如，执行 pacman -S firefox 将安装 Firefox。你也可以同时安装多个包，只需以空格分隔包名即可。➔ pacman -Sy 包名：与上面命令不同的是，该命令将在同步包数据库后再执行安装。➔ pacman -Sv 包名：在显示一些操作信息后执行安装。➔ pacman -U：安装本地包，其扩展名为 pkg.tar.gz。➔ pacman -U http://www.example.com/repo/example.pkg.tar.xz 安装一个远程包（不在 pacman 配置的源里面）删除包➔ pacman -R 包名：该命令将只删除包，保留其全部已经安装的依赖关系➔ pacman -Rs 包名：在删除包的同时，删除其所有没有被其他已安装软件包使用的依赖关系➔ pacman -Rsc 包名：在删除包的同时，删除所有依赖这个软件包的程序➔ pacman -Rd 包名：在删除包时不检查依赖。搜索包➔ pacman -Ss 关键字：在仓库中搜索含关键字的包。➔ pacman -Qs 关键字： 搜索已安装的包。➔ pacman -Qi 包名：查看有关包的详尽信息。➔ pacman -Ql 包名：列出该包的文件。其他用法➔ pacman -Sw 包名：只下载包，不安装。➔ pacman -Sc：清理未安装的包文件，包文件位于 /var/cache/pacman/pkg/ 目录。➔ pacman -Scc：清理所有的缓存文件。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"shadowsocks_python","slug":"coding/TIPS/shadowsocks_python","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.766Z","comments":true,"path":"2018/01/01/coding/TIPS/shadowsocks_python/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/shadowsocks_python/","excerpt":"","text":"安装12sudo pacman -S python-pipsudo pacman -S shadowsocks 创建配置文件12mkdir /etc/shadowsocksvim /etc/shadowsocks/config.json （一定要在这个目录下） 单用户12345678910&#123;&quot;server&quot;:&quot;&quot;, ##填写服务器外网ip地址，ip也可以写内网地址，只要能转发出来即可。&quot;server_port&quot;:8000,&quot;local_address&quot;:&quot;127.0.0.1&quot;,&quot;local_port&quot;:1080,&quot;password&quot;:&quot;&quot;,&quot;timeout&quot;:300,&quot;method&quot;:&quot;aes-256-cfb&quot;,&quot;fast_open&quot;:false&#125; 多用户123456789101112&#123;&quot;server&quot;:&quot;&quot;,&quot;local_address&quot;:&quot;127.0.0.1&quot;,&quot;local_port&quot;:1080,&quot;port_password&quot;:&#123;&quot;8000&quot;:&quot;123456&quot;,&quot;8001&quot;:&quot;123456&quot;&#125;,&quot;timeout&quot;:300,&quot;method&quot;:&quot;aes-256-cfb&quot;,&quot;fast_open&quot;:false&#125; 启动/关闭 服务12ssserver -c /etc/shadowsocks/config.json -d start 后台启动ssserver -c /etc/shadowsocks/config.json -d stop 后台停止用户 设置开机启动将启动的命令加入到/etc/rc.local文件的最后 1vi /etc/rc.local 设置非root用户运行ss12sudo useradd ssuser //添加一个ssuser用户sudo ssserver [other options] --user ssuser //用ssuser这个用户来运行ss https://thief.one/2017/02/22/Shadowsocks%E6%8A%98%E8%85%BE%E8%AE%B0/","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"python_virtualenv","slug":"coding/TIPS/python_virtualenv","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.756Z","comments":true,"path":"2018/01/01/coding/TIPS/python_virtualenv/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/python_virtualenv/","excerpt":"","text":"首先，我们用pip安装virtualenv：1$ pip3 install 我们用pip安装virtualenv 然后，假定我们要开发一个新的项目，需要一套独立的Python运行环境，可以这么做：第一步，创建目录： 123Mac:~ michael$ mkdir myprojectMac:~ michael$ cd myproject/Mac:myproject michael$ 第二步，创建一个独立的Python运行环境，命名为venv： 12345Mac:myproject michael$ virtualenv --no-site-packages venvUsing base prefix &apos;/usr/local/.../Python.framework/Versions/3.4&apos;New python executable in venv/bin/python3.4Also creating executable in venv/bin/pythonInstalling setuptools, pip, wheel...done. 启动虚拟环境12Mac:myproject michael$ source venv/bin/activate(venv)Mac:myproject michael$ 退出虚拟环境 12(venv)Mac:myproject michael$ deactivate Mac:myproject michael$ 小结virtualenv为应用提供了隔离的Python运行环境，解决了不同应用间多版本的冲突问题。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"virtualbox中linux与宿主windwos共享文件夹设置","slug":"coding/TIPS/virtualbox中linux与宿主windwos共享文件夹设置","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.763Z","comments":true,"path":"2018/01/01/coding/TIPS/virtualbox中linux与宿主windwos共享文件夹设置/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/virtualbox中linux与宿主windwos共享文件夹设置/","excerpt":"","text":"进入虚拟Ubuntu，在命令行终端下输入：12创建挂载文件夹sudo mkdir /mnt/shared 挂载 1sudo mount -t vboxsf share /mnt/shared 其中”share”是之前创建的共享文件夹的名字 要想自动挂载的话，可以在/etc/fstab中添加一项1share /mnt/shared vboxsf rw,gid=100,uid=1000,auto 0 0 卸载的话使用下面的命令：1sudo umount -f /mnt/shared","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"openssl_shadowsocks_undefined_symbol","slug":"coding/TIPS/openssl_shadowsocks_undefined_symbol","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/openssl_shadowsocks_undefined_symbol/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/openssl_shadowsocks_undefined_symbol/","excerpt":"","text":"解决openssl升级到1.1.0以上版本，导致shadowsocks2.8.2启动报undefined symbol: EVP_CIPHER_CTX_cleanup错误最近将openssl升级到了1.1.0b版本，编译之后shadowsocks无法启动，报错如下： 12345678910111213141516171819202122232425Traceback (most recent call last): File \"/usr/bin/ssserver\", line 9, in load_entry_point('shadowsocks==2.8.2', 'console_scripts', 'ssserver')() File \"/usr/lib/python2.7/site-packages/shadowsocks/server.py\", line 34, in main config = shell.get_config(False) File \"/usr/lib/python2.7/site-packages/shadowsocks/shell.py\", line 262, in get_config check_config(config, is_local) File \"/usr/lib/python2.7/site-packages/shadowsocks/shell.py\", line 124, in check_config encrypt.try_cipher(config['password'], config['method']) File \"/usr/lib/python2.7/site-packages/shadowsocks/encrypt.py\", line 44, in try_cipher Encryptor(key, method) File \"/usr/lib/python2.7/site-packages/shadowsocks/encrypt.py\", line 83, in __init__ random_string(self._method_info[1])) File \"/usr/lib/python2.7/site-packages/shadowsocks/encrypt.py\", line 109, in get_cipher return m[2](method, key, iv, op) File \"/usr/lib/python2.7/site-packages/shadowsocks/crypto/openssl.py\", line 76, in __init__ load_openssl() File \"/usr/lib/python2.7/site-packages/shadowsocks/crypto/openssl.py\", line 52, in load_openssl libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,) File \"/usr/lib64/python2.7/ctypes/__init__.py\", line 373, in __getattr__ func = self.__getitem__(name) File \"/usr/lib64/python2.7/ctypes/__init__.py\", line 378, in __getitem__ func = self._FuncPtr((name_or_ordinal, self))AttributeError: /usr/local/ssl/lib/libcrypto.so.1.1: undefined symbol: EVP_CIPHER_CTX_cleanupshadowsocks start failed 这个问题是由于在openssl1.1.0版本中，废弃了EVP_CIPHER_CTX_cleanup函数，如官网中所说： EVP_CIPHER_CTX was made opaque in OpenSSL 1.1.0. As a result, EVP_CIPHER_CTX_reset() appeared and EVP_CIPHER_CTX_cleanup() disappeared. EVP_CIPHER_CTX_init() remains as an alias for EVP_CIPHER_CTX_reset(). EVP_CIPHER_CTX_reset函数替代了EVP_CIPHER_CTX_cleanup函数 EVP_CIPHER_CTX_reset函数说明： EVP_CIPHER_CTX_reset() clears all information from a cipher context and free up any allocated memory associate with it, except the ctx itself. This function should be called anytime ctx is to be reused for another EVP_CipherInit() / EVP_CipherUpdate() / EVP_CipherFinal() series of calls. EVP_CIPHER_CTX_cleanup函数说明： EVP_CIPHER_CTX_cleanup() clears all information from a cipher context and free up any allocated memory associate with it. It should be called after all operations using a cipher are complete so sensitive information does not remain in memory. 可以看出，二者功能基本上相同，都是释放内存，只是应该调用的时机稍有不同，所以用reset代替cleanup问题不大。 用vi打开文件：vi /usr/lib/python2.7/site-packages/shadowsocks/crypto/openssl.py 跳转到52行（shadowsocks2.8.2版本，其他版本搜索一下cleanup） 进入编辑模式 将第52行libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)改为libcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,) 再次搜索cleanup（全文件共2处，此处位于111行），将libcrypto.EVP_CIPHER_CTX_cleanup(self._ctx)改为libcrypto.EVP_CIPHER_CTX_reset(self._ctx) 保存并推出 启动shadowsocks服务：service shadowsocks start 之后我们就可以继续愉快的、科学的畅游互联网了。提示：openssl1.1.0目前兼容性很不好，大部分的软件都不支持目前支持的有nginx-1.11.5、curl-7.50.3不支持的有PHP-7.0.12、openssh-7.3p1所以如果决定使用openssl1.1.0需要考虑很多兼容问题，必须保留1.0.2或1.0.1(不推荐，存在一些已知漏洞，最重要的是如果服务器要开http2，由于新版chrome必须使用ALPN的限制，只有1.0.2版本支持ALPN，所以必须升级到1.0.2)版本以便编译其他程序。 https://blog.lyz810.com/article/2016/09/shadowsocks-with-openssl-greater-than-110/","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"异步同步","slug":"coding/TIPS/异步同步","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.766Z","comments":true,"path":"2018/01/01/coding/TIPS/异步同步/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/异步同步/","excerpt":"","text":"老张爱喝茶，废话不说，煮开水。 出场人物：老张，水壶两把（普通水壶，简称水壶；会响的水壶，简称响水壶）。 1 .老张把水壶放到火上，立等水开。（同步阻塞） 老张觉得自己有点傻 2 .老张把水壶放到火上，去客厅看电视，时不时去厨房看看水开没有。（同步非阻塞） 老张还是觉得自己有点傻，于是变高端了，买了把会响笛的那种水壶。水开之后，能大声发出嘀~~~~的噪音。 \\3. 老张把响水壶放到火上，立等水开。（异步阻塞） 老张觉得这样傻等意义不大 4 .老张把响水壶放到火上，去客厅看电视，水壶响之前不再去看它了，响了再去拿壶。（异步非阻塞） 老张觉得自己聪明了。 所谓同步异步，只是对于水壶而言。 普通水壶，同步；响水壶，异步。 虽然都能干活，但响水壶可以在自己完工之后，提示老张水开了。这是普通水壶所不能及的。 同步只能让调用者去轮询自己（情况2中），造成老张效率的低下。 所谓阻塞非阻塞，仅仅对于老张而言。 立等的老张，阻塞；看电视的老张，非阻塞。 情况1和情况3中老张就是阻塞的，媳妇喊他都不知道。虽然3中响水壶是异步的，可对于立等的老张没有太大的意义。所以一般异步是配合非阻塞使用的，这样才能发挥异步的效用。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"shandowsocks_一键脚本","slug":"coding/TIPS/shandowsocks_一键脚本","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/shandowsocks_一键脚本/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/shandowsocks_一键脚本/","excerpt":"","text":"wget -N –no-check-certificate https://softs.loan/Bash/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"推荐soft_ware","slug":"coding/TIPS/推荐soft_ware","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/推荐soft_ware/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/推荐soft_ware/","excerpt":"","text":"phone sper su 支付宝 微信 qq village bilibili 京东 淘宝 缤纷英语 翻译 tiki youtube wifi密码 影梭 pinter wiki 高德地图 食物库 wps sd mail 画吧 computer YAOURTdeepin-screenshot deepin-screen-recorder deepin-voice-recorder google-chrome xmind 二进制virtualbox typora pycharm npmnpm install -g gitbook-cli npm install -g gitbook-summary PAC中文字体 pacman -S wqy-microhei ttf-dejavu ttf-droid cantarell-fonts adobe-source-han-sans-cn-fonts wqy-microhei ttf-dejavu wqy-zenhei wqy-microhei firefox atom dbeaver evince cheese shadowsocks filezilla cheese shadowsocks filezilla","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"生成源文件","slug":"coding/TIPS/生成源文件","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/生成源文件/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/生成源文件/","excerpt":"","text":"生成可用中国镜像站列表： 1sudo pacman-mirrors -i -c China -m rank https://mirrors.ustc.edu.cn/help/manjaro.html","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"终端代理","slug":"coding/TIPS/终端代理","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.763Z","comments":true,"path":"2018/01/01/coding/TIPS/终端代理/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/终端代理/","excerpt":"","text":"让终端走代理的几种方法 Mac proxy terminal （2017.9.17更新） 方法1:在终端中直接运行命令 1export http_proxy=http://proxyAddress:port 这个办法的好处是简单直接，并且影响面很小（只对当前终端有效，退出就不行了）。 如果你用的是ss代理，在当前终端运行以下命令，那么wget curl 这类网络命令都会经过ss代理 1export ALL_PROXY=socks5://127.0.0.1:1080 方法2:把代理服务器地址写入shell配置文件.bashrc或者.zshrc 直接在.bashrc或者.zshrc添加下面内容 12export http_proxy=&quot;http://localhost:port&quot;export https_proxy=&quot;http://localhost:port&quot; 以使用shadowsocks代理为例，ss的代理端口为1080,那么应该设置为 12export http_proxy=&quot;socks5://127.0.0.1:1080&quot;export https_proxy=&quot;socks5://127.0.0.1:1080&quot; 或者直接设置ALL_PROXY 1export ALL_PROXY=socks5://127.0.0.1:1080 localhost就是一个域名，域名默认指向 127.0.0.1，两者是一样的。 然后ESC后:wq保存文件，接着在终端中执行source ~/.bashrc 或者退出当前终端再起一个终端。 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。 或者通过设置alias简写来简化操作，每次要用的时候输入setproxy，不用了就unsetproxy。 123alias setproxy=&quot;export ALL_PROXY=socks5://127.0.0.1:1080&quot;alias unsetproxy=&quot;unset ALL_PROXY&quot;alias ip=&quot;curl -i http://ip.cn&quot; 方法3:改相应工具的配置，比如apt的配置 1sudo vim /etc/apt/apt.conf 在文件末尾加入下面这行 1Acquire::http::Proxy &quot;http://proxyAddress:port&quot; 保存apt.conf文件即可。关于apt的代理设置可以参考这里 关于git的代理设置看这里:用shadowsocks加速git clone 方法4(推荐):利用proxychains在终端使用socks5代理 补充：如果代理服务器需要登陆，这时可以直接把用户名和密码写进去 12http_proxy=http://userName:password@proxyAddress:port```word@proxyAddress:port","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"豆瓣源","slug":"coding/TIPS/豆瓣源","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/豆瓣源/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/豆瓣源/","excerpt":"","text":"1sudo pip install -i https://pypi.doubanio.com/simple/ --trusted-host pypi.doubanio.com","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"软件开发流程","slug":"coding/TIPS/软件开发流程","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.766Z","comments":true,"path":"2018/01/01/coding/TIPS/软件开发流程/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/软件开发流程/","excerpt":"","text":"软件开发流程我们已经经历了开发一款软件的流程中的各个阶段（Phases）。现在可以将这些阶段总结如下：What/做什么（分析）How/怎么做（设计）Do It/开始做（执行）Test/测试（测试与修复错误）Use/使用（操作或开发）Maintain/维护（改进）编写程序时推荐的一种方式是遵循我们在编写备份脚本时所经历的步骤：进行分析与设计；开始实现一个简单版本；测试并修复错误；开始使用以确保工作状况皆如期望那般。现在，你可以添加任何你所希望拥有的功能，并继续去重复这一“开始做—测试—使用”循环，需要做多少次就去做多少次。要记住： 程序是成长起来的，不是搭建出来的。 （Software is grown, not built.） ——Bill de hÓra+ 完事开头难，千里之行始于足下。为啥要学习python 1、python是一门容易人们的语言，便于快速学习，快速应用到业务上。 2、python 有丰富的自带标准库和大量的第三方库。 3、python应用广泛。 （1）web开发。 （2）爬虫。 （3）linux下网络编程、特别是高并发服务端设计（高并发大流量分布式服务器后台开发）。 （2）机器学习和数据挖掘； （3）图像处理、游戏开发等。 （4）云计算。 （5）ERP。 (6) 科学计算、生物计算。 (7) 运维自动化。 (8)测试自动化等等方面。 4、学习python可以让一些想从事IT行业的朋友，通过学习python学会编程，快速进入到IT行业。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"http请求的过程","slug":"coding/django/http请求的过程","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.753Z","comments":true,"path":"2018/01/01/coding/django/http请求的过程/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/django/http请求的过程/","excerpt":"","text":"我们打开浏览器，在地址栏输入想访问的网址，比如 http://zmrenwu.com/（当然你也可能从收藏夹里直接打开网站，但本质上都是一样的）。 浏览器知道我们想要访问哪个网址后，它在后台帮我们做了很多事情。主要就是把我们的访问意图包装成一个 HTTP 请求，发给我们想要访问的网址所对应的服务器。通俗点说就是浏览器帮我们通知网站的服务器，说有人来访问你啦，访问的请求都写在 HTTP 里了，你按照要求处理后告诉我，我再帮你回应他！ 服务器处理了HTTP 请求，然后生成一段 HTTP 响应给浏览器。浏览器解读这个响应，把相关的内容在浏览器里显示出来，于是我们就看到了网站的内容。比如你访问了我的博客主页 http://zmrenwu.com/，服务器接收到这个请求后就知道用户访问的是首页，首页显示的是全部文章列表，于是它从数据库里把文章数据取出来，生成一个写着这些数据的 HTML 文档，包装到 HTTP 响应里发给浏览器，浏览器解读这个响应，把 HTML 文档显示出来，我们就看到了文章列表的内容。 因此，Django 作为一个 Web 框架，它的使命就是处理流程中的第二步。即接收浏览器发来的 HTTP 请求，返回相应的 HTTP 响应。于是引出这么几个问题： Django 如何接收 HTTP 请求？ Django 如何处理这个 HTTP 请求？ Django 如何生成 HTTP 响应？ 对于如何处理这些问题，Django 有其一套规定的机制。我们按照 Django 的规定，就能开发出所需的功能。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"django","slug":"coding/django","permalink":"http://blog.scavenger.top/categories/coding/django/"}],"tags":[]},{"title":"some_command","slug":"coding/django/some_command","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.753Z","comments":true,"path":"2018/01/01/coding/django/some_command/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/django/some_command/","excerpt":"","text":"some command 建立应用 1python manage.py startapp blog 迁移数据库 1python manage.py makemigrations Django 在 应用的 migrations\\ 目录下生成了一个 0001_initial.py 文件，这个文件是 Django 用来记录我们对模型做了哪些修改的文件 1python manage.py migrate Django 通过检测应用中 migrations\\ 目录下的文件，得知我们对数据库做了哪些操作，然后它把这些操作翻译成数据库操作语言，从而把这些操作作用于真正的数据库。 1python manage.py sqlmigrate blog 0001 输出Django 翻译后执行的数据库语句","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"django","slug":"coding/django","permalink":"http://blog.scavenger.top/categories/coding/django/"}],"tags":[]},{"title":"优达城_deep_learning大纲","slug":"coding/python/优达城_deep_learning大纲","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.766Z","comments":true,"path":"2018/01/01/coding/python/优达城_deep_learning大纲/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/python/优达城_deep_learning大纲/","excerpt":"","text":"课程大纲与实战项目“深度学习”纳米学位项目分为”第一学期”与”第二学期”。 深度学习第一学期一站式掌握入门深度学习所需的数学与编程基础，迈出成为深度学习工程师的第一步。 深度学习第二学期亲手打造翻译机器人、生成明星人脸、预测共享单车使用量等高级应用。 深度学习第一学期课程大纲 第一部分：Python 语法与数据结构 在这个部分，你将了解 Python 的整数和字符串数据类型，学会使用变量存储数据，掌握使用内置的函数和方法。你将会学习条件语句，循环语句完成复杂的统计。同时你将学会使用集合数据类型，包括列表、集合和字典等多种数据结构。 实战项目－分析电话和短信记录 在这个项目中，你将会挑战一个数据分析的任务。你会应用你在课程中学到的数据结构，字符串处理，循环等技巧，从电话和短信记录的数据中发现一些端倪。 第二部分：Python 文件与网络 你会使用 Python 标准库和第三方库中的模块，认识 Python 强大的库。并学会读取磁盘上的文件中的数据，使用在线资源解决实际问题。最后你将练习编写一个网络抓取程序来跟踪维基百科文章之间的链接。 实战项目－探索美国共享单车数据 你需要借助Python完成对美国 3 个城市的共享单车行程数据的数据分析。你将编写代码来清理数据，计算描述性统计数据，并实现数据分布的基本可视化。 第三部分：数据分析入门 学习使用 Python 了解数据分析流程的主要步骤，运用 Python 和 Pandas 处理多个数据集；并通过两个数据分析实战案例，学习使用 Python、Numpy 和 Pandas 进行数据清洗、探索、分析和可视化。 实战项目－线性代数 通过代码实现一个矩阵求逆，更深刻的理解线性代数的本质。 第四部分：线性代数基础 线性代数是深度神经网络的基础。在这一部分中，你将从0基础开始学习线性代数中的向量以及交点知识以及实现向量的基本操作。 实战项目－探索数据集 在本项目中，你将分析一个数据集，然后表述你的心得体会。你将使用 Python 库 NumPy、Pandas 和 Matplotlib 来使你的分析工作更加轻松。 第五部分：模型的评估与验证 模型的评价指标是深度学习建模过程中非常重要的一环。在这一部分中，你将学习如何衡量深度学习模型以及其他机器学习模型好坏。 实战项目－预测未来房价 运用机器学习原理与基础统计分析工具针对房地产数据建立一个模型、评估模型的表现好坏并利用这个模型预测未来房价。 深度学习第二学期课程大纲 第一部分：深度学习简介 了解你将在这门课程中学到什么，探索深度学习网络在不同领域的应用，你还将通过一系列简短的课程，踏出你深度学习的第一步，学习使用深度学习相关工具，如 Anaconda 和 Jupyter notebooks。 第二部分：神经网络 神经网络是深度学习的基石。在这部分课程中，你将学习神经网络的基本原理，并在实战项目中用 Python 和 Numpy 从头开始构建一个神经网络。你还将简要了解 TensorFlow，以及如何用它来搭建深度神经网络。 实战项目－你的第一个神经网络 从零开始搭建并训练一个神经网络，用来预测某一天内共享单车的使用量。 第三部分：卷积神经网络 卷积神经网络是解决视觉问题的标准答案。在无人驾驶车，面部识别，医学影像等领域，都有它的应用。在这部分课程中，你将了解卷积神经网络的基本原理，并在实战项目中用它来解决图片分类问题。 实战项目－狗狗品种识别 设计并训练一个卷积神经网络（CNN），来分析狗的图像，并据此准确区分他们的品种。使用迁移学习和其他知名架构来优化这一模型——为更进阶的应用做好准备！ 第四部分：循环神经网络 用 Keras 和 TensorFlow 打造属于你的循环神经网络（RNN）和长短期记忆神经网络（LSTM），并将其运用在文本情感分析、生成文本等前沿领域。挑战“生成电视剧剧本”实战项目。 实战项目－生成电视剧剧本 在 TensorFlow 上搭建一个循环神经网络来生成文本。为你最喜爱的电视剧的打造下一集剧本吧！ 第五部分：生成对抗网络 跟随生成对抗网络之父 Ian Goodfellow，学习并掌握深度卷积生成对抗网络（DCGAN）模型，来模拟生成真实图像。 实战项目－生成人脸 打造一对多层神经网络，通过使他们相互对抗来生成真实人脸。在项目中你将获得一系列明星人脸，试试看用他们能生成什么样的新面孔吧！ 第六部分：深度强化学习 使用深度神经网络，来设计一个可以在模拟环境中进行决策的系统。把强化学习应用到电子游戏和机器人开发等复杂的领域中。 实战项目－训练四轴飞行器学会飞行 设计一个深度强化学习系统，来控制四轴飞行器的一系列飞行项目，包括起飞、盘旋和降落等。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"python","slug":"coding/python","permalink":"http://blog.scavenger.top/categories/coding/python/"}],"tags":[]},{"title":"解决openss_shadowsocks","slug":"coding/TIPS/解决openss_shadowsocks","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.760Z","comments":true,"path":"2018/01/01/coding/TIPS/解决openss_shadowsocks/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/TIPS/解决openss_shadowsocks/","excerpt":"","text":"解决openssl升级到1.1.0以上版本，导致shadowsocks2.8.2启动报undefined symbol: EVP_CIPHER_CTX_cleanup错误最近将openssl升级到了1.1.0b版本，编译之后shadowsocks无法启动，报错如下： 12345678910111213141516171819202122232425Traceback (most recent call last): File \"/usr/bin/ssserver\", line 9, in load_entry_point('shadowsocks==2.8.2', 'console_scripts', 'ssserver')() File \"/usr/lib/python2.7/site-packages/shadowsocks/server.py\", line 34, in main config = shell.get_config(False) File \"/usr/lib/python2.7/site-packages/shadowsocks/shell.py\", line 262, in get_config check_config(config, is_local) File \"/usr/lib/python2.7/site-packages/shadowsocks/shell.py\", line 124, in check_config encrypt.try_cipher(config['password'], config['method']) File \"/usr/lib/python2.7/site-packages/shadowsocks/encrypt.py\", line 44, in try_cipher Encryptor(key, method) File \"/usr/lib/python2.7/site-packages/shadowsocks/encrypt.py\", line 83, in __init__ random_string(self._method_info[1])) File \"/usr/lib/python2.7/site-packages/shadowsocks/encrypt.py\", line 109, in get_cipher return m[2](method, key, iv, op) File \"/usr/lib/python2.7/site-packages/shadowsocks/crypto/openssl.py\", line 76, in __init__ load_openssl() File \"/usr/lib/python2.7/site-packages/shadowsocks/crypto/openssl.py\", line 52, in load_openssl libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,) File \"/usr/lib64/python2.7/ctypes/__init__.py\", line 373, in __getattr__ func = self.__getitem__(name) File \"/usr/lib64/python2.7/ctypes/__init__.py\", line 378, in __getitem__ func = self._FuncPtr((name_or_ordinal, self))AttributeError: /usr/local/ssl/lib/libcrypto.so.1.1: undefined symbol: EVP_CIPHER_CTX_cleanupshadowsocks start failed 这个问题是由于在openssl1.1.0版本中，废弃了EVP_CIPHER_CTX_cleanup函数，如官网中所说： EVP_CIPHER_CTX was made opaque in OpenSSL 1.1.0. As a result, EVP_CIPHER_CTX_reset() appeared and EVP_CIPHER_CTX_cleanup() disappeared. EVP_CIPHER_CTX_init() remains as an alias for EVP_CIPHER_CTX_reset(). EVP_CIPHER_CTX_reset函数替代了EVP_CIPHER_CTX_cleanup函数 EVP_CIPHER_CTX_reset函数说明： EVP_CIPHER_CTX_reset() clears all information from a cipher context and free up any allocated memory associate with it, except the ctx itself. This function should be called anytime ctx is to be reused for another EVP_CipherInit() / EVP_CipherUpdate() / EVP_CipherFinal() series of calls. EVP_CIPHER_CTX_cleanup函数说明： EVP_CIPHER_CTX_cleanup() clears all information from a cipher context and free up any allocated memory associate with it. It should be called after all operations using a cipher are complete so sensitive information does not remain in memory. 可以看出，二者功能基本上相同，都是释放内存，只是应该调用的时机稍有不同，所以用reset代替cleanup问题不大。 用vi打开文件：vi /usr/lib/python2.7/site-packages/shadowsocks/crypto/openssl.py 跳转到52行（shadowsocks2.8.2版本，其他版本搜索一下cleanup） 进入编辑模式 将第52行libcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)改为libcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,) 再次搜索cleanup（全文件共2处，此处位于111行），将libcrypto.EVP_CIPHER_CTX_cleanup(self._ctx)改为libcrypto.EVP_CIPHER_CTX_reset(self._ctx) 保存并推出 启动shadowsocks服务：service shadowsocks start 之后我们就可以继续愉快的、科学的畅游互联网了。提示：openssl1.1.0目前兼容性很不好，大部分的软件都不支持目前支持的有nginx-1.11.5、curl-7.50.3不支持的有PHP-7.0.12、openssh-7.3p1所以如果决定使用openssl1.1.0需要考虑很多兼容问题，必须保留1.0.2或1.0.1(不推荐，存在一些已知漏洞，最重要的是如果服务器要开http2，由于新版chrome必须使用ALPN的限制，只有1.0.2版本支持ALPN，所以必须升级到1.0.2)版本以便编译其他程序。 https://blog.lyz810.com/article/2016/09/shadowsocks-with-openssl-greater-than-110/","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"},{"name":"TIPS","slug":"coding/TIPS","permalink":"http://blog.scavenger.top/categories/coding/TIPS/"}],"tags":[]},{"title":"plan","slug":"plan/plan_of_git_pages/plan","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.746Z","comments":true,"path":"2018/01/01/plan/plan_of_git_pages/plan/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/plan_of_git_pages/plan/","excerpt":"","text":"看文档 解决目录跳转 菜单栏 归档 背景 美化","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"},{"name":"plan_of_git_pages","slug":"plan/plan-of-git-pages","permalink":"http://blog.scavenger.top/categories/plan/plan-of-git-pages/"}],"tags":[]},{"title":"editor","slug":"plan/plan_of_software/editor","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.743Z","comments":true,"path":"2018/01/01/plan/plan_of_software/editor/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/plan_of_software/editor/","excerpt":"","text":"","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"},{"name":"plan_of_software","slug":"plan/plan-of-software","permalink":"http://blog.scavenger.top/categories/plan/plan-of-software/"}],"tags":[]},{"title":"video_site","slug":"plan/plan_of_website/video_site","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.746Z","comments":true,"path":"2018/01/01/plan/plan_of_website/video_site/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/plan_of_website/video_site/","excerpt":"","text":"models video src title excerpt views_time created time modified time category tag tag name categorys name userviews home tag search categorys video detail video more_video talks download download ads 验证 图片 人机抓取 全自动 分布式 多线程 异步 按时检测链接有效性 核心竞争力 客户为什么会用你的 而不去用其他的","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"},{"name":"plan_of_website","slug":"plan/plan-of-website","permalink":"http://blog.scavenger.top/categories/plan/plan-of-website/"}],"tags":[]},{"title":"人工智能的可行性","slug":"plan/plan_of_software/人工智能的可行性","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.743Z","comments":true,"path":"2018/01/01/plan/plan_of_software/人工智能的可行性/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/plan_of_software/人工智能的可行性/","excerpt":"","text":"f(X)=y 那个阶梯","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"},{"name":"plan_of_software","slug":"plan/plan-of-software","permalink":"http://blog.scavenger.top/categories/plan/plan-of-software/"}],"tags":[]},{"title":"web_site","slug":"plan/plan_of_website/web_site","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.746Z","comments":true,"path":"2018/01/01/plan/plan_of_website/web_site/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/plan/plan_of_website/web_site/","excerpt":"","text":"Plan Of Make Money 新闻聚合 自动抓取 资源下载 形式 论坛 种子 音乐 电影 电视剧 游戏 a 在线视频 a 电影 电视剧 工具聚合 参考各个网站 开源项目 垃圾站 google baidu bing yahoo 各大搜索热榜 模板 google 各大 网站 盈利 论坛 买金币 广告收入 SEO 竞争 核心竞争力 解决问题 方便 高效 创造一种分享 模式 wiki taobao","categories":[{"name":"plan","slug":"plan","permalink":"http://blog.scavenger.top/categories/plan/"},{"name":"plan_of_website","slug":"plan/plan-of-website","permalink":"http://blog.scavenger.top/categories/plan/plan-of-website/"}],"tags":[]},{"title":"gfw_如果你生活在围墙里","slug":"杂谈/question_about_her/gfw_如果你生活在围墙里","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.686Z","comments":true,"path":"2018/01/01/杂谈/question_about_her/gfw_如果你生活在围墙里/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/question_about_her/gfw_如果你生活在围墙里/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"question_about_her","slug":"杂谈/question-about-her","permalink":"http://blog.scavenger.top/categories/杂谈/question-about-her/"}],"tags":[]},{"title":"不要去问一个女孩子","slug":"杂谈/人际关系/不要去问一个女孩子","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.690Z","comments":true,"path":"2018/01/01/杂谈/人际关系/不要去问一个女孩子/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/人际关系/不要去问一个女孩子/","excerpt":"","text":"https://www.youtube.com/embed/DE1Wo9FtuDs?feature=oembed 有很多人在聊天的时候喜欢用问句来结束自己的发言,因为女生要回答, 所以对话就得得以延续,这种想法真是太自作聪明了.事实的真相是大部分的女生都很讨厌问题,女生倾向于分享感受,很多话她们说出来是没有目的的,只想跟旁边的人分享一下此时此刻心里想到的而已,所以能和女生产生共鸣的话题,必要的成分是分享感受.不要说教不要比较不要评价,尽量少提问,我记得看过一部电影 致命伴侣 中 安吉丽娜朱莉和约翰尼德普在火车上偶遇的一段对话G 邀请我吃晚饭,FrankB 什么? 你想一起晚餐么?G女人不喜欢被提问B和我一起吃晚餐G太鲁莽了B和我一起吃晚餐么?G又是在问问题B我想要吃饭 但是没有你我吃不下 一句话就将目标包裹在感受分享当中了 草在结它的种子 风在摇它的叶子 我们俩站着不说话","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"人际关系","slug":"杂谈/人际关系","permalink":"http://blog.scavenger.top/categories/杂谈/人际关系/"}],"tags":[]},{"title":"交际篇","slug":"杂谈/人际关系/交际篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.686Z","comments":true,"path":"2018/01/01/杂谈/人际关系/交际篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/人际关系/交际篇/","excerpt":"","text":"社会心理学 心理学分析 故事去吸引 糖纸去包裹 你永远说服不了别人，人只会被自己说服 说服 摆出问题 提出解决方案 you are sick,I have pill you are sick look serious 引起注意力，重视 幽默，惊人的实例，糟糕的数据。吸引人的故事 让人参与进来 先获得感情认同，在获得道理认同 you need to be cure ,or you die 告诉对方，如果维持现状会有什么后果， 目的，让对方感到不安 I have the medicine,to care your sickness 展示需求，在展示解决需求的办法 案例 和数据 对比 必要的总结，证明方案的有效性 the benefits 前几步是在逻辑上说服别人，这一步是在心里上打动对方 积极和消极的 对比 如果采用 如果不采用 1 积极的一面，如果采用会有什么积极影响 2 消极的一面，如果不采用会有什么消极影响 3 如果不采用方案，消极与积极的对比 5. come on ,let&apos;s eat the pill 让他们知道应该做什么 最好让他们自己说出来 给他们一件 48小时内做的任务，不然他们会很快忘记掉","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"人际关系","slug":"杂谈/人际关系","permalink":"http://blog.scavenger.top/categories/杂谈/人际关系/"}],"tags":[]},{"title":"待定文章","slug":"杂谈/待定文章/待定文章","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.740Z","comments":true,"path":"2018/01/01/杂谈/待定文章/待定文章/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/待定文章/待定文章/","excerpt":"","text":"事情的变化 去前去后 学习与自己的东西，何为个性 何为自己 脸谱化 爱与自私 爱的那个人为自己的一部分 爸爸哭了 鱼竿图 虚幻与真实 梦境中的时间速度与现实 判断时间的神经 会死的人，向往着永生 那 永生的人会向往死亡吗 希特勒 的情人 军训时女生对教官的 斯德哥尔摩综合征（英语：Stockholm syndrome；瑞典语：Stockholmssyndromet）又称为人质情结、人质综合征，是一种心理学现象，是指犯罪的被害者对于加害者产生情感、同情加害者，认同加害者的某些观点和想法，甚至反过来帮助加害者的一种情结[1]。这些情感被认为是不理性的、滥用同理心[2] 斯德哥尔摩综合征可以被看作是一种创伤羁绊，不一定只发生在人质身上，只要加害者对被害者实施骚扰，都可能使被害者对加害者产生强烈的情感[3]。根据弗洛伊德的理论 ，斯德哥尔摩综合征是一种自我防卫机制，当受害者相信加害者的想法时，他们会觉得自己不再受到威胁[4]。斯德哥尔摩综合征并非正式精神疾病名词[5]。斯德哥尔摩综合征更倾向是人们用来掩盖不想讨论问题的假想状态。 如果你不犯错，说明你所做的不够挑战性 关于浪费 当你不在为了生计发愁时 什么是你有了钱 就不会去做的事情 冬日的阳光，几日的浑浑噩噩后 charlies 等级 贫富差距 物体杀人 人杀人 抽象属性 git 我是谁 你是谁 想对性 善于恶 。。。意义 黑白斑纹蛇 内隐 薛定谔的猫 相对性 道德的标准 类与实例 面向对象式理解感情 我是谁 思维数字化时的 复制后的 切换 那时候 你是谁 他是谁 我们在哪里","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"待定文章","slug":"杂谈/待定文章","permalink":"http://blog.scavenger.top/categories/杂谈/待定文章/"}],"tags":[]},{"title":"Unbroken","slug":"杂谈/心态/Unbroken","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.730Z","comments":true,"path":"2018/01/01/杂谈/心态/Unbroken/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/心态/Unbroken/","excerpt":"","text":"“So you have to trust that the dots will somehow will connect in your future You have to trust in something Your gut, destiny, life, karma, whatever. Because believing that the dots will connect down the road Will give you the confidence to follow your heart, Even when it leads you off the well worn path. And that will make all the difference. Your time is limited, So don’t waste it living someone else’s life Don’t be trapped by dogma : Which is living with the results of other people’s thinking Don’t let the noise of other opinions drown out your own inner voices. You’ve got to find what you love And that is true for works as its for your lovers your work is gonna fill a large part of your life And the only way to be truly satisfied Is to do what you believe is great work And the only way to do a great work Is to love what you do If you haven’t found it yet Keep looking and don’t settle Have the courage to follow your heart and intuition There somehow, already know What you truly want to become.” – Steve Jobs. That you going to have some ups and you’re going to have some downs Most people gave up on themselves easily You know that a human spirit is powerful? There is nothing as powerful – its hard to kill the human spirit! Anybody can feel good when they have their health, they bills are paid, they have happy relationships Anybody can be positive then, Anybody can have a large of vision then Anybody can have a lot of faith under those kind of circumstances The real challenge of growth, mentally, emotionally and spiritually Comes when you get knocked down It takes courage to act Part of being hungry when you’ve been defeated It takes courage…. To start over again Fear kills dream Fear kills hope Fear….put people in the hospital Fear can age you Can hold you back from doing something that you know within yourself that you are capable of doing, But it will paralyzed you At the end of your feelings is nothing, But at the end of every principles is a promise Behind your little feelings, it might not be absolutely nothing at the end of your little feelings But behind every principles is a promise And some of you in your life The reason why you are not in your goal right now, because you just all about your feelings All on your feelings, you don’t feel like waking up, so who does? Everyday you say ‘no’ to your dreams, You might be pushing your dreams back a whole six months, a whole year! That one single day, that one day you didn’t get up could have pushed your stuff back I don’t know how long Don’t allow your emotion to control you We are emotional but we wanna begin to discipline your emotion If you don’t discipline and contain your emotion, they will use you You want it and you’re going to go all out to have it Its not going to be easy, when you want to change Its not easy. If it were in fact easy, everybody would do it But if you’re serious, you’ll go all out I’m in control here I’m not going to let this let this get me down, I’m not going to let this destroy me! I’m coming back! And I’ll be stronger and better because of it You have got to make a declaration That this is what you stand for You standing up for your dream You standing up for piece of mind You standing up for health Take full responsibility for your life Accepts where you are and the responsibility that you’re going to take yourself where you want to go You can decide that I am going to live each day as if it were my last Live your life with passion With some drive Decide that you are going to push yourself The last chapter to your life has not been written yet And it doesn’t matter about what happened yesterday It doesn’t matter about what happened to you, what matter is What are you going to do about it? This year I will make this goal become a reality I wont talk about it anymore I Can ! I Can! I CAN! To persevere I think its important for everybody Don’t give up, Don’t give in There’s always an answer to everything an answer to everything","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"心态","slug":"杂谈/心态","permalink":"http://blog.scavenger.top/categories/杂谈/心态/"}],"tags":[]},{"title":"空无一人的小镇","slug":"杂谈/诗/空无一人的小镇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.726Z","comments":true,"path":"2018/01/01/杂谈/诗/空无一人的小镇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/诗/空无一人的小镇/","excerpt":"","text":"【什么人也没有的城市】 在这城市里，什么人也没有。 在这里各人都有自己的家，从窗户中可以看到有光。 但是在街道上，什么人也没有。 我尝试从窗户窥望进去，里面有人，不过，这个家与其他的家都是一样的！ 我也去看看其他的家。 果然这个家也与其他的一样。 这个城市和其他的城市也是一样。 因为与其他的一样才开心。 比起和人一起更加开心。 所有人都不再外出了。 这个城市里什么人也没有。 现在我要开始我的旅程，我要去看看其他的城市。 如果有人能够找到我就好了。 虽然我是个孤独的人，不过，如果我这个孤独的人喜欢上了一个TA。。。。。。。。。。。 就会是我这个孤独的人跟我离别的时候了。 就算是这样，我也想见见孤独的我。 我就是这样边行边想着，今日我也走过了什么人也没有的城市。 【虽然是无所不能～没有人的城市～】 它…无所不能。 因为它是制造出来的。 它比真正的人更漂亮。 它比真正的人更聪明。 它对人百依百顺，它对人有求必应。 在任何地方任何时候… 然后… 慢慢将人带来梦境之中。 一个不会清醒的梦。 但… 对人类来说… 这样就是幸福吗？ [它…是为了令人类幸福而诞生的。] 可是， 跟它一起的人真的幸福吗？ 在这个没有人的城市里，真的可以得到幸福吗？ [我不知道,不过… 每个人的幸福定义都不尽相同。 人是有很多种的，所以需求亦各有不同。 也许外人眼中的不幸，对本人而言是十分幸福。 每个人内心都有不同的想法。 在不同的时候，不同的空间… 内心都会出现不同的变化。 人的想法是不会恒久不变的。] 我也可以得到幸福吗？ 我希望得到幸福。 我希望找到只属于我的人。找到属于我自己的幸福。 【无法实现的梦想～没有人的城市～】 我来到一个新的城市。 这个城市里也有它。 它已经无处不在了。 这里有很多人跟它一起。 它的数目已经多得跟人差不多了。 可是… 属于我得人就只得一个。 可是那个人还没有… “你是人吧。” 什么事？手怎么了？伸出来就行了吗？ 你想带我去哪里？ 这里是你的家吗？ 为什么要带我来这里？ 莫非… 你就是… 只属于我的人？ [也许是吧… 不过，这个人所以会带我回来] 可能因为我也是“它”也说不定啊。 也许他以为……它可以替人实现梦想吧。 可是，我自己有一个无法实现的梦想。 要是我那个梦想能够实现… 我…… 便一定要跟只属于我的人分手。 【幸福】 我曾经找到那个“只属于我的人”。 只是因为我是我而喜欢我的人。 不过，假如只属于我的人只是喜欢我一个…… 倒是，我便要跟只属于我的人分别。 因为正是因为我是我而我做不到的事情。 我选择离开了他。 不过，在我心里面的这种感觉…… 非常非常的难受……这里很痛…… 幸福…… 幸福是两个喜欢的人永远在一起！ 一起！","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"诗","slug":"杂谈/诗","permalink":"http://blog.scavenger.top/categories/杂谈/诗/"}],"tags":[]},{"title":"学编程的四个阶段","slug":"coding/学编程的四个阶段","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.756Z","comments":true,"path":"2018/01/01/coding/学编程的四个阶段/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/coding/学编程的四个阶段/","excerpt":"","text":"Quincy Larson曾经只是个穿西装坐办公室的家伙，有一天，他决定要学习编程。于是，他到处打听关于编程的事情。他从Ruby入手，接着很快学了Scala、Clojure和Go等多种其他的编程语言。他用过Emacs和Vim，甚至还学过Dvorak键盘布局。他不仅学会了Linux，涉足过Lisp，并且有超过半年的时间靠在命令行下编 Python 代码为生。 Quincy就像龙卷风中的一片叶子，别人给他的建议让他在编程的世界中晕头转向，直到他学完了“能想到的每一个在线教程”。尽管在故事的最后，Quincy得到了一份软件开发的工作，但他说： …我认为，我碰到过的程序员们看似一帆风顺，实际上他们都饱尝过学习编程的痛苦，只是他们都压抑着没有说出来。 唉，这些话是不是听着很耳熟？ 阶段一：手把手辅导的蜜月期（Hand-Holding Honeymoon）每个即将进入编程行业的人都满怀期待，这很正常。 一方面，你在年轻的时候总听流言说编程如何如何难，但它们就像老奶奶讲的吓人故事，是用来唬孩子们去学习社会科学而已。 而另一方面，“学习编程”运动已经取得了很多成就，它打破障碍并向人们展示编程其实也没那么可怕。 像 Codecademy、Treehouse和 Code School 这样触手可得的工具，它们可以确保你（甚至任何人）不仅能学会编程，还能成为一名熟练的开发者。 突然间，问题不再是对编程的恐惧，而是抱有过多希望，期望太高。 而且最重要的是，这些入门工具足以像教小孩过马路那样，引导你学习那些令人头疼的变量和条件语句，以及初级编程语法。当你不断完成游戏般的挑战时，你的自信会随之大增。说不定你最后就学会了编程！学会编程并不难，基本上你已经是一名开发者了。 手把手辅导的蜜月期（The Hand-Holding Honeymoon） 现在问题来了，你正处于编程初期阶段，我喜欢称之为“手把手辅导的蜜月期”。尽管你可能感觉成功就在不远处，但其实你才刚踏出第一步。一切才刚刚开始…… 描绘未来之路在我们一头扎进第二阶段之前，先来仔细看看整个过程。 在这篇文章中，我将介绍典型的编程之路上必须经过的四个阶段，以及如何平稳渡过每个阶段。你也会看到资源的丰富程度和知识范围（各个阶段必须掌握的）的广度这两个关键因素是如何在编程之路上起到决定性作用的。 旅程艰辛就为了达到找工作的水平，这个艰苦的过程可以描绘成你的自信心随能力增长的变化曲线。 学习编程之旅 由于自信和幸福感紧密关联，而且只有在自信和能力相匹配时，才能正式地说你可以“上岗”了，因此，上图中的自信和竞争力是息息相关的。 随后我们会观察剩下的三个阶段中存在的独特挑战，但每个阶段本质上都包含了上面的这种关系： 手把手辅导的蜜月期（The Hand Holding Honeymoon），这个阶段充满了乐趣，面对看似棘手的问题，那些高质量资源的鼎力相助让你轻松取胜。虽然你主要学的是基础语法，但完成的工作会让你很有成就感。 充满迷惑的下滑期（The Cliff of Confusion），在这个阶段你会痛苦地发现，手把手辅导的阶段结束后，事情变得更困难了，实际上你没法独立做任何事。在你试图重新振作时，你面对的首要挑战不仅是要反复调试，而且你还不懂怎么问问题。 绝望的迷茫期（The Desert of Despair），这个阶段漫长而又孤独。在这个沙漠（充满困惑迷茫就像身处沙漠）中几乎没有路，每个方向都看似正确，但你却总是在绕圈，你极度渴望找到办法逃出生天。警惕“狂燥中出现的海市蜃楼（Mirages of Mania）”，它们就像是沙漠的迷魂曲，将引诱你误入歧途。 煎熬的上升期（The Upswing of Awesome），这个阶段里你终于找到了一条路走出沙漠，并且总体清楚了如何创建应用程序。但你的代码仍然很封闭，到处都是漏洞，就像纸糊的房子一样摇摇欲坠。你的网站可以运行并且你已经掌握了几种有效的模式，这些都让你的信心大增，而且你的朋友们都在称赞你的网站很酷，但实际上你知道底层连自己都不忍直视。你根本不知道该如何写出“可发布”的成熟代码。该如何弥补这个差距，从而找到一份真正的工作呢？ 在过去这些年里，我已经面试过成百上千的开发者，他们都心怀抱负，并且不断给我说着相同的经历。我写这篇文章的目的，是希望你能够在学习的路上擦亮双眼，做一个详细的计划避开很多前人都曾掉入过的陷阱。 让我们回到阶段二吧… 阶段二：迷惑的下滑期（The Cliff of Confusion）你正处于阶段一，也就是“手把手辅导的蜜月期（Hand-Holding Honeymoon）”，你正在获取各种奖励徽章并完成编程挑战，同时你的自信和能力都在蹭蹭地上涨。情况也不是很糟糕…那大惊小怪些什么呢？因为你的自信已经失去理智地膨胀到了极点。。。。。。 小心了！你即将踏出悬崖，多少英雄在此折腰沦为“编程太难”一族。这错误的一步发生在你第一次在键盘前坐下，打开文本编辑器并试图从零开始创建一个工程，但你却不用任何很赞的线上编辑器，也不用别人的代码框架或寻求有用的提示。 简直扯淡。 也许你能照着自学教程依葫芦画瓢，但是没有人可以一步登天，而且从某种意义上来说，你要徒手从一个空白的文本文件开始简直是异想天开。你才刚刚进入学习的第二个阶段，接下去你的自信将跌落谷底，这也是为什么我称之为“困惑的下滑期（Cliff of Confusion）”。 困惑的下滑期（The Cliff of Confusion） 你开始创建工程。你抓耳挠腮却只找到了一个勉强能用的方案，但总觉得哪里不对。为了你的星河战队（也就是你的大工程）能表现不错，你陷入了和bug的战争之中。似乎只有通过一键谷歌才能解决每一个问题，你那些过去能搞定问题的自信荡然无存。 Buuuuuuuuuuuuuuuuuuuuug！！！ 不论是作为教育者，还是作为这个行业的从业者，在大家看来这个阶段都格外令人沮丧。任何人写的程序都可能有bug，但我们还是希望你能有所进步，因为最不可能的地方也能成就最伟大的成功。 在阶段一结束时，学生们被迫进入了阶段二。他们必须飞跃这个阶段，但太多有潜力的人却不去掌握真正有用的技能，而是一味地停留在挫败的情绪中。 可怕的是，你甚至还没有遇到过真正棘手的事情。阶段二的结束还早得很。当你解决掉足够多的bug结束了大部分的痛苦，并且已经完成了几个工程，尽管这标志着阶段二的结束，但总体来说你也仍然是刚上路而已啦。 对那些真正准备从事这个行业的人来说，他们通常会在渡过阶段二以后决定是否全身心投入这个新生活。但太多的人放弃了。而不幸的是，你现在才刚到阶段三（“绝望的迷茫期”）的入口。 起作用的两个关键因素那么前两个阶段的真正区别是什么呢？为何相比阶段一（手把手辅导的蜜月期）来说阶段二（困惑的下滑期）给人的感受会如此糟糕？如果你的经历很像我们前面描述的那样，只要理解了这两个问题，你就能释怀了。 从根本上来说，每个阶段都有两股关键力量在起作用，那就是资源的密集程度和知识面的广度。在探索它们对阶段三的影响之前，我们先来看看这两个因素到底是什么。 因素一：资源密集度正如我前面所说，一开始你会感觉有遍地的资源在引导你上手编程。事实也确实如此！ 搜索“如何编程”，你会得到一大堆有用的工具、文章、视频以及自学教程。而且，老实说它们都很棒！从未有过如此多的方法指导人们学习编程。 不幸的是，后期可供使用的资源太少了。每一个从初学者成长到当前状态的人都能体会这其中的差距之大，相比刚开始入手，当你试图完全依靠自己创建工程时，能利用的资源就少得多。 进入阶段三后需要了解的知识猛然陡增，恶化了上面的问题，这也是为什么我把这个阶段称之为“绝望的迷茫期”。一旦你度过了这个阶段，并且开始了解你需要搜索的东西，你就会找到很多资源，还能使用一些技术工具，如专业博客和视频讲座。矛盾的部分仅仅在于明白该问什么问题。 下图显示了各个阶段中的资源密集程度（线条越密集表示资源越多）： 各阶段的资源密集度 因素二：知识面的广度现在我们来聊聊一个相关的话题——知识面的广度。它表示你在每个阶段中必须学习的新知识的总体广度。下图就显示了这个因素在每个阶段中的情况： 各阶段所需知识的广度 刚开始学编程时，你需要理解的东西很少。不论你的目标是什么，不论你用什么编程语言，也不论你之前是做什么的，每个人要做的都是搞清楚什么是for循环，如何创建条件语句，以及其他一些编程语法的基础结构。总体来看也没多少基础概念，因此阶段一所需要的知识面广度很窄。一旦你学完了基础部分，就需要去了解一些更复杂的东西，比如理解错误以及何时使用那些你已经会用的代码，此时你会发现需要学习的额外知识瞬间多了很多。这个时候情况变得不同了，因为一个明确的问题不一定有一个绝对正确的答案……事情开始变得棘手。 当你进入第三个阶段后，所需的知识面广度就更宽了。你需要理解该使用哪些工具，该学习什么编程语言；学习相关的计算机科学基础，如何写模块化的代码；学习面向对象的编程，学习好的代码风格，以及学会寻求帮助（以上仅列举几个例子）。每一次在Google 或 Hacker News上进行搜索都让你大开眼界，找到的东西多得让你喘不过气，都是些你不知道但感觉自己应该了解的知识。 你不知道自己不懂哪些东西。 只有当你终于摸到了一些门道并结束这个“荒漠之旅”以后，所需的知识面广度才会再次缩小。那时，你已经选择了某种技术，并了解了它在这个行业的生态系统中所处的地位。你最终学会了那些你以前不懂的东西（可以说相当了解），也知道如何解决问题。随着你深入学习和事业逐渐起步，你将越来越专注于自己领域的技术。 阶段三：绝望的困惑期（The Desert of Despair）理解了上面两个因素后，你会发现阶段二仅仅是个转折点。快速提升的知识面广度和急剧下降的资源密集度让你在这个阶段倍感痛，因此我称它为“绝望的沙漠”（身处这个阶段犹如在沙漠中一样，迷茫得团团转却找不到方向）。 本质上来说，你知道这个沙漠肯定在某个地方有出口，但你就是不知道怎么找到它。 绝望的沙漠 这个沙漠之旅路途遥远，而且危机四伏。你会发现自己总是沉溺在虚无缥缈的东西里，许多诱人的资源看似包含了你要找的对策，实际上它们只是又一次地让你深陷在了无边无际的砂砾之中。 或许你已经在Coursera 、Udacity 或 edX上注册了几门MOOC课程，又或许你找到了一个声称能一路指导你的自学教程。你自以为吸取了阶段一（手把手辅导的蜜月期）的经验教训，明白问题并不是那么好解决，但还是忍不住去寻找帮助。你注册的课程信誓旦旦地保证，一定能让你达到前所未有的高度，对此你还信以为真。无论别人怎么说，你都不可能只花一个星期或一个月的时间，也不可能就只上个学院课程就学会这些东西。因此，别再相信那些谎言！ 这个阶段要学的东西很多，远超出你可能预期的那些。尽管你能让许多app运行起来，但要成为一名真正的专业开发人员需要做的更多，在其中你很容易感到迷茫失落。你每一次进步都难以衡量，你如何知道自己该学什么？甚至这些东西是不是你该学的呢？ 就算你走对了方向，却仍然很难衡量你取得的进步。在你能做出外形和功能都符合自己期望的东西之前，你可能会感觉很迷茫。但是只要坚持不懈，并且保持正确的方向不跑偏，终有一天你能将那几个“货真价实”的处女作发布出去，你终于开始上道了。一路走来确实很艰难，但你开发的这个web东东其实也没有那么糟。。。。。。一切都在变好！ 阶段四：煎熬的上升期你已经成功穿越了荒漠，也越来越自信。你Google搜索的技能（ Google-fu）越来越了得，也能理解那些细致入微的专业博客文章和视频讲座。或许你已经深入掌握了某一种编程语言或框架，并且有自信能创建并发布一个能运行的应用。 这是“煎熬的上升期”： 煎熬的上升期（Upswing of Awesome） 表面看上去一切都OK，但你知道底下还差得远呢。 虽然你能让那个应用程序运转起来，但底层都发生了什么？你的代码里充满补丁，最糟糕的是，你甚至不知道哪部分很糟糕，也不知道实际上哪部分将运行无误。你不时地取得成就，同时也犯了许多菜鸟级错误，更糟的是，你渐渐开始怀疑怎么还是搞不清自己在做什么。 这是个两极化的阶段。一边觉得自己是个无所不能的开发者，另一边又觉得自己是个效率极低却深陷其中的狂热新手。走得越远，越是感觉惶恐不安，生怕哪天有人 “揭穿”你代码中的诡计。 你觉得自己应该算是一名开发者了，但你现在写的代码和在“职业”工作环境下写出的代码相比，差距实在是太大了… 尽管艰难，最终你一定会成功。那时的你心情澎湃，浑身充满力量，绝望的荒漠已经过去，而令你困惑迷茫的阶段二也成了遥远的回忆。终于，你是真的在走上坡路：你的学习速度更胜从前，也更理解如何学习编程。尽管历尽艰难，但你会经历足够多的最佳实践，把那些宝贵的知识凝结成产品级的技能集。这个可怕的上升期会比你预想的要长，也会让你感觉看不到头，因为你已经离终点如此之近……但你肯定会到达的。如果你在正确的道路（确定未来要做什么）上足够坚持，一定会有人愿意付薪水给你，让你继续学习。工作机会是你的了！ 总体来看现在你已经看到了前方的路，也知道了为何会一路艰辛。将前面描述的四个阶段和过程中对它们起作用的两个要素结合起来，就得到了下面这个图表： 整个过程 对这个过程的了解归了解，去经历又是另外一回事。你还是先迈出正确的第一步吧。 如何通过每一个阶段整个旅程看似艰难，但坦白地说，学习编程的过程通常都是这么艰苦的。了解自己的目的很重要，尤其当你孤军奋战的时候。但你不会只能靠自己的，因为大部分问题都有捷径可走。学习编程没有人们说的那么简单，但也没有你在绝望时想的那么难。 我会在这部分介绍一些重要的策略，你能利用它们保持一个正确的方向。 你在各阶段取得的进步 I：如何顺利通过手把手辅导的蜜月期（Hand-Holding Honeymoon）丰富的可用资源让阶段一充满了乐趣。这些资源能够在接下来的阶段中，很好的培养你的逻辑思维。现在是学习编程的大好时机，记住这两个建议，享受编程的乐趣吧！ 从尝试多种不同的学习资源入手，找到最适合自己的学习方式和最让自己感兴趣的项目类型。最适合你的可能是Khan Academy的快速挑战、Codecademy的在线练习，或者是Chris Pine的书《Learn to Program》和Code School里那些古怪的try Ruby 训练。刚开始你要思维开阔，不要理会那些告诉你应该学什么的建议。。。。。。在这个阶段学什么都是一样的。 选择一个，一旦发现它适合自己就要坚持下去。完整学习整个入门教程，你会从中学到写基础脚本和应用需要的所有基础知识。接着，就要准备好开始独立地创建工程。 II：如何顺利通过困惑的下滑期（Cliff of Confusion）几乎每个人都要经历这个阶段，因为成为一名开发者的唯一途径就是不断去开发。你可以通过注册一些自学教程（或那些冒充是“完美课程”的自学教程）来模拟创建工程，但最终你还是要自己动手，这么做不过是拖延了时间。自学教程能很好地让你从更个性化的例程中得到启发，但是在某些情况下你必须脱离过多的辅助，独立解决问题。 如何过渡到独立地创建工程，下面有三个建议： 和他人一起工作，哪怕同样是菜鸟。你会惊讶地发现，两双眼睛更容易调试出一个不可能的错误。 阅读他人的代码，熟悉好的模式。尽量理解为什么作者这么做。同样的道理，不读书是不会想成为一名小说家的，对吧？我将在下一篇文章里集中讨论这个问题，但现在，请仔细注意其他人对任何小问题或工程提出的解决方案。 从小事做起，不断尝试。对于将来，你应该想过做一些有趣的大工程，但你也必须适应调试的过程，搜索一些带有小型挑战的学习资源。经验是无可替代的。 III：如何顺利通过绝望的困惑期（Desert of Despair）一旦适应了调试过程，最令你头疼的问题就是难以获取所需知识，以及学习所有这些知识必须付出的代价…简直就像处于令人绝望的沙漠里。这种情况下，你真正需要的是一条有效的前进路线。而Mirages of Mania代表那些吸引你的捷径、诱惑你冒险的新世界和速成计划，它们最终只会浪费你的时间。 因此，要逃离这个沙漠的关键在于： 拥有一个强烈的目标想去实现，否则，什么有趣但没用的东西都学的话，最终不过瞎忙活一场。如果你在学习之外还有充裕的时间，请忽略这一条。。。。。。 找到一条有效的路径能直达你设定的目标，并且要验证其可行性。你必须深入思考“这个方法到底能不能帮我实现目标？”，而不是光看那些课程网站或书皮上打出的营销口号和看似真诚的笑脸。 专注，避免分心。因为你如果是个对学习编程很有兴趣的人，那你肯定也会对所有美妙的事情感兴趣。当编程遇到了困难，你需要进一步解决这个问题，而不是另起炉灶。 如果能确定一条路并坚持走下去，你最终一定会进入到下一个阶段，而不是花费了数月或数年，最终只是徒劳。 IV：如何顺利通过煎熬的上升期（Upswing of Awesome）这个阶段是最棘手的过渡阶段之一。尽管你能开发出应用程序，但你实际上想成为一名web开发人员。通过这个阶段并找到工作，你需要做三件事情： 为编程寻找最佳实践，并效仿。你需要理解一个普通方案和最佳方案之间的差别。自己一味闷头钻研，远远比不上别人在真实工作环境下写出的产品级代码，而最佳实践样例很好地体现了这其中的差距。 检验你的假设。因为你可能回避了一些自己知识体系中的漏洞，甚至你自己都不知道有这些漏洞的存在。你需要检查并修复这些漏洞。 正确对待那些并不吸引人的技能。尽管它们很少被强调，但是你要过渡到一个专业环境，它们还是相当重要的。这些技能包括测试、数据建模、架构和部署，我们很容易忽略它们，但它们都是优秀开发的基础。 要做到上面这些并通过最后阶段，关键是要不断获得他人的反馈。完全自学或许富有成效，但难以写出易读、模块化以及可维护的代码，这就使自学者在职业环境中没那么有吸引力。你需要和和那些会怀疑你假设的人们一起工作，他们会提出尖锐的后续问题，并迫使你对自己的知识体系进行查缺补漏。 那么……这条路能行吗？这些可能听起来让人崩溃，但我保证，在你之前已经有很多人坚持不懈地通过了这个旅程。理解前面的路，你就能有一个明确的计划，也会知道如何获取真正有用的帮助，这些都为你踏上这个旅程开了好头。 很显然，这篇文章没有按我们想的那样，深入挖掘旅程中的每个阶段，也没有提供详细的建议告诉你该怎么做。即便如此，由于我们熟知这个旅程并且对此抱有极大的热情，因此，我们希望倾尽全力帮助大家。 我们的核心课程是专为衔接整个过程而设计的，但如果你有兴趣自学这个课程，我们将在未来的博客文章中对此进行调整和深入探讨。 在此我们进一步探讨了各种问题（从寻找导师，到如何缩小差距得到一份web开发的全职工作），如果你也想尝试一下，就在下面注册吧。因为，尽管前方的路充满挑战，但你不是一个人在战斗。 祝你好运！ 特别感谢Peter DePaulo、Javier Noris、 Michael Alexander、 Andy Brown、 Saul Costa、 Phil Nachum和Quincy Larson分享你们的经历，以及帮助修正这些观点。 aulo、Javier Noris、 Michael Alexander、 Andy Brown、 Saul Costa、 Phil Nachum和Quincy Larson分享你们的经历，以及帮助修正这些观点。","categories":[{"name":"coding","slug":"coding","permalink":"http://blog.scavenger.top/categories/coding/"}],"tags":[]},{"title":"卡辛斯基的警告","slug":"杂谈/卡辛斯基的警告","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.700Z","comments":true,"path":"2018/01/01/杂谈/卡辛斯基的警告/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/卡辛斯基的警告/","excerpt":"","text":"1、 1978年5月25日，美国西北大学的工程教授巴克利·克利斯（Buckley Crist），收到了邮政局退回的一个包裹。 这个包裹寄往芝加哥大学，但是收件人“查无此人”。克利斯教授不记得寄过它，可是发件人却写着自己的名字。他叫来了学校的保安。保安打开了包裹，里面是一颗炸弹，立刻爆炸了。保安身受重伤。 此后的18年，这样的案件一再发生。凶手一共寄出了16枚邮件炸弹，共炸死3人，炸伤23人。袭击对象主要是大学的理工科教授，所以凶手被称为“大学炸弹客”（Unabomber）。 联邦调查局 FBI 想尽办法要抓住凶手。十几年的调查中，动用了500名特工，误抓了200多名嫌疑犯，查访上万民众，接了2万多通检举电话，花费500万美元，但是一无所获。凶手非常小心，没有留下任何线索。这个案件成了 FBI 历史上最昂贵的调查之一。 2、 1995年4月，凶手又一次作案，一次性寄出了四样东西：两个邮件炸弹，炸死了加州林业协会的总裁吉卜特·莫里，炸断了耶鲁大学计算机科学教授大卫·加勒特的几根手指；一封警告信，警告1993年诺贝尔奖获得者遗传学家理查·罗伯特和菲利普·夏普，要求他们立刻停止基因研究；一篇发给《纽约时报》的长达3.5万字的文章，承诺如果美国主流媒体一字不改地全文刊登，他就将永久停止炸弹袭击。 经过反复研究，FBI 局长和美国司法部长最终同意刊登这篇文章。1995年9月19日，它发表在当天的《纽约时报》和《华盛顿邮报》上，题目叫做《论工业社会及其未来》（Industrial Society and Its Future）。 新闻界觉得不可思议，难道凶手用了18年时间，精心策划实施了那么多起爆炸案，目的竟然只是为了发表一篇论文？更令人吃惊的是，这居然是一篇充满思辨的哲学论文，作者明显受过学术训练。论文声称，工业革命带来的是人类的灾难，技术使人类丧失自由，最终将导致社会的动荡甚至毁灭，人们应该摧毁现代工业体系。这就是凶手为什么袭击大学教授的原因，因为他们推动了技术的发展。 看过的人都觉得，这篇论文写得很有说服力。许多人开始认真思考作者的观点，主流的知识分子杂志（比如《大西洋》、《纽约人》）专文讨论它。那位被炸断手指的耶鲁大学教授大卫·加勒特承认，文章的推断不无道理，工业文明时代，人类的未来，也许真的险恶重重。Java 语言的创始人之一的计算机学家 Bill Joy 则说，他对文章预言的未来深感困扰。艺术家更是深受影响， 后来的许多小说和电影（比如《黑客帝国》），都能看到这篇论文的影子。 3、 论文发表以后，FBI 收到一条线索：有人举报，该文的写作风格和论点，很像出自他的哥哥泰德·卡辛斯基（Ted Kaczynski）之手。 1996年4月3日，卡辛斯基在蒙大拿州被逮捕，他住在远离人群的荒野森林之中，自己搭建了一个小木屋，里面堆满了炸弹原料。至此，邮包炸弹案宣告破案。 卡辛斯基的人生很不寻常。他生于1942年，从小就具有超人的数学天才， 16岁被哈佛大学数学系录取。 1962年进入密歇根大学攻读数学博士，只用了几个月就拿到了博士学位。指导教授说他的博士论文十分深奥，全美只有十几个人能看懂。25岁时，他被加州大学柏克莱分校聘为助理教授，是该校史上最年轻的教授。 卡辛斯基在柏克莱只待了不到2年，就辞职了，没有给出任何理由。他从此脱离学术界，过上了离群索居的生活，1971年，在父母的资助下，他在蒙大拿州一个偏僻的山区盖了一间小木屋，搬到那里去住了。屋子里没有电灯、电话、自来水。平日里他吃自己种的菜、猎捕的食物，晚上点蜡烛看书，砍柴做饭取暖。只有购买日用品的时候，他才会骑自行车来到几十公里以外的小镇。1978年，他在那里寄出了第一个邮件炸弹，攻击目标是在图书馆里面随机选择的。 被捕后，卡辛斯基拒绝了律师为其辩护。1998年，被判处终身监禁，不得保释。 4、 《论工业社会及其未来》这篇论文值得细细阅读，它对人类现状和未来的分析描述，是非常震撼的。 关于人类的现状，作者的第一句话就是：“工业文明带给人类的是极大的灾难。” “工业文明极大地增加了发达国家的人口预期寿命，但也破坏了社会的稳定性，令生活空虚无谓，剥夺了人类的尊严，导致了心理疾病的扩散，还严重地破坏了自然界。” 许多人认为，新技术带给人类更大的自由，卡辛斯基的观点正好相反，他认为新技术会剥夺人类的自由。“自由与技术进步不相容，技术越进步，自由越后退。” “新技术改变社会，最后人们会发现，自己将被强制去使用它。比如，自从有了汽车，城市的布局发生了很大改变，大多数人的住宅已经不在工作场所、购物区和娱乐区的步行距离之内，他们不得不依赖汽车。人们不再拥有不使用新技术的自由了。” 一项新技术诞生后，不太可能被拒绝使用，因为“每一项新技术单独考虑都是可取的”，然后人类就会依赖它。 ”电力、下水道、无线电话……一个人怎么能反对这些东西呢？怎么能反对数不清的技术进步呢？所有的新技术汇总到一起，就创造出了这样一个世界。在这个世界中，普通人的命运不再掌握在他自己手中，而是掌握在政客、公司主管、技术人员和官僚手中。以遗传工程为例。很少人会反对消灭某种遗传病的基因技术，但是大量的基因修改，会使人变成一种人工设计制造的产品，而不是自然的创造物。“ 以基因技术为例，如果这种技术变得成熟和普及，那么政府将不得不管制它，因为万一被滥用，后果不堪设想。这样的话，个人就没有选择，只能接受政府管制，其程度将是前所未有，因为政府将可以管到你的基因结构。 工业社会要想正常运作，必须遵循一整套严格的规则，这导致”现代人都被一张规则之网所笼罩，在所有重要方面，个人的行为都必须服从这些规则。“这导致所有人在本质上都高度类似。 “今天，在技术发达地区，人们的生活方式十分相像。芝加哥的一个基督教银行职员，东京的一个佛教银行职员，莫斯科的一个共产党银行职员，他们彼此之间的日常生活十分相像，而他们的生活与1000年以前人们的生活却非常不同。这就是技术进步的结果……” 最终，“技术完全控制地球上的一切，人类自由基本上将不复存在，因为个人无法对抗用超级技术武装起来的大型组织。只有极少数人握有真正的权力，但甚至就连他们的自由也是十分有限的，因为他们的行为也是受到管制的。” 5、 丧失自由还不是最可怕的，更糟糕的是，技术最终将取代人类。 关于人类的未来，卡辛斯基假设“计算机科学家成功地开发出了智能机器，这些机器无论做什么事都比人类强。在这种情况下，大概所有工作都会由巨大的、高度组织化的机器系统去做，而不再需要任何人类的努力。” 这时可能会有两种情况发生。“一种是允许机器在没有人类监督的情况下，自已做出所有的决策，另一种是人类保留对于机器的控制。” ”如果我们允许机器自己做出所有的决策，人类的命运那时就全凭机器发落了。人们也许会反驳，人类决不会愚蠢到把全部权力都交给机器。但我们既不是说人类会有意将权力交给机器，也不是说机器会存心夺权。我们实际上说的是，人类可能会轻易地让自己沦落到一个完全依赖机器的位置，沦落到不能做出任何实际选择，只能接受机器的所有决策的地步。随着社会及其面临的问题变得越来越复杂，而机器变得越来越聪明，人们会让机器替他们做更多的决策。仅仅是因为机器做出的决策会比人的决策带来更好的结果。最后，维持体系运行所必需的决策已变得如此之复杂。以至于人类已无能力明智地进行决策。在这一阶段，机器实质上已处于控制地位。人们已不能把机器关上，因为我们已如此地依赖于机器，关上它们就等于是自杀。” 就算人们想尽办法，保留对机器的控制权，结果也会很糟。 “另一方面，也可能人类还能保持对机器的控制。在这种情况下，一般人也许可以控制自己的私人机器，如他的汽车或计算机，但对于大型机器系统的控制权将落入一小群精英之手——就像今天一样。由于技术的改进，精英对于大众的控制能力将会极大提高，因为人不再必需工作，大众就成为了多余的人，成为了体系的无用负担。如果精英集团失去了怜悯心，他们完全可以决定灭绝人类大众。如果他们有些人情味，他们也可以使用宣传或其他心理学或生物学技术降低出生率，直至人类大众自行消亡，让这个世界由精英们独占。” “或者，如果精英集团是由软心肠的自由派人士组成的，他们将注意保证每个人的生理需求都得到满足，每一个孩子都在心理十分健康的条件下被抚养成人，每一个人都有一项有益于健康的癖好来打发日子，每一个可能会变得不满的人都会接受治疗以治愈其‘疾病’。当然，生活是如此没有目的，以致于人们都不得不经过生物学的或心理学的改造，以去除他们的权力欲，或使他们的权力欲‘升华’为无害的癖好。这些经过改造的人们也许能在这样一个社会中生活得平和愉快，但他们决不会自由。他们将被贬低到家畜的地位。” 6、 退一步说，如果前面的假设不成立，人工智能没有取得成功，人的工作还是必要的，但是“即使这种情况，机器也将承担越来越多的简单工作，而低能力的工人将越来越过剩（正如我们所见，这种事已经发生了。许多人很难或根本找不到工作，因为他们由于智力或心理原因，而不能达到体系所需要的训练水平）。” “对于那些找到工作的人，就业的要求会越来越高。他们将需要越来越多的训练，越来越强的能力，他们将不得不越来越可靠、越来越规矩、越来越驯服，因为他们将越来越像巨型有机体的细胞。他们的任务将越来越专门化，因而他们的工作在某种意义上也将越来越脱离真实世界，仅集中于现实的一块小碎片。体系将使用一切可以使用的心理学或生物学手段来设计制造人类，使之驯顺，使之具有体系要求的能力。” 机器接管了大部分具有真正重要性的工作以后，留给人类的（或者说普通人有能力从事的）都是一些相对不那么重要的工作。 “例如有人建议，大力发展服务业可以给人类提供工作机会。这样人们就可以把时间花在互相擦皮鞋上面，可以用出租车带着彼此到处瞎转，互相为对方做手工艺品，互相给对方端盘子等等。人类如果最终以这样的方式结局，那对于我们来说也实在是太可怜了，而且我们怀疑有多少人会觉得这样的无意义的忙碌等同于充实的生活。他们会去寻找危险的其他渲泄途径（毒品、犯罪、邪教、仇恨群体等），除非他们经过生物学或心理学的设计改造后适应了这种生活方式。” 7、 卡辛斯基的结论就是，未来要么人类无法幸存下来，要么个人空前地依赖大型组织，空前地“社会化”，人类的生理和心理是设计和改造的结果，而不是自然的产物。 唯一的解决方法就是放弃科学技术，“把这个腐朽的体系整个扔进垃圾堆，并勇敢地承受其后果。” “我们希望已经说服了读者，体系无法通过改革来调和自由与技术。唯一的出路是摒弃整个工业-技术体系。这意味着革命，不一定是武装起义，但肯定是激烈而根本的社会性质变化。” 卡辛斯基认为，这个体系是由技术人员为了自己的利益和声望在推动前进。“体系需要科学家、数学家与工程师，否则就无法正常运作。”因此他选择这些人作为袭击目标。这样做当然是邪恶的，但是他对于人类命运的警告却理应受到重视。 卡辛斯基反复提及，引入新技术一定要慎而又慎。 “一项新技术被引入社会时，将会引发一长串其他变化，这些变化之中的大部分是不可预见的。历史经验告诉我们，技术进步给社会带来新问题的速度，远比它解决旧问题的速度要快。技术已将人类带入了一条无法轻易逃脱的死胡同。” 技术会有我们难以预测的长期后果。比如，抗生素的目的是消灭细菌，但是大量使用后却产生了难以杀死的超级细菌，人们不得不限制抗生素的使用；再比如，医疗技术提高了人类的寿命，但也因此导致了地球的人口激增、社会老龄化、生育率下降等重大的社会变化，这些恐怕都不是技术的发明者能想到的。如果新技术（比如机器人技术、基因工程、纳米技术）被恐怖主义组织掌握，后果就更可怕。如果不是真人，而是机器人在街头发动恐怖袭击，那会是怎样的情景？ 距离《论工业社会及其未来》的发表，已经过去了20多年，互联网和人工智能都变成了现实，基因技术开始萌芽。人类对于新技术的入迷简直到了无以复加的地步，恨不得越多越好，一项新技术还在实验室中，人们就开始计划如何尽快形成生产力，占领尽可能多的市场。我们不能不担心，卡辛斯基的预言似乎正一步步变成现实。 《论工业社会及其未来》原文摘录工业革命极大增加了城市规模和城市人口比例，而人群聚集会增加压力与攻击性。 技术变革导致现代社会的变化十分迅速，因此整个社会不存在稳定的框架和价值观。 有些人急于拯救自由却不愿牺牲技术带来的所谓好处，他们会提出天真的新式社会构想来调和自由与技术。 所有人都理所当然地认为，每一个人都必需向技术的需要低头，而且理由十分充分：如果人的需求被摆在了优先于技术需要的地位，就会出现经济问题、失业、短缺甚至更糟。在我们的社会当中，“精神健康”的概念主要被定义为在多大程度一个人能够根据体系的需要行事并且不会流露出承受精神压力的迹象。 经济体系所能容纳的企业数是有限的，我们大多数人只有成为别人的雇员才可以生存。 工业-技术体系可能幸存也可能崩溃。假如该体系幸存下来，可能最终将会降低生理与心理的痛苦水平，但在此之前必须经历一段漫长而痛苦的调整期，而且人类与众多其他生命体也将付出惨重代价，永远沦为社会机器上的齿轮。更有甚者，假如这个体系幸存下来，将会导致不可避免的后果：没有任何方法能够改革或改进这一体系，使之不至于剥夺人的尊严与自主。 假如这一体系崩溃，结果依旧会十分痛苦。但是体系规模越大，崩溃造成的结果就越可怕。因此假如真要崩溃的话最好赶早不赶迟。 所以我们主张发动针对工业体系的革命。这场革命可能使用或不使用暴力，可能突然完成也可能在几十年时间里相对循序渐进地进行。我们无法预测这一点。但是我们的确为那些憎恨工业体系的人们勾勒了一套十分宽泛的方法，从而为反对这一特定社会形式的革命铺平道路。这不是一场政治革命。革命目标并非推翻政府，而是颠覆现存社会的经济与技术基础。 一般来说科学家都是这样。可能其中也有少数例外，但总体而言他们的动机既不是好奇也不是造福人类，而是完成权力过程的需要。其他动机对于许多科学家来说也有作用，例如金钱与地位。 科学技术也构成了群体权力运动，许多科学家都通过认同这一运动来满足自己的权力需求。 因此科学盲目地前进，不考虑人类种族的真正福祉或任何其他标准，仅仅服从科学家以及提供研究资金的政府官员与企业高管的心理需求。 体系需要科学家、数学家与工程师，否则就无法正常运作。 遗传工程的伦理规范事实上将成为管制人类遗传构造的手段。一部分人（多半是上层阶级）将决定如此这般的遗传工程合乎“道德”，如此这般的做法则不道德，因而他们将在实际上将自己的价值观强加于整个人口的遗传构造。即使伦理规范是以完全民主的方式选择出来的，多数族裔也会将他们自己的价值观强加于那些很可能对于如何 “道德地”运用遗传工程另有看法的少数族裔。真正能够保护自由的伦理规范只能是一条，那就是禁止任何人类遗传工程。而我们可以十分有把握地说，这一点恰恰不可能在技术社会中得到实现。任何将遗传工程贬低成配角的规范都不可能维持下去，因为生物技术的巨大力量所产生的诱惑是无法抗拒的。特别是在大多数人看来，大量生物技术的应用显然且肯定是有益的（可以根除身体与精神疾病，赋予人们当今世界所需要的能力）。基因技术必将不可避免地得到大规模应用，但应用方式只能与工业-技术体系的需求相一致。 技术之所以是如此强有力的社会力量的另一个理由是，在给定社会的条件下技术进步只会不可逆地朝一个方向前进。只要某项技术发明被引进，人们就往往会对其产生依赖，除非它被某种更先进的发明所取代。人们不仅仅作为个人依赖这项新技术。甚至体系作为一个整体都会依赖它。（例如请想像一下，如果没有了计算机，今天的体系会怎么样）因此，体系只能朝向更加技术化的方向移动。在不至于颠覆整个技术体系的前提下，技术将会不断地逼迫自由后退。 技术的进步十分迅速并在许多方面威胁自由（拥挤、规章制度、个人对于大型组织越发严重的依赖、宣传与其他心理学技术、遗传工程、通过监视设备和计算机侵犯隐私，等等），阻挡任何一项对于自由的威胁都需要一场单独的社会斗争。那些想要保卫自由的人会被无数的新攻势及其发展速度所压倒，他们会变得微不足道并停止抵抗。分别反击这些威胁是无效的。只有把技术体系作为一个整体来反击才有成功的希望，但这就是革命而不是改革了。 人们倾向于想当然地认为，由于革命带来的变化比改革大，所以革命也就比改革更难发动。实际上，在某些条件下革命比改革容易得多。这是因为一场革命运动能够激发出人们极大的献身热情，而一场改革运动却不能。一场革命运动许诺一下子解决所有问题并创造整个新世界；它提供人民为之甘冒风险、甘作牺牲的理想。由于这些理由，推翻整个技术体系要比对技术的某一部分——如遗传工程的应用发展——进行有效、持久的限制容易得多。在适当的条件下，许许多多的人会热情地献身于推翻工业技术体系的革命。正如我们提到的那样，寻求限制技术的某些方面的改革者是为了避免不良后果而工作。然而，革命者是为了获得强力的报偿——实现其革命理想——而工作，因此他们比改革者更努力且更执著。 现代社会不是去改变那些使人们抑郁的条件，而是给人们抗抑郁药。 但另一方面，请假设今后几十年的压力超出了体系的承受能力。如果体系崩溃，可能会有一个混乱时期，“动乱年代”，就像在过去各个时代历史所记载的那样。不可能预见动乱年代最后会产生什么结果。但无论如何人类会被赋予一个新机会。最大的危险是工业化社会很可能在崩溃后不几年就开始重组其自身，肯定会有许多人（特别是权力饥渴型的人们）急于重新开动工厂。 工业体系将人类贬低到了被奴役的状态，而憎恨这种被奴役状态的人则面临两个任务。第一，我们必须增强体系内的社会紧张态势，以加快其崩溃或把它弱化到足够程度，使得反对体系的革命成为可能。第二，当体系充分弱化时，我们必须发展并宣传一种反对技术和工业社会的意识形态。当工业社会崩溃时，这种意识形态将有助于保证其残余被粉碎到无法修复的地步，这样体系就无法重组。工厂将被捣毁，技术书籍将被烧掉，等等。 工业体系的崩溃不会纯粹是革命行动的结果，它不会那么难以抵御革命的攻击，除非它自身内部的发展问题导致了极为严重的困难。因此如果体系崩溃，那么它或是自发崩溃，或是部分自发、部分由革命者促发的崩溃。如果崩溃是突如其来的，许多人都会死去，因为世界人口已如此过分膨胀，离开了先进技术就无法养活自己。甚至即使崩溃足够缓慢，人口的减少可以主要通过出生率的降低而不是死亡率的提高而实现，非工业化的过程也多半是极度混乱和极度痛苦的。幻想通过平稳控制的有序方式逐步废除技术是天真的，特别是要考虑到技术爱好者们的负隅顽抗。那么，致力于体系的崩溃是否因此就十分残酷呢？也许是，也许不是。首先，除非体系本来就已经陷入了深重的困难，无论如何都很可能最终自行崩溃，否者单靠革命者是不可能强行使其崩溃的。而且体系发展得规模越大，崩溃的后果就越严重。因此加速体系崩溃的革命者或许反倒控制了灾难的规模。 其次，我们必须权衡斗争与死亡和丧失自由与尊严这两方面的得失。对于我们之中的许多人来说，自由与尊严比长寿和避免肉体痛苦更重要。再者，我们早晚会死，死于为生存或为某一事业而战，强于活得空虚而无目的。 第三，体系的存续所带来的痛苦并不一定就比体系崩溃所带来的痛苦更少。在全世界范围内，体系已经招致、并且正在招致的巨大痛苦曾使人类千百年与他人以及环境和睦相处的古代文化被与其解接触的工业社会所摧毁。其结果就是全方位的经济、环境、社会和心理问题。工业社会的侵扰所产生的影响之一，就是传统的人口控制在全球范围内一下子失去了平衡，因而产生了人口爆炸及其所有连带后果。接着就是心理疾病席卷了整个所谓“幸运”的西方社会。没有人知道臭氧层耗尽、温室效应及其他现在还不能预测的环境问题最终会为这个世界带来怎样的后果。而且就像核扩散已经显示的那样，我们无法防止新技术落入独裁者和不负责任的第三世界国家手中。愿意猜猜伊位克或北朝鲜将用遗传工程来干什么吗? “嗨！”技术爱好者们会说，“科学能解决所有这些问题！我们将征服饥荒、消灭心理病痛，让每一个人都健康而快乐！”是的，是的。他们200年前就是这么说的。人们曾指望工业社会能够消灭贫穷，使每一个人都快乐，等等。实际结果却不是那么回事。技术爱好者对社会问题的理解简直是无可救药地天真（或自欺欺人）。他们没有意识到（或故意视而不见）这样一个事实：当巨大的变化，即使是看上去有利的变化，被引入一个社会时，将会引发一长串其他变化，这些变化之中的大都分是不可预见的其结果则是社会的混乱。因此，技术爱好者们在试图消灭贫穷和疾病，设计制造驯顺、快乐的人格等等时，很可能会创造出比现在还糟糕的社会体系。例如，科学家们吹嘘说他们能够创造出新的、经遗传工程改造的粮食植物以消灭饥荒。然而，这将会允许人口无限膨胀下去，而众所周知，拥挤会导致紧张和攻击性的增强。这仅仅是技术会导致的可预见问题中的一个例子。我们强调指出，历史经验告诉我们，技术进步给社会带来新问题的速度远比它解决旧问题的速度要快。因此技术爱好者们要经过一个漫长的试错时期才能够为他们的美丽新世界排除掉所有的故障（假设他们最终能做到的话）。而与此同时所产生的痛苦将会如此巨大，以至于体系生存下去所带来的痛苦不见得就比体系崩溃更少。技术己将人类带入了一条无法轻易逃脱的死胡同。 更好的办法是把这个腐朽的体系整个扔进垃圾堆，并勇敢地承受其后果。 现在的两个主要任务是在工业社会中促进社会紧张与不稳定，以及宣传一种反对技术和工业体系的意识形态。当体系变得足够紧张和不稳定时，一场反对技术的革命就有机会发动了。这一模式将十分类似于法国和俄国革命。在两国各自革命之前的几十年里，法国和俄国社会都显示出了越来越多的紧张与脆弱迹象。同时，提供一个与旧世界完全不同的新世界愿景的意识形态发展了起来。以俄国的情况为例，革命者积极从事于破坏旧秩序的工作。然后当旧体系面临着足够的额外紧张时（法国是财政危机，俄国是军事失败），它就会被革命一扫而光。我们预想的就是这样的道路。 大多数革命都有两个目标，一个目标是摧毁一个旧社会，另一个目标是建立革命者想像的新社会。法国和俄国的革命者没有能够成功地建立他们所梦想的新社会（这是十分幸运的事），但她们非常成功地摧毁了既存社会。 然而，一种意识形态如想争取到热情支持，除了负面理想外必须还有正面理想，决不能只破不立。我们的正面理想是自然，即野生自然，按照其本来面目运行的地球，不依赖于人类管理、摆脱人类干涉和控制的地球生灵。我们的野生自然也包括人类本性，即不受有组织社会管制、自主运行的个人，成为偶然性或自由意志或上帝（由你的宗教或哲学观念）的产物。 一个社会的经济与技术结构在决定一般人的生活方式方面远比政治结构更加重要。 我们不应主张无力或消极，我们应主张打破工业体系的权力，而这将大大增加个人和小群体的权力和自由。 （据称）贯穿整个历史，技术都是进步的，从未退步过，因此技术退步是不可能的。但这并非事实。对于“进步”的热情是现代社会形态的特殊现象，在大约十七世纪之前并不存在。 进步”的热情是现代社会形态的特殊现象，在大约十七世纪之前并不存在。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"}],"tags":[]},{"title":"中村","slug":"杂谈/教育/中村","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.706Z","comments":true,"path":"2018/01/01/杂谈/教育/中村/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/教育/中村/","excerpt":"","text":"中村修二关于东亚教育一、东亚教育：效率低下，所有人都深受其苦东亚的教育体制是比较特异的，经常是得到局外人的赞赏和局内人的诟病。日本的教育体制已经相对算这三国里比较宽松的了，有些国家就别提了，老师、学生、家长所有人都深受其苦。 至于韩国也是以极端的应试主义和学历主义闻名的。首尔大学（Seoul National University）、高丽大学（KoreaUniversity）和延世大学（Yonsei University）总称为”SKY”，韩国最大规模企业的总裁们，70%是这三所大学的毕业生，而80%的司法机构公务员来自这三所大学。 韩国孩子几乎都要上补习班，2009年韩国补习班获利总额约73亿美元，这比三星电子的盈利还多，教育支出庞大是韩国人不敢生育更多孩子的最大原因。2012年，经合组织进行了”国际学生能力评估计划”，在数学和阅读项目上，韩国学生在所有成员国中排名第一。但是，这项成就是以相当低的效率取得的，有评价说：“这些孩子是靠双倍的努力加双倍的花费……才得到这样的成绩。” 为何东亚会有这样的教育体系呢？我觉得，是因为东亚国家在现代教育体系本来就有的普鲁士的基因，再加上了东亚儒家和科举传统。而对于有的国家来说，可以说又加上了苏联式教育的实用速成导向和思想灌输功能。 二、东亚教育具有循规蹈矩的“普鲁士基因”在十九世纪之前，教育其实是个类似手工业的学徒制，不管是东方的私塾还是西方的家庭教师。但是随着科目的增加和对受基本教育的劳动人口的需求，出现了所谓的K-12（也就是我们亚洲的普通中小学）教育制度。 现代各国的标准教育模式，是我们已经以为天经地义的几个基本要素： 早上七八点钟走进教学楼； 在长达40-60分钟的课程中全程坐着听课，在课堂上，教师负责讲，学生负责听； 穿插在课程之间的有午餐以及体育课的时间； 放学后，学生回家做作业。 在标准化课程表的禁锢下，原本浩瀚而美不胜收的人类思想领域被人为地切割成了一块块，一块块便于管理的部分，并被称为”学科”。同样，原本行云流水、融会、融会贯通的概念被分成了成了一个个单独的”课程单元”。 这个模式，是在18世纪是由普鲁士人最先实施的。是他们最先发明了我们如今的课堂教学模式。普鲁士人的初衷并不是教育出能够独立思考的学生，而是大量炮制忠诚且易于管理的国民，他们在学校里学到的价值观让他们服从包括父母、老师和教堂在内的权威，当然，最终要服从国王。 当然，普鲁士教育体系在当时的很多方面都具有创新意义。这样的教育体系让上万人成了中产阶级，为德国成为工业强国提供了至关重要的原动力。基于当时的技术水平，要在普鲁士王国实现人人都接受教育的目标，最经济的方法或许就是采用普鲁士教育体制。 然而，该体制阻碍了学生进行更为深入的探究，对他们独立思考的能力有害无益。不过，在19世纪，高水平的创造力逻辑思维能力也许不如思想上服从指挥、行动上掌握基本技能那么重要。 在19世纪上半叶，美国基本照搬了普鲁士的教育体系，就像在普鲁士一样，这一举措能够大力推动中产阶级的构建，使他们有能力在蓬勃发展的工业领域谋得一份工作。除了美国，这个体系在十九世纪也被其他欧洲国家仿效，并推广到欧美以外其他国家。 但是，如今的经济现状已经不再需要顺从且遵守纪律的劳动阶层，相反，它对劳动者的阅读能力、数学素养和人文底蕴的要求越来越高。 当今社会需要的是具有创造力、充满好奇心并能自我引导的终身学习者，需他们有能力提出新颖的想法并付诸实施，不幸的是，普鲁士教育体的目标与这一社会需求恰恰相反。如今的教育完全忽视了人与人之间异常美妙的多样性与细微差别，而正是这些多样性性与细差别让人们在智力、想象力和天赋方面各不相同。 三、普鲁士基因以外，东亚教育还深受儒家传统和科举制度影响东亚三国在19世纪末为了追赶西方列强而开始引进这种现代教育制度时，又不可避免地由于自己的儒家传统和科举制度，而对这个制度作出了潜意识的扭曲和偏重。 1、对大学入学考试和科举制度的混淆 东亚国家对大学入学考试，总是会和他们长期的科举传统混在一起。古代社会对创造力没有那么大的需求，所以科举是个很好的制度，以最小的冲突完成了社会管理者的选拔，且完成了一个以智力取代门阀的准绳的建立。 如果要和科举模拟的话，现在的对应物应当是公务员考试或者某些大公司的入职考试。因为这些考试和科举一样，是需要选拔出已经训练有素的成年人，马上就可以从事某些工作。 而大学入学考试，目标则是要选出可塑性强而又有志向者进行下一步的教育，这样的人要好像从熔炉里取出的液态玻璃，可以旋转拉长，可塑性极强。而科举考试得到的人员，则要像上了釉彩的出窑瓷器，马上就可以使用，但是如果你做什么改动，不是破裂就是刮伤。 此外，考试是个用处非常有局限的工具。古代的科举对人才的遗漏尽人皆知，而现代不管哪种考试，能考得出考生的兴趣、志向、想象力和实际操作能力的有哪些呢？即使是已经看起来最客观最可衡量的数学考试，也会遗失很多东西。 可汗学院创始人萨尔曼可汗举了代数为例子。在学习代数时，学生们多半只专注于在考试中获得高分，考试的内容仅仅是各单元学习中最重要的部分。考生们只记住了一大堆X和y，只要将X和y代入死记硬背的公式，就可以得到它们的值。考试中的X和y体现不出代数的力量及其重要性。代数的重要性及魅力之处在于，所有这些X和y代表的是无穷的现象和观点。 在计算上市公司的生产成本时使用的等式，也可以用来计算物体在太空的动量；同样的等式不仅可以用来计算拋物线的最佳路径，还可以为新产品确定最合适的价格。 计算遗传病患病率的方法同样可以在橄榄球赛中用来判断是否应该在第四节发起进攻。在考试中，大部分学生并没有将代数视为探索世界时简单方便且用途多样的工具，反而其视为亟待跨越的障碍。 所以，虽然考试是很重要的，但是社会必须能认识到考试的极大局限性，并削弱它在选材中的位置。 美国的教育制度以双保险的方式抑制学生在在考试上过分浪费精力：其一，SAT的考分只是录取考虑的诸因素中的一项，过于重视SAT是不明智的；其二，SAT每年有6次报考机会。 台湾、中国的教育制度则以加倍的方式促使学生浪费青春：其一，联考分数是录取与否的决定性因素；其二，联考一年一度。 2、东亚国家对复习的过度重视 2009年释出的”中日韩美四国高中生权益状况比较研究报告”显示：78.3%的中国普通高中学生平时（不包括周末和节假日）每天在校学习时间在8小时以上，韩国为57.2%，而日本和美国几乎不存在这样的情况。中国学生每日学习的时间最长。各国学生所学内容的多少相差不会太大，那么如果学习时间过长，意味着什么?意味着复习时间所占比重过大。这是扼杀学生想象力、创造力的最大手段。 说起复习的重要性，人们经常会引用”学而时习之”，这个”习”就是复习。但是，孔子时代与今天社会有个巨大差异，是学习的内容。孔子时代的主要学习内容是”礼”，扮演者唯反复演练才可达到效果。 但是，人类的社会生活演化到近现代，学习的主要内容由”礼”转变为认知。认知是拓展和变化的，其本质是创造或学习新的东西。如果教育过度强化复习，是产生不出创新人才的。 而且，正如保罗葛兰素所说的”即使在最好的高中里学到的知识，和大学相比也是微不足道的。”以文科为例，那几本高中需要反复诵读的历史课本上的知识，和随便几本大学历史系必读书比起来如何?至于数学呢，即使是中学数学都掌握很好了，还没有学到十七世纪就出现的微积分。 何况，随着知识的爆炸，1900年所有的数学知识可以塞进1000本书里，到2000年已经需要10万卷书了（德夫林《数学犹聊天》）。可见，花了人一生中精力最充沛的几年时间反复学习这么有限的知识，是多么低效的学习法啊。 这几年有个流行的一万小时理论，对反复练习好像是个理论上的支持。但是，这种论述的多在【认知复杂性】较低的活动，如象棋、钢琴、篮球、出租车驾驶、拼写。但是，对于【认知复杂性】较高的活动，如创作、管理等作用就很难找到足够的证据。其实，这一点反而可以用来说明，为什么钢琴小提琴这类技艺的训练在西方业已式微，而在东亚国家却大为兴盛。 这类十九世纪就已经蔚为大成的技艺，特点是难度训练阶梯比较固定，知识总量也已经限定，只需要多加练习即可，而且学习的进度，又可以通过曲目难度或考级来衡量。这正好切合了东亚偏爱的学习法。 所以东亚国家这些琴童家长，多半既没有音乐爱好也不了解古典音乐背景知识，却让孩子花了大量时间练习，其内在出发点，就好像著名笑话中那位因为路灯比较亮，就只在路灯下找钥匙的愚人一样。 3、平均主义和匮乏心态的影响 很多对联考的辩解，都是说，虽然联考不尽如人意，但是是最公平的。这是儒家传统上”不患寡而患不均”思想的影响。公平并没有错，但是如果为了公平，就反而一刀切压制了不同类型的人才发展途径，那就很可悲了。东亚国家的人口基数那么大，这种人才浪费的机会成本也是高得很难估量。 举个其他国家的例子。欧洲学术界有个比较，像英国和德国都算是古典学术的学霸类国家，但是英国这方面的人才要出色不少。究其原因，反而是因为英国的教育制度不够公平。英国有一些中学进去后由于传统原因，上好大学的可能性非常高，这样里面的学生很早就可以不慌不忙地淫浸在庞大的古典学术中。 反过来，德国比较公平，所有学生上大学都要通过考核，这样，学生反而要花更多精力在通用的备考科目上面。结果英国这种表面的不公平反而有可能造就优质人才。 这就像彼得·提尔的《从0到1》中的举的商业上的例子，表面上完全竞争好像比较公平，实际上参加这样竞争的企业利润会变得像刀刃一样薄，朝不保夕，只能顾着眼前利益，不可能对未来做长远规划。 而类似谷歌这样的垄断企业，因为不用记挂着和其他企业竞争，反而可以由更大的自主权关心自己的产品和做各种长远得简直不靠谱的计划。所以学生如果长期处在考试的竞争压力下，自然也就不可能有长远的自我成长计划，而只能把心思集中在将会决定一生道路的一次次考试上。 另一方面，东亚国家从幼儿园开始到大学的学习卡位战和争夺战，其实质是对有限的高质量教育资源的争夺，这个并非没有一定的道理。但是为何这个地区的争夺会达到这样的火热程度呢？那也许要归咎于长期物质匮乏导致的稀缺心态。 去年大热门的《匮乏经济学：为什么老是在赶Deadline？为什么老是觉得时间和金钱不够用?》指出，当人陷入稀缺的状态（物质或是时间）时，稀缺会俘获大脑时，人注意力的俘获，不仅会影响我们的所见的速度，而且也会影响我们对周遭世界的认识。而当我们为了解决眼下的难题而极度专注时，就无法有效地规划未来。 我觉得稀缺是东亚民族特有的状况。因为这些国家几千年来都是水稻密集型种植经济，一方面是可以在同等耕地情况下养活更多人，一方面当然是需要付出更多劳动和忍受更大拥挤。到了十七世纪后，就都陷入了内卷化的陷阱。 就以日本为例，15至19世纪，日本人口波动在1000万到2000万之间，约为英国同期人口的四倍。庞大的人口赖以生存的适耕土地，面积仅相当于英格兰的一个县，生产力却又不及英格兰的一个郡县。所以在德川时期，为了维持生存，日本人不但把勤劳节约发挥到了极点，甚至有两个匪夷所思的现象。 一个是日本政府出面来鼓励溺婴，以至于300年间人口零增长。另外，因为宝贵的土地不能用来给家畜提供饲料，日本人系统性地取消了车轮和家畜的使用这两项基础性农业技术，其结果呢，来一个形象的比喻，他们把鼻子保持在水以上，只要发生意外灾难或意外支出，就可能惨遭溺毙。这种东亚民族特有的匮乏和焦虑心态，不管是东南亚的土著民，欧美人，甚至非洲人，都无法理解。 所以对于教育资源，如果是狭义地理解为配备良好的教室、高阶教师之类的，那确实是有限的，对于长期处于稀缺的心理状态的东亚人来说，是一定要参与争夺的。 但是，实际上，孩子要成才，更重要的教育资源，其实是各自家庭的文化背景、价值观的言传身教、志向和视野的潜移默化，那根本和那种”你上了这个学校我就上不了”那样的零和博弈无关了。 而且，如果家长在稀缺心态的驱动下，让孩子从小沉浸在补习班和题海里，希望能先去抢到眼前看起来很稀缺的学校资源，也许从长远来看，就反而浪费了孩子最大的资源-有无限可能性的少年时光和天生的好奇心，那就是爱之适足以害之了。 4、工业化追赶带来的心态 影响近代工业化的起源在西欧，所以他们不管是经济社会还是教育体系，都有个比较和缓的自然进化发展期。而东亚国家是被裹挟进现代社会的，为了赶上其他国家，在工业体系上无一例外的采取了国家层面上有计划的指导下的发展。日本的工业化要归功于通产省的官僚们，韩国则是政府支持几个财阀来配合整个发展计划，而中国现在还有那么个五年计划在指导。 这种国家级计划是建立在十九世纪的理性主义的基础上，其内含的想法，是认为世界上没有问题是不能解决的，因而可以通过科学的考察而预测出事物将来准确的发展方向。 这种想法运用在教育体制上，就是假定某个机构可以准确地预测某个年纪的孩子需要掌握什么样的知识，某种考试可以选拔出什么样的人才等等，这种自信令人细思恐极。 而具体到学校和学习的具体操作上，为了适应工业化的人才需求而专门设立的东亚教育制度，比起自然发展的西方体系来说，更有工业化追赶期那种对效率的疯狂追求。这样，这些后进工业国的教育体系，反而比前驱工业国更像工厂的流水线一些。 在二十世纪初，泰勒制（Taylorism）在美国产业界盛行一时。泰勒认为、管理的根本目的在于提高效率。为此，他采取了制定工作定额、选择最好的工人、实施标准化管理、实施刺激性的付酬制度、强调雇主与工人合作的”精神革命”等。 这就将工人的潜能发挥到无以复加的程度，有人形容，在实行泰勒制的工厂里，找不出一个多余的工人，每个工人都像机器一样一刻不停地工作。泰勒理论的前提是把作为管理对象的”人”看作是”经济人”，利益驱动是该学派用以提高效率的主要法宝。现代最著名的泰勒制工厂莫过于富士康了。从报道中大家也可以猜想到这种高压环境对工人心理的影响。 而如果把东亚教育制度和泰勒制工厂来对比的话，我们会发现几乎是一一对应的关系，制定很高的学习量和需要考核的大量知识点、选择成绩好的学生组成重点学校、全国统一的考核标准、大量考试形成的刺激性奖惩、还有学校内部的各种打鸡血活动。学校目标也是要发挥学生的潜能，每一分钟都要致力于得到最好的成绩。 所以批评这种教育体系的人经常说，孩子好像是流水在线的工业制品，或者说，学生是老师的童工，他们的成绩就成为老师的绩效，所以师生的利益关系经常不是一致的，是相反的。这并不是简单的激愤之词，而是有一定的内在逻辑。 当然，因为东亚国家的勤劳传统，孩子们这么辛苦，如果确有效果，也不是不能接受。但问题就在于这个有效性上。 这种教育上的泰勒制，本质上是把学生当成体力工作者来对待。对于体力工作者，因为他们的工作状态是可见的，所以工厂管理比较容易，对他们的要求是”把事情做对”，而不是”做对的事情”。 而现代学生呢，我觉得更像德鲁克所定义的”知识工作者”（知识工作者不生产有形的东西，而是生产知识、创意和信息，谁也看不出他们到底在想些什么），而且从培养目的上也是要大多成为知识工作者。学生时代的真正成果，不是他们交上去的作业和考卷，而是他们所真正学习到和思考的内容。这些在技术上是无法进行严密的督导的。 所以要成为好学生，不是像体力劳动者一样忠实地完成老师的作业，而是要像知识工作者一样，具有有效性，也就是”做好该做的事情”。好学生一定得做到：要自我决定学习的侧重，衡量自己知识的掌握度，管理自己的学习时间。这就需要具有极大的主动性和自由度。 所以，悲剧的是，由于东亚教育体制的工业时代基因，他们是用训练体力劳动者的做法，来培养他们心目中未来的学者和企业家，这不免就南辕北辙了。 四、东亚教育急需改革，却越发走向僵硬东亚教育体制长期以来是利多于弊的。在工业化时期，可以为新建立的工业短期造就大量可堪一用的工人和初级工程师。所以东亚各国在二十世纪的飞速发展，这种教育体制有很大贡献。但是随着技术和经济的演变，这种体制就变得越发不合时宜。 这一点可以模拟成苏联时期的重工业。在这种体制下，采煤业是为了冶钢，冶钢是为了机械业，而机械业又是致力于生产采掘和冶炼机器，这样形成了内部的自我循环，而无视市场和竞争的实际需要。这种重工业在苏联的工业化时期，确实制造了大量本来缺少的工业制品，很有用处。但是到了某个发展阶段，其缺乏效率和国际竞争力的弱点就暴露出来了。到如今，苏联这个曾经的第二工业强国，他的汽车工业、机械工业还有什么价值呢?同样，东亚教育体制曾经批量培养出的大量标准化人才，不是也将会在新时代里变得越来越没有价值么? 更有甚者，为了脱离这种体制，很多东亚家庭送了孩子去欧美留学，可是除非他们留在国外，如果回国就业，海归们还是要以他们毕业的各种学校为求职砝码，这就又陷入了比较学校名气的漩涡。就好像中世纪时印度很多低阶种姓为了摆脱种姓制度的压迫，皈依了外来的伊斯兰教，但是在无所不在的种姓思想下，穆斯林也被视为一种种姓，同样还是陷入这个等级体系之中。所以托福、SAT这些美国考试制度，在东亚也无形中被融合到富有东方风情的应试主义和学历主义的体系里。 这种体制由于造就了多个既得利益阶层，所以很难撼动，甚至会像上面说的苏联重工业综合体或印度种姓制度一样，”病得至死方休”。苏联时期的重工业不停地制造对社会无益的武器，形成一个利益相关势力，浪费了大量社会资源，直到整个国家体制崩溃。而印度种姓制度，从佛陀时代就饱受批评，却一直祸害了印度几千年，直到今天还是印度前进道路上的巨大障碍，就是因为背后有大量的高种姓的既得利益者。 东亚的教育体制呢，一方面，养活了庞大的低效率又思想陈旧的各类公私教育机构（这一点类似苏联工业集团），另一方面，通过对学历的看重，占据社会中高阶层的，多半都是最适应这个体制者，而这个阶层又通过在应试教育上的更多支出，保证自己的下一代在这个考试体系中也能脱颖而出，从而把自己在社会地位上的优势又传给了下一代（这一点又有点像种姓制度）。 这个急需改革的体制，就这样在各个社会集团的共谋下愈发僵硬了。 这个急需改革的体制，就这样在各个社会集团的共谋下愈发僵硬了。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"教育","slug":"杂谈/教育","permalink":"http://blog.scavenger.top/categories/杂谈/教育/"}],"tags":[]},{"title":"学校篇","slug":"杂谈/回忆录/第一次/学校篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第一次/学校篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第一次/学校篇/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第一次","slug":"杂谈/回忆录/第一次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第一次/"}],"tags":[]},{"title":"找工作篇","slug":"杂谈/回忆录/第一次/找工作篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第一次/找工作篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第一次/找工作篇/","excerpt":"","text":"[ ] —","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第一次","slug":"杂谈/回忆录/第一次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第一次/"}],"tags":[]},{"title":"回去篇","slug":"杂谈/回忆录/第一次/回去篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第一次/回去篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第一次/回去篇/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第一次","slug":"杂谈/回忆录/第一次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第一次/"}],"tags":[]},{"title":"迷茫篇","slug":"杂谈/回忆录/第一次/迷茫篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第一次/迷茫篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第一次/迷茫篇/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第一次","slug":"杂谈/回忆录/第一次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第一次/"}],"tags":[]},{"title":"工作篇","slug":"杂谈/回忆录/第二次/工作篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第二次/工作篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第二次/工作篇/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第二次","slug":"杂谈/回忆录/第二次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第二次/"}],"tags":[]},{"title":"二次上海之行","slug":"杂谈/回忆录/第二次/二次上海之行","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.733Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第二次/二次上海之行/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第二次/二次上海之行/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第二次","slug":"杂谈/回忆录/第二次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第二次/"}],"tags":[]},{"title":"开学前篇","slug":"杂谈/回忆录/第二次/开学前篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.733Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第二次/开学前篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第二次/开学前篇/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第二次","slug":"杂谈/回忆录/第二次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第二次/"}],"tags":[]},{"title":"开学时篇","slug":"杂谈/回忆录/第二次/开学时篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.733Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第二次/开学时篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第二次/开学时篇/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第二次","slug":"杂谈/回忆录/第二次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第二次/"}],"tags":[]},{"title":"意外的巧合","slug":"杂谈/回忆录/第二次/意外的巧合","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.733Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第二次/意外的巧合/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第二次/意外的巧合/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第二次","slug":"杂谈/回忆录/第二次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第二次/"}],"tags":[]},{"title":"沉迷——觉醒篇","slug":"杂谈/回忆录/第二次/沉迷——觉醒篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第二次/沉迷——觉醒篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第二次/沉迷——觉醒篇/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第二次","slug":"杂谈/回忆录/第二次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第二次/"}],"tags":[]},{"title":"工作篇","slug":"杂谈/回忆录/第一次/工作篇","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第一次/工作篇/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第一次/工作篇/","excerpt":"","text":"","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第一次","slug":"杂谈/回忆录/第一次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第一次/"}],"tags":[]},{"title":"贪婪","slug":"杂谈/回忆录/第二次/贪婪","date":"2018-01-01T04:12:12.000Z","updated":"2018-06-17T12:25:34.736Z","comments":true,"path":"2018/01/01/杂谈/回忆录/第二次/贪婪/","link":"","permalink":"http://blog.scavenger.top/2018/01/01/杂谈/回忆录/第二次/贪婪/","excerpt":"","text":"人性的的贪婪人性是什么？我也不知道 但我知道，那是我灵魂中有贪婪的影子。贪婪并不是罪过，原始的草原上，野兽为了更多的食物，会去杀死，其他的动物。 我辞职了，因为要回家。真是太难熬，那种感觉又出现了。颓废吗？无助吗？可以选择安逸的环境吗？在风中瑟瑟发抖的我，停不下要去抓住毯子的手。怠惰 怠惰 晚上买了，回家的火车票。第二天没事干，于是去火车站取火车票。这本该是轻松愉快的。 我换上我的黑色长风衣，穿上高帮的篮球鞋。到了火车站，在自动取票机前插上身份证，滴！系统显示这张身份证有一张票。我暗自庆幸，我真聪明，没有买去郑州的票，而是买的安阳的，郑州的票近一月的都没有，春运我第一次赶上了。 走出取票大厅，一个面容憔悴的男人朝我走了过来，“嘿，学生，过来过来，要买东西吗？”（我经常被认为是学生，或是店员）当时我高傲的想去看看他是如何骗人的。他掏出一部iphone7plus，“要吗？刚弄到的，已经解锁的，看！有这个手机的是个女的，开跑车，住别墅的”他打开了手机的相册。我是手机行家，如今市场上有很多高仿的以安卓充当iphone的，我可以分辨出，极致高仿的手机。我从那个男的手里接过手机，瞧了瞧，翻开系统，不错，是iphone。“学生来这旅游的吧，有很多学生都从我这里买过手机了，只不过我现在吸毒，急需用钱”说着，他向我露出了手臂上的针眼“这手机你要买去要6000多块的，现在急需用钱，就3000给你吧”我先是一惊，我也没打算要，况且我没有那么多钱。“我没有那么多钱，不好意思，我不要“ 那个男的急忙说”值钱的东西也可以啊“。”我有一个杂牌电脑，要不要？“不要不要，要了卖不出去” “2500，不能再低了” “没钱没钱，一千块还可以考虑考虑”我急着要走。 那男人慌了，拉着我“1000就1000，算你走运，要不是我急着用钱。” 本来坚定要走的心，在此时动摇了，1000块，那可是6000多块的手机，买了就净赚一个月的工钱，况且现在我的手机已经快坏了，早晚要换个手机，不如。。 “行”我一摸口袋，没带现金，诶 买不成了。那个男人急忙从口袋里翻出一个小纸片，是二维码。“你们还真是与时俱进啊”扫给他钱，“滴”余额不足，不好意思了，只剩700块了。“他有些激动地说：”都扫给我，都扫给我！“ 扫完他钱，手机递给我后，我很高兴，按了好一会儿开机键，手机也没开机，这时我才发觉过来这时一个机模。我猛地回身，只见火车站茫茫人海，哪还见骗子的踪影。 我想去找警察，可转念一想，我这可是销赃，扯上警察那就麻烦了。 被掉包了我在火车站附近徘徊了好久，也没找到那个骗子，我甚至想不起那个骗子长什么模样。 诶，就当是买了机票吧，只不过做的是火车 被骗了，也想不出第几次被骗 各种各样的精美骗局 我的角度 缺钱 那是我真是穷疯了，吃的每一顿饭都要节省，几个月的饭钱就几百块。除了吃饭就很少花钱了- 缺钱导致的愚蠢 穷人愚蠢，不是他们有人格缺陷，而是他们缺钱。一个食不果腹的人，想的是能吃饱饭。于是乎，他的注意力就会不自觉的放到可以吃饱饭的方向上，而忽略了更有价值的事情 不该有的好奇心 不该有的高傲姿态 社会角度 教育的缺失 社会压力的冲击 贫富的差距 人们普遍缺钱，但又找不到挣钱的方法，或是嫌钱来的慢，亦或是懒惰 欺骗，偷窃 从地球上有生命开始就从没有停下过，在人们的普遍观念中，偷窃，欺骗 是罪过，应受罚，应抵制。 但这只是从被偷，被欺骗的人的角度来想的， 饥饿中，一只狼在窥视另一只狼抢来的食物，却不慎被那只狼咬了一口 ——18.05.15","categories":[{"name":"杂谈","slug":"杂谈","permalink":"http://blog.scavenger.top/categories/杂谈/"},{"name":"回忆录","slug":"杂谈/回忆录","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/"},{"name":"第二次","slug":"杂谈/回忆录/第二次","permalink":"http://blog.scavenger.top/categories/杂谈/回忆录/第二次/"}],"tags":[]}]}